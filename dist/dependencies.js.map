{"version":3,"sources":["node_modules/cuid/lib/pad.js","node_modules/cuid/lib/fingerprint.browser.js","node_modules/cuid/lib/getRandomValue.browser.js","node_modules/cuid/index.js","node_modules/lib0/map.js","node_modules/lib0/set.js","node_modules/lib0/array.js","node_modules/lib0/observable.js","node_modules/lib0/math.js","node_modules/lib0/string.js","node_modules/lib0/conditions.js","node_modules/lib0/storage.js","../../../../.config/yarn/global/node_modules/process/browser.js","node_modules/lib0/environment.js","node_modules/lib0/binary.js","node_modules/lib0/decoding.js","../../../../.config/yarn/global/node_modules/base64-js/index.js","../../../../.config/yarn/global/node_modules/ieee754/index.js","../../../../.config/yarn/global/node_modules/isarray/index.js","../../../../.config/yarn/global/node_modules/buffer/index.js","node_modules/lib0/buffer.js","node_modules/lib0/number.js","node_modules/lib0/encoding.js","node_modules/isomorphic.js/browser.mjs","node_modules/lib0/isomorphic.js","node_modules/lib0/random.js","node_modules/lib0/error.js","node_modules/lib0/object.js","node_modules/lib0/function.js","node_modules/lib0/symbol.js","node_modules/lib0/pair.js","node_modules/lib0/dom.js","node_modules/lib0/json.js","node_modules/lib0/eventloop.js","node_modules/lib0/metric.js","node_modules/lib0/time.js","node_modules/lib0/logging.js","node_modules/lib0/iterator.js","../src/structs/Skip.js","../src/utils/AbstractConnector.js","../src/utils/DeleteSet.js","../src/utils/Doc.js","../src/utils/UpdateDecoder.js","../src/utils/UpdateEncoder.js","../src/utils/encoding.js","../src/utils/EventHandler.js","../src/utils/ID.js","../src/utils/isParentOf.js","../src/utils/logging.js","../src/utils/PermanentUserData.js","../src/utils/RelativePosition.js","../src/utils/Snapshot.js","../src/utils/StructStore.js","../src/utils/Transaction.js","../src/utils/UndoManager.js","../src/utils/updates.js","../src/utils/YEvent.js","../src/types/AbstractType.js","../src/types/YArray.js","../src/types/YMap.js","../src/types/YText.js","../src/types/YXmlFragment.js","../src/types/YXmlElement.js","../src/types/YXmlEvent.js","../src/types/YXmlHook.js","../src/types/YXmlText.js","../src/structs/AbstractStruct.js","../src/structs/GC.js","../src/structs/ContentBinary.js","../src/structs/ContentDeleted.js","../src/structs/ContentDoc.js","../src/structs/ContentEmbed.js","../src/structs/ContentFormat.js","../src/structs/ContentJSON.js","../src/structs/ContentAny.js","../src/structs/ContentString.js","../src/structs/ContentType.js","../src/structs/Item.js","node_modules/lib0/promise.js","node_modules/lib0/indexeddb.js","node_modules/lib0/mutex.js","node_modules/y-indexeddb/src/y-indexeddb.js","node_modules/lib0/websocket.js","node_modules/lib0/broadcastchannel.js","node_modules/simple-peer/simplepeer.min.js","node_modules/y-protocols/sync.js","node_modules/y-protocols/awareness.js","node_modules/y-webrtc/src/crypto.js","node_modules/y-webrtc/src/y-webrtc.js","_header.js","node_modules/browser-pack-flat/_prelude","packages/@interactjs/utils/isWindow.ts","packages/@interactjs/utils/window.ts","packages/@interactjs/utils/is.ts","packages/@interactjs/actions/drag/plugin.ts","packages/@interactjs/utils/domObjects.ts","packages/@interactjs/utils/browser.ts","packages/@interactjs/utils/domUtils.ts","packages/@interactjs/utils/extend.ts","packages/@interactjs/utils/rect.ts","packages/@interactjs/utils/getOriginXY.ts","packages/@interactjs/utils/normalizeListeners.ts","packages/@interactjs/utils/hypot.ts","packages/@interactjs/utils/pointerExtend.ts","packages/@interactjs/utils/pointerUtils.ts","packages/@interactjs/core/BaseEvent.ts","packages/@interactjs/utils/arr.ts","packages/@interactjs/actions/drop/DropEvent.ts","packages/@interactjs/actions/drop/plugin.ts","packages/@interactjs/actions/gesture/plugin.ts","packages/@interactjs/actions/resize/plugin.ts","packages/@interactjs/actions/plugin.ts","packages/@interactjs/utils/raf.ts","packages/@interactjs/auto-scroll/plugin.ts","packages/@interactjs/utils/misc.ts","packages/@interactjs/auto-start/InteractableMethods.ts","packages/@interactjs/auto-start/base.ts","packages/@interactjs/auto-start/dragAxis.ts","packages/@interactjs/auto-start/hold.ts","packages/@interactjs/auto-start/plugin.ts","packages/@interactjs/core/interactablePreventDefault.ts","packages/@interactjs/dev-tools/visualizer/plugin.ts","packages/@interactjs/dev-tools/plugin.ts","packages/@interactjs/utils/clone.ts","packages/@interactjs/modifiers/Modification.ts","packages/@interactjs/modifiers/base.ts","packages/@interactjs/core/options.ts","packages/@interactjs/core/InteractEvent.ts","packages/@interactjs/core/PointerInfo.ts","packages/@interactjs/core/Interaction.ts","packages/@interactjs/offset/plugin.ts","packages/@interactjs/inertia/plugin.ts","packages/@interactjs/core/Eventable.ts","packages/@interactjs/core/isNonNativeEvent.ts","packages/@interactjs/core/InteractStatic.ts","packages/@interactjs/core/Interactable.ts","packages/@interactjs/core/InteractableSet.ts","packages/@interactjs/core/events.ts","packages/@interactjs/core/interactionFinder.ts","packages/@interactjs/core/interactions.ts","packages/@interactjs/core/scope.ts","packages/@interactjs/interact/index.ts","packages/@interactjs/snappers/edgeTarget.ts","packages/@interactjs/snappers/elements.ts","packages/@interactjs/snappers/grid.ts","packages/@interactjs/snappers/plugin.ts","packages/@interactjs/modifiers/aspectRatio.ts","packages/@interactjs/modifiers/noop.ts","packages/@interactjs/modifiers/restrict/pointer.ts","packages/@interactjs/modifiers/restrict/edges.ts","packages/@interactjs/modifiers/restrict/rect.ts","packages/@interactjs/modifiers/restrict/size.ts","packages/@interactjs/modifiers/snap/pointer.ts","packages/@interactjs/modifiers/snap/size.ts","packages/@interactjs/modifiers/snap/edges.ts","packages/@interactjs/modifiers/all.ts","packages/@interactjs/modifiers/plugin.ts","packages/@interactjs/pointer-events/PointerEvent.ts","packages/@interactjs/pointer-events/base.ts","packages/@interactjs/pointer-events/holdRepeat.ts","packages/@interactjs/pointer-events/interactableTargets.ts","packages/@interactjs/pointer-events/plugin.ts","packages/@interactjs/reflow/plugin.ts","packages/@interactjs/interactjs/index.ts","packages/interactjs/index.ts","node_modules/browser-pack-flat/_postlude","dependencies.js"],"names":["create","Map","copy","m","r","forEach","v","k","set","setIfUndefined","map","key","createT","get","undefined","f","res","value","push","any","all","Set","toArray","Array","from","last","arr","length","a","slice","appendTo","dest","src","i","every","some","equalFlat","b","item","index","flatten","reduce","acc","val","concat","Observable","constructor","_observers","on","name","add","once","_f","args","off","observers","delete","size","emit","array","values","destroy","floor","Math","ceil","abs","imul","round","log10","log2","log","sqrt","min","max","isNaN","Number","pow","exp10","exp","sign","isNegativeZero","n","fromCharCode","String","fromCodePoint","toLowerCase","s","trimLeftRegex","trimLeft","replace","fromCamelCaseRegex","fromCamelCase","separator","match","utf8ByteLength","str","unescape","encodeURIComponent","_encodeUtf8Polyfill","encodedString","len","buf","Uint8Array","codePointAt","utf8TextEncoder","TextEncoder","_encodeUtf8Native","encode","encodeUtf8","_decodeUtf8Polyfill","remainingLen","bufPos","nextLen","bytes","subarray","apply","decodeURIComponent","escape","utf8TextDecoder","TextDecoder","fatal","ignoreBOM","decode","_decodeUtf8Native","decodeUtf8","undefinedToNull","VarStoragePolyfill","setItem","newValue","getItem","_localStorage","usePolyfill","localStorage","e","varStorage","onChange","eventHandler","addEventListener","cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","Item","noop","nextTick","arguments","prototype","title","env","argv","version","versions","addListener","removeListener","removeAllListeners","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","isNode","release","test","isBrowser","window","isMac","navigator","platform","params","computeParams","pargs","currParamName","parg","location","search","split","kv","string","hasParam","has","getParam","defaultVal","getVariable","conditions","toUpperCase","storage","getConf","hasConf","production","BIT1","BIT2","BIT3","BIT4","BIT5","BIT6","BIT7","BIT8","BIT9","BIT10","BIT11","BIT12","BIT13","BIT14","BIT15","BIT16","BIT17","BIT18","BIT19","BIT20","BIT21","BIT22","BIT23","BIT24","BIT25","BIT26","BIT27","BIT28","BIT29","BIT30","BIT31","BIT32","BITS0","BITS1","BITS2","BITS3","BITS4","BITS5","BITS6","BITS7","BITS8","BITS9","BITS10","BITS11","BITS12","BITS13","BITS14","BITS15","BITS16","BITS17","BITS18","BITS19","BITS20","BITS21","BITS22","BITS23","BITS24","BITS25","BITS26","BITS27","BITS28","BITS29","BITS30","BITS31","BITS32","Decoder","uint8Array","pos","createDecoder","hasContent","decoder","clone","newPos","_decoder","readUint8Array","view","buffer","createUint8ArrayViewFromArrayBuffer","byteOffset","readVarUint8Array","readVarUint","readTailAsUint8Array","skip8","readUint8","readUint16","uint","readUint32","readUint32BigEndian","peekUint8","peekUint16","peekUint32","num","binary","readVarInt","peekVarUint","peekVarInt","readVarString","peekVarString","readFromDataView","dv","DataView","readFloat32","getFloat32","readFloat64","getFloat64","readBigInt64","getBigInt64","readBigUint64","getBigUint64","readAnyLookupTable","obj","readAny","RleDecoder","reader","count","read","IntDiffDecoder","start","RleIntDiffDecoder","UintOptRleDecoder","isNegative","math","IncUintOptRleDecoder","IntDiffOptRleDecoder","diff","hasCount","StringDecoder","spos","end","createUint8ArrayFromLen","createUint8ArrayFromArrayBuffer","toBase64Browser","byteLength","btoa","toBase64Node","Buffer","toString","fromBase64Browser","atob","charCodeAt","fromBase64Node","toBase64","fromBase64","copyUint8Array","newBuf","encodeAny","data","encoder","encoding","createEncoder","writeAny","toUint8Array","decodeAny","decoding","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","LOWEST_INT32","HIGHEST_INT32","isInteger","isFinite","Encoder","cpos","cbuf","bufs","uint8arr","curPos","d","verifyLen","bufferLen","write","writeUint8","setUint8","writeUint16","setUint16","writeUint32","writeUint32BigEndian","setUint32","writeVarUint","writeVarInt","writeVarString","writeBinaryEncoder","append","writeUint8Array","leftCopyLen","rightCopyLen","writeVarUint8Array","writeOnDataView","dview","writeFloat32","setFloat32","writeFloat64","setFloat64","writeBigInt64","setBigInt64","writeBigUint64","setBigUint64","floatTestBed","ArrayBuffer","isFloat32","number","keys","Object","RleEncoder","writer","w","IntDiffEncoder","RleIntDiffEncoder","flushUintOptRleEncoder","UintOptRleEncoder","IncUintOptRleEncoder","flushIntDiffOptRleEncoder","encodedDiff","IntDiffOptRleEncoder","StringEncoder","sarr","lensE","join","performance","isoCrypto","crypto","cryptoRandomBuffer","getRandomValues","random","rand","uint32","Uint32Array","oneOf","uuidv4Template","uuidv4","c","methodUnimplemented","unexpectedCase","assign","results","hasProperty","hasOwnProperty","callAll","fs","nop","id","equalityStrict","equalityFlat","object","equalityDeep","Symbol","isSymbol","Pair","left","right","createReversed","p","doc","document","createElement","createDocumentFragment","createTextNode","text","domParser","DOMParser","emitCustomEvent","el","opts","dispatchEvent","CustomEvent","setAttributes","attrs","pair","removeAttribute","setAttribute","setAttributesMap","fragment","children","appendChild","parent","nodes","remove","removeEventListener","addEventListeners","node","removeEventListeners","element","canvas","width","height","pairToStyleString","pairsToStyleString","pairs","mapToStyleString","querySelector","query","querySelectorAll","getElementById","_parse","html","parseFromString","body","parseFragment","childNodes","parseElement","firstElementChild","replaceWith","oldEl","newEl","insertBefore","ref","child","ELEMENT_NODE","TEXT_NODE","CDATA_SECTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","checkNodeType","type","nodeType","isParentOf","parentNode","stringify","JSON","parse","_runQueue","enqueue","createTimeoutClass","clearFunction","timeoutId","_","Timeout","callback","Interval","clearInterval","interval","setInterval","Animation","arg","requestAnimationFrame","cancelAnimationFrame","animationFrame","cb","Idle","cancelIdleCallback","idleCallback","requestIdleCallback","createDebouncer","timer","yotta","zetta","exa","peta","tera","giga","mega","kilo","hecto","deca","deci","centi","milli","micro","nano","pico","femto","atto","zepto","yocto","prefixUp","prefixDown","prefix","baseMultiplier","nPow","mult","getDate","Date","getUnixTime","now","humanizeDuration","metric","seconds","minutes","hours","days","BOLD","symbol","UNBOLD","BLUE","GREY","GREEN","RED","PURPLE","ORANGE","UNCOLOR","_browserStyleMap","_nodeStyleMap","computeBrowserLoggingArgs","strBuilder","styles","currentStyle","logArgs","style","dom","unshift","computeNodeLoggingArgs","computeLoggingArgs","print","console","vconsoles","vc","warn","printError","err","error","printImg","url","printImgBase64","base64","group","groupCollapsed","groupEnd","printDom","createNode","printCanvas","toDataURL","_computeLineSpans","spans","span","innerHTML","content","json","lineStyle","VConsole","ccontainer","depth","collapsed","eventloop","triangleDown","triangleRight","nextContainer","nextLine","event","toggleAttribute","parentElement","createVConsole","loggingColors","nextColor","lastLoggingTime","time","createModuleLogger","moduleName","color","debugRegexVar","doLogging","RegExp","timeNow","timeDiff","func","mapIterator","iterator","next","done","createIterator","iteratorFilter","filter","iteratorMap","fmap","math.floor","math.max","decoding.readVarUint","map.setIfUndefined","random.uint32","random.uuidv4","decoding.readUint8","decoding.readVarString","decoding.readAny","buffer.copyUint8Array","decoding.readVarUint8Array","decoding.IntDiffOptRleDecoder","decoding.UintOptRleDecoder","decoding.RleDecoder","decoding.StringDecoder","encoding.createEncoder","encoding.toUint8Array","error.unexpectedCase","encoding.IntDiffOptRleEncoder","encoding.UintOptRleEncoder","encoding.RleEncoder","encoding.writeUint8","encoding.StringEncoder","map.create","binary.BITS5","binary.BIT7","binary.BIT8","binary.BIT6","decoding.createDecoder","f.callAll","decoding.hasContent","decoding.readVarInt","set.create","map.any","math.min","logging.ORANGE","logging.print","logging.BOLD","logging.UNBOLD","logging.RED","time.getUnixTime","array.last","math.abs","error.methodUnimplemented","error.create","iterator.iteratorFilter","iterator.iteratorMap","object.equalFlat","map.copy","binary.BIT2","binary.BIT4","binary.BIT1","binary.BIT3","Promise","createEmpty","arrp","reject","reason","resolve","until","check","intervalResolution","startTime","hasTimeout","intervalHandle","wait","isPromise","then","catch","finally","rtop","request","promise","onerror","target","onblocked","reload","onsuccess","result","openDB","initDB","indexedDB","open","onupgradeneeded","db","onversionchange","close","deleteDB","deleteDatabase","createStores","definitions","createObjectStore","transact","stores","access","transaction","store","getStore","range","del","put","addAutoKey","getAll","getAllKeys","queryFirst","direction","first","iterateKeys","getLastKey","getFirstKey","getAllKeysValues","ks","vs","iterateOnRequest","cursor","continue","iterate","keyrange","openCursor","openKeyCursor","t","objectStore","createIDBKeyRangeBound","lower","upper","lowerOpen","upperOpen","IDBKeyRange","bound","createIDBKeyRangeUpperBound","upperBound","createIDBKeyRangeLowerBound","lowerBound","createMutex","token","g","customStoreName","updatesStoreName","PREFERRED_TRIM_SIZE","fetchUpdates","idbPersistence","updatesStore","idb","_dbref","updates","_mux","Y","applyUpdate","lastKey","cnt","_dbsize","storeState","forceStore","encodeStateAsUpdate","clearDocument","IndexeddbPersistence","mutex","synced","_db","autoIncrement","whenSynced","currState","_storeTimeout","_storeTimeoutId","_storeUpdate","update","bind","clearData","custom","reconnectTimeoutBase","maxReconnectTimeout","messageReconnectTimeout","setupWS","wsclient","shouldConnect","ws","websocket","WebSocket","binaryType","pingTimeout","connecting","connected","onmessage","lastMessageReceived","message","sendPing","onclose","unsuccessfulReconnects","send","onopen","WebsocketClient","_checkInterval","disconnect","connect","channels","LocalStoragePolyfill","room","postMessage","BC","BroadcastChannel","getChannel","subs","bc","sub","subscribe","unsubscribe","publish","messageYjsSyncStep1","messageYjsSyncStep2","messageYjsUpdate","writeSyncStep1","sv","encodeStateVector","writeSyncStep2","encodedStateVector","readSyncStep1","readSyncStep2","transactionOrigin","writeUpdate","readUpdate","readSyncMessage","messageType","outdatedTimeout","Awareness","clientID","states","meta","getLocalState","lastUpdated","setLocalState","clientid","removeAwarenessStates","state","currLocalMeta","clock","prevState","added","updated","filteredUpdated","removed","setLocalStateField","field","getStates","awareness","clients","origin","curMeta","encodeAwarenessUpdate","modifyAwarenessUpdate","modify","modifiedState","applyAwarenessUpdate","timestamp","clientMeta","currClock","deriveKey","secret","roomName","secretBuffer","salt","subtle","importKey","keyMaterial","iterations","hash","encrypt","iv","cipher","encryptedDataEncoder","encryptJson","dataEncoder","decrypt","dataDecoder","decryptJson","decryptedValue","logging","messageSync","messageQueryAwareness","messageAwareness","messageBcPeerId","signalingConns","rooms","checkIsSynced","webrtcConns","peer","provider","readMessage","syncedCallback","sendReply","syncMessageType","syncProtocol","awarenessProtocol","peerName","peerId","bcConns","webrtcPeers","bcPeers","broadcastBcPeerId","readPeerMessage","peerConn","remotePeerId","sendWebrtcConn","webrtcConn","broadcastWebrtcConn","conn","WebrtcConn","signalingConn","initiator","closed","Peer","peerOpts","signal","publishSignalingMessage","to","awarenessStates","announceSignalingInfo","answer","broadcastBcMessage","cryptoutils","mux","broadcastRoomMessage","bcconnected","topics","maxConns","filterBcConns","encoderPeerIdBc","Room","_bcSubscriber","reply","_docUpdateHandler","_awarenessUpdateHandler","changedClients","encoderAwareness","encoderSync","encoderState","encoderAwarenessQuery","encoderAwarenessState","openRoom","topic","SignalingConn","providers","execMessage","emitPeerChange","WebrtcProvider","signaling","password","signalingUrls","globalThis","External","cuid","interact"],"mappings":"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EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,GAAA,EAAA,EAAA,GAAA,IAAA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,IAAA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,IAAA,EAAA,EAAA,EAAA,MAAA,CAAA,GAAA,IAAA,EAAA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,OAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,KAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,MAAA,IAAA,IAAA,EAAA,GAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MAAA,IAAA,GAAA,GAAA,IAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,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","file":"dependencies.js","sourceRoot":"../code/webapp","sourcesContent":["module.exports = function pad (num, size) {\n  var s = '000000000' + num;\n  return s.substr(s.length - size);\n};\n","var pad = require('./pad.js');\n\nvar env = typeof window === 'object' ? window : self;\nvar globalCount = Object.keys(env).length;\nvar mimeTypesLength = navigator.mimeTypes ? navigator.mimeTypes.length : 0;\nvar clientId = pad((mimeTypesLength +\n  navigator.userAgent.length).toString(36) +\n  globalCount.toString(36), 4);\n\nmodule.exports = function fingerprint () {\n  return clientId;\n};\n","\nvar getRandomValue;\n\nvar crypto = typeof window !== 'undefined' &&\n  (window.crypto || window.msCrypto) ||\n  typeof self !== 'undefined' &&\n  self.crypto;\n\nif (crypto) {\n    var lim = Math.pow(2, 32) - 1;\n    getRandomValue = function () {\n        return Math.abs(crypto.getRandomValues(new Uint32Array(1))[0] / lim);\n    };\n} else {\n    getRandomValue = Math.random;\n}\n\nmodule.exports = getRandomValue;\n","/**\n * cuid.js\n * Collision-resistant UID generator for browsers and node.\n * Sequential for fast db lookups and recency sorting.\n * Safe for element IDs and server-side lookups.\n *\n * Extracted from CLCTR\n *\n * Copyright (c) Eric Elliott 2012\n * MIT License\n */\n\nvar fingerprint = require('./lib/fingerprint.js');\nvar pad = require('./lib/pad.js');\nvar getRandomValue = require('./lib/getRandomValue.js');\n\nvar c = 0,\n  blockSize = 4,\n  base = 36,\n  discreteValues = Math.pow(base, blockSize);\n\nfunction randomBlock () {\n  return pad((getRandomValue() *\n    discreteValues << 0)\n    .toString(base), blockSize);\n}\n\nfunction safeCounter () {\n  c = c < discreteValues ? c : 0;\n  c++; // this is not subliminal\n  return c - 1;\n}\n\nfunction cuid () {\n  // Starting with a lowercase letter makes\n  // it HTML element ID friendly.\n  var letter = 'c', // hard-coded allows for sequential access\n\n    // timestamp\n    // warning: this exposes the exact date and time\n    // that the uid was created.\n    timestamp = (new Date().getTime()).toString(base),\n\n    // Prevent same-machine collisions.\n    counter = pad(safeCounter().toString(base), blockSize),\n\n    // A few chars to generate distinct ids for different\n    // clients (so different computers are far less\n    // likely to generate the same id)\n    print = fingerprint(),\n\n    // Grab some more chars from Math.random()\n    random = randomBlock() + randomBlock();\n\n  return letter + timestamp + counter + print + random;\n}\n\ncuid.slug = function slug () {\n  var date = new Date().getTime().toString(36),\n    counter = safeCounter().toString(36).slice(-4),\n    print = fingerprint().slice(0, 1) +\n      fingerprint().slice(-1),\n    random = randomBlock().slice(-2);\n\n  return date.slice(-2) +\n    counter + print + random;\n};\n\ncuid.isCuid = function isCuid (stringToCheck) {\n  if (typeof stringToCheck !== 'string') return false;\n  if (stringToCheck.startsWith('c')) return true;\n  return false;\n};\n\ncuid.isSlug = function isSlug (stringToCheck) {\n  if (typeof stringToCheck !== 'string') return false;\n  var stringLength = stringToCheck.length;\n  if (stringLength >= 7 && stringLength <= 10) return true;\n  return false;\n};\n\ncuid.fingerprint = fingerprint;\n\nmodule.exports = cuid;\n","/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template X,Y\n * @param {Map<X,Y>} m\n * @return {Map<X,Y>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template T,K\n * @param {Map<K, T>} map\n * @param {K} key\n * @param {function():T} createT\n * @return {T}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n","/**\n * Utility module to work with sets.\n *\n * @module set\n */\n\nexport const create = () => new Set()\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {Array<T>}\n */\nexport const toArray = set => Array.from(set)\n","/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {Array<L>} arr\n * @return {L}\n */\nexport const last = arr => arr[arr.length - 1]\n\n/**\n * @template C\n * @return {Array<C>}\n */\nexport const create = () => /** @type {Array<C>} */ ([])\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nexport const appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i])\n  }\n}\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nexport const from = Array.from\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template ITEM\n *\n * @param {Array<ITEM>} arr\n * @param {function(ITEM, number, Array<ITEM>):boolean} f\n * @return {boolean}\n */\nexport const every = (arr, f) => arr.every(f)\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template S\n * @param {Array<S>} arr\n * @param {function(S, number, Array<S>):boolean} f\n * @return {boolean}\n */\nexport const some = (arr, f) => arr.some(f)\n\n/**\n * @template ELEM\n *\n * @param {Array<ELEM>} a\n * @param {Array<ELEM>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nexport const flatten = arr => arr.reduce((acc, val) => acc.concat(val), [])\n","/**\n * Observable class prototype.\n *\n * @module observable\n */\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as array from './array.js'\n\n/**\n * Handles named events.\n *\n * @template N\n */\nexport class Observable {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, _f)\n      f(...args)\n    }\n    this.on(name, _f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n","/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n","/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* istanbul ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* istanbul ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* istanbul ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* istanbul ignore next */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* istanbul ignore next */\n  utf8TextDecoder = null\n}\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* istanbul ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n","/**\n * Often used conditions.\n *\n * @module conditions\n */\n\n/**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */\n/* istanbul ignore next */\nexport const undefinedToNull = v => v === undefined ? null : v\n","/* global localStorage, addEventListener */\n\n/**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */\n\n/* istanbul ignore next */\nclass VarStoragePolyfill {\n  constructor () {\n    this.map = new Map()\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} newValue\n   */\n  setItem (key, newValue) {\n    this.map.set(key, newValue)\n  }\n\n  /**\n   * @param {string} key\n   */\n  getItem (key) {\n    return this.map.get(key)\n  }\n}\n\n/* istanbul ignore next */\n/**\n * @type {any}\n */\nlet _localStorage = new VarStoragePolyfill()\nlet usePolyfill = true\n\ntry {\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\n  /* istanbul ignore next */\n  if (typeof localStorage !== 'undefined') {\n    _localStorage = localStorage\n    usePolyfill = false\n  }\n} catch (e) { }\n\n/* istanbul ignore next */\n/**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */\nexport const varStorage = _localStorage\n\n/* istanbul ignore next */\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\nexport const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler))\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */\n\nimport * as map from './map.js'\nimport * as string from './string.js'\nimport * as conditions from './conditions.js'\nimport * as storage from './storage.js'\n\n/* istanbul ignore next */\n// @ts-ignore\nexport const isNode = typeof process !== 'undefined' && process.release && /node|io\\.js/.test(process.release.name)\n/* istanbul ignore next */\nexport const isBrowser = typeof window !== 'undefined' && !isNode\n/* istanbul ignore next */\nexport const isMac = typeof navigator !== 'undefined' ? /Mac/.test(navigator.platform) : false\n\n/**\n * @type {Map<string,string>}\n */\nlet params\nconst args = []\n\n/* istanbul ignore next */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create()\n      const pargs = process.argv\n      let currParamName = null\n      /* istanbul ignore next */\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i]\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '')\n          }\n          currParamName = parg\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg)\n            currParamName = null\n          } else {\n            args.push(parg)\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '')\n      }\n    // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = map.create()\n      // eslint-disable-next-line no-undef\n      ;(location.search || '?').slice(1).split('&').forEach(kv => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=')\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\n        }\n      })\n    } else {\n      params = map.create()\n    }\n  }\n  return params\n}\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* istanbul ignore next */\nexport const hasParam = name => computeParams().has(name)\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* istanbul ignore next */\nexport const getParam = (name, defaultVal) => computeParams().get(name) || defaultVal\n// export const getArgs = name => computeParams() && args\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* istanbul ignore next */\nexport const getVariable = name => isNode ? conditions.undefinedToNull(process.env[name.toUpperCase()]) : conditions.undefinedToNull(storage.varStorage.getItem(name))\n\n/**\n * @param {string} name\n * @return {string|null}\n */\nexport const getConf = name => computeParams().get('--' + name) || getVariable(name)\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* istanbul ignore next */\nexport const hasConf = name => hasParam('--' + name) || getVariable(name) !== null\n\n/* istanbul ignore next */\nexport const production = hasConf('production')\n","/* eslint-env browser */\n\n/**\n * Binary data constants.\n *\n * @module binary\n */\n\n/**\n * n-th bit activated.\n *\n * @type {number}\n */\nexport const BIT1 = 1\nexport const BIT2 = 2\nexport const BIT3 = 4\nexport const BIT4 = 8\nexport const BIT5 = 16\nexport const BIT6 = 32\nexport const BIT7 = 64\nexport const BIT8 = 128\nexport const BIT9 = 256\nexport const BIT10 = 512\nexport const BIT11 = 1024\nexport const BIT12 = 2048\nexport const BIT13 = 4096\nexport const BIT14 = 8192\nexport const BIT15 = 16384\nexport const BIT16 = 32768\nexport const BIT17 = 65536\nexport const BIT18 = 1 << 17\nexport const BIT19 = 1 << 18\nexport const BIT20 = 1 << 19\nexport const BIT21 = 1 << 20\nexport const BIT22 = 1 << 21\nexport const BIT23 = 1 << 22\nexport const BIT24 = 1 << 23\nexport const BIT25 = 1 << 24\nexport const BIT26 = 1 << 25\nexport const BIT27 = 1 << 26\nexport const BIT28 = 1 << 27\nexport const BIT29 = 1 << 28\nexport const BIT30 = 1 << 29\nexport const BIT31 = 1 << 30\nexport const BIT32 = 1 << 31\n\n/**\n * First n bits activated.\n *\n * @type {number}\n */\nexport const BITS0 = 0\nexport const BITS1 = 1\nexport const BITS2 = 3\nexport const BITS3 = 7\nexport const BITS4 = 15\nexport const BITS5 = 31\nexport const BITS6 = 63\nexport const BITS7 = 127\nexport const BITS8 = 255\nexport const BITS9 = 511\nexport const BITS10 = 1023\nexport const BITS11 = 2047\nexport const BITS12 = 4095\nexport const BITS13 = 8191\nexport const BITS14 = 16383\nexport const BITS15 = 32767\nexport const BITS16 = 65535\nexport const BITS17 = BIT18 - 1\nexport const BITS18 = BIT19 - 1\nexport const BITS19 = BIT20 - 1\nexport const BITS20 = BIT21 - 1\nexport const BITS21 = BIT22 - 1\nexport const BITS22 = BIT23 - 1\nexport const BITS23 = BIT24 - 1\nexport const BITS24 = BIT25 - 1\nexport const BITS25 = BIT26 - 1\nexport const BITS26 = BIT27 - 1\nexport const BITS27 = BIT28 - 1\nexport const BITS28 = BIT29 - 1\nexport const BITS29 = BIT30 - 1\nexport const BITS30 = BIT31 - 1\n/**\n * @type {number}\n */\nexport const BITS31 = 0x7FFFFFFF\n/**\n * @type {number}\n */\nexport const BITS32 = 0xFFFFFFFF\n","/**\n * Efficient schema-less binary decoding with support for variable length encoding.\n *\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = new encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = new decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module decoding\n */\n\nimport * as buffer from './buffer.js'\nimport * as binary from './binary.js'\nimport * as math from './math.js'\n\n/**\n * A Decoder handles the decoding of an Uint8Array.\n */\nexport class Decoder {\n  /**\n   * @param {Uint8Array} uint8Array Binary data to decode\n   */\n  constructor (uint8Array) {\n    /**\n     * Decoding target.\n     *\n     * @type {Uint8Array}\n     */\n    this.arr = uint8Array\n    /**\n     * Current decoding position.\n     *\n     * @type {number}\n     */\n    this.pos = 0\n  }\n}\n\n/**\n * @function\n * @param {Uint8Array} uint8Array\n * @return {Decoder}\n */\nexport const createDecoder = uint8Array => new Decoder(uint8Array)\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {boolean}\n */\nexport const hasContent = decoder => decoder.pos !== decoder.arr.length\n\n/**\n * Clone a decoder instance.\n * Optionally set a new position parameter.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} [newPos] Defaults to current position\n * @return {Decoder} A clone of `decoder`\n */\nexport const clone = (decoder, newPos = decoder.pos) => {\n  const _decoder = createDecoder(decoder.arr)\n  _decoder.pos = newPos\n  return _decoder\n}\n\n/**\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} len The length of bytes to read\n * @return {Uint8Array}\n */\nexport const readUint8Array = (decoder, len) => {\n  const view = buffer.createUint8ArrayViewFromArrayBuffer(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len)\n  decoder.pos += len\n  return view\n}\n\n/**\n * Read variable length Uint8Array.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readVarUint8Array = decoder => readUint8Array(decoder, readVarUint(decoder))\n\n/**\n * Read the rest of the content as an ArrayBuffer\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTailAsUint8Array = decoder => readUint8Array(decoder, decoder.arr.length - decoder.pos)\n\n/**\n * Skip one byte, jump to the next position.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} The next position\n */\nexport const skip8 = decoder => decoder.pos++\n\n/**\n * Read one byte as unsigned integer.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} Unsigned 8-bit integer\n */\nexport const readUint8 = decoder => decoder.arr[decoder.pos++]\n\n/**\n * Read 2 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint16 = decoder => {\n  const uint =\n    decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8)\n  decoder.pos += 2\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32 = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8) +\n    (decoder.arr[decoder.pos + 2] << 16) +\n    (decoder.arr[decoder.pos + 3] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32BigEndian = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos + 3] +\n    (decoder.arr[decoder.pos + 2] << 8) +\n    (decoder.arr[decoder.pos + 1] << 16) +\n    (decoder.arr[decoder.pos] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint8 = decoder => decoder.arr[decoder.pos]\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint16 = decoder =>\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8)\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint32 = decoder => (\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8) +\n  (decoder.arr[decoder.pos + 2] << 16) +\n  (decoder.arr[decoder.pos + 3] << 24)\n) >>> 0\n\n/**\n * Read unsigned integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarUint = decoder => {\n  let num = 0\n  let len = 0\n  while (true) {\n    const r = decoder.arr[decoder.pos++]\n    num = num | ((r & binary.BITS7) << len)\n    len += 7\n    if (r < binary.BIT8) {\n      return num >>> 0 // return unsigned number!\n    }\n    /* istanbul ignore if */\n    if (len > 35) {\n      throw new Error('Integer out of range!')\n    }\n  }\n}\n\n/**\n * Read signed integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarInt = decoder => {\n  let r = decoder.arr[decoder.pos++]\n  let num = r & binary.BITS6\n  let len = 6\n  const sign = (r & binary.BIT7) > 0 ? -1 : 1\n  if ((r & binary.BIT8) === 0) {\n    // don't continue reading\n    return sign * num\n  }\n  while (true) {\n    r = decoder.arr[decoder.pos++]\n    num = num | ((r & binary.BITS7) << len)\n    len += 7\n    if (r < binary.BIT8) {\n      return sign * (num >>> 0)\n    }\n    /* istanbul ignore if */\n    if (len > 41) {\n      throw new Error('Integer out of range!')\n    }\n  }\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarUint = decoder => {\n  const pos = decoder.pos\n  const s = readVarUint(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarInt = decoder => {\n  const pos = decoder.pos\n  const s = readVarInt(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * Read string of variable length\n * * varUint is used to store the length of the string\n *\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\n * when String.fromCodePoint is fed with all characters as arguments.\n * But most environments have a maximum number of arguments per functions.\n * For effiency reasons we apply a maximum of 10000 characters at once.\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String.\n */\nexport const readVarString = decoder => {\n  let remainingLen = readVarUint(decoder)\n  if (remainingLen === 0) {\n    return ''\n  } else {\n    let encodedString = String.fromCodePoint(readUint8(decoder)) // remember to decrease remainingLen\n    if (--remainingLen < 100) { // do not create a Uint8Array for small strings\n      while (remainingLen--) {\n        encodedString += String.fromCodePoint(readUint8(decoder))\n      }\n    } else {\n      while (remainingLen > 0) {\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000\n        // this is dangerous, we create a fresh array view from the existing buffer\n        const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen)\n        decoder.pos += nextLen\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n        remainingLen -= nextLen\n      }\n    }\n    return decodeURIComponent(escape(encodedString))\n  }\n}\n\n/**\n * Look ahead and read varString without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const peekVarString = decoder => {\n  const pos = decoder.pos\n  const s = readVarString(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * @param {Decoder} decoder\n * @param {number} len\n * @return {DataView}\n */\nexport const readFromDataView = (decoder, len) => {\n  const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len)\n  decoder.pos += len\n  return dv\n}\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat32 = decoder => readFromDataView(decoder, 4).getFloat32(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat64 = decoder => readFromDataView(decoder, 8).getFloat64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigInt64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigInt64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigUint64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigUint64(0, false)\n\n/**\n * @type {Array<function(Decoder):any>}\n */\nconst readAnyLookupTable = [\n  decoder => undefined, // CASE 127: undefined\n  decoder => null, // CASE 126: null\n  readVarInt, // CASE 125: integer\n  readFloat32, // CASE 124: float32\n  readFloat64, // CASE 123: float64\n  readBigInt64, // CASE 122: bigint\n  decoder => false, // CASE 121: boolean (false)\n  decoder => true, // CASE 120: boolean (true)\n  readVarString, // CASE 119: string\n  decoder => { // CASE 118: object<string,any>\n    const len = readVarUint(decoder)\n    /**\n     * @type {Object<string,any>}\n     */\n    const obj = {}\n    for (let i = 0; i < len; i++) {\n      const key = readVarString(decoder)\n      obj[key] = readAny(decoder)\n    }\n    return obj\n  },\n  decoder => { // CASE 117: array<any>\n    const len = readVarUint(decoder)\n    const arr = []\n    for (let i = 0; i < len; i++) {\n      arr.push(readAny(decoder))\n    }\n    return arr\n  },\n  readVarUint8Array // CASE 116: Uint8Array\n]\n\n/**\n * @param {Decoder} decoder\n */\nexport const readAny = decoder => readAnyLookupTable[127 - readUint8(decoder)](decoder)\n\n/**\n * T must not be null.\n *\n * @template T\n */\nexport class RleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {function(Decoder):T} reader\n   */\n  constructor (uint8Array, reader) {\n    super(uint8Array)\n    /**\n     * The reader\n     */\n    this.reader = reader\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = this.reader(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {T} */ (this.s)\n  }\n}\n\nexport class IntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    this.s += readVarInt(this)\n    return this.s\n  }\n}\n\nexport class RleIntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      this.s += readVarInt(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class UintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class IncUintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s++)\n  }\n}\n\nexport class IntDiffOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      const diff = readVarInt(this)\n      // if the first bit is set, we read more data\n      const hasCount = diff & 1\n      this.diff = diff >> 1\n      this.count = 1\n      if (hasCount) {\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.s += this.diff\n    this.count--\n    return this.s\n  }\n}\n\nexport class StringDecoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    this.decoder = new UintOptRleDecoder(uint8Array)\n    this.str = readVarString(this.decoder)\n    /**\n     * @type {number}\n     */\n    this.spos = 0\n  }\n\n  /**\n   * @return {string}\n   */\n  read () {\n    const end = this.spos + this.decoder.read()\n    const res = this.str.slice(this.spos, end)\n    this.spos = end\n    return res\n  }\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/**\n * Utility functions to work with buffers (Uint8Array).\n *\n * @module buffer\n */\n\nimport * as string from './string.js'\nimport * as env from './environment.js'\nimport * as encoding from './encoding.js'\nimport * as decoding from './decoding.js'\n\n/**\n * @param {number} len\n */\nexport const createUint8ArrayFromLen = len => new Uint8Array(len)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n * @param {number} byteOffset\n * @param {number} length\n */\nexport const createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length) => new Uint8Array(buffer, byteOffset, length)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n */\nexport const createUint8ArrayFromArrayBuffer = buffer => new Uint8Array(buffer)\n\n/* istanbul ignore next */\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Browser = bytes => {\n  let s = ''\n  for (let i = 0; i < bytes.byteLength; i++) {\n    s += string.fromCharCode(bytes[i])\n  }\n  // eslint-disable-next-line no-undef\n  return btoa(s)\n}\n\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Node = bytes => Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString('base64')\n\n/* istanbul ignore next */\n/**\n * @param {string} s\n * @return {Uint8Array}\n */\nconst fromBase64Browser = s => {\n  // eslint-disable-next-line no-undef\n  const a = atob(s)\n  const bytes = createUint8ArrayFromLen(a.length)\n  for (let i = 0; i < a.length; i++) {\n    bytes[i] = a.charCodeAt(i)\n  }\n  return bytes\n}\n\n/**\n * @param {string} s\n */\nconst fromBase64Node = s => {\n  const buf = Buffer.from(s, 'base64')\n  return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength)\n}\n\n/* istanbul ignore next */\nexport const toBase64 = env.isBrowser ? toBase64Browser : toBase64Node\n\n/* istanbul ignore next */\nexport const fromBase64 = env.isBrowser ? fromBase64Browser : fromBase64Node\n\n/**\n * Copy the content of an Uint8Array view to a new ArrayBuffer.\n *\n * @param {Uint8Array} uint8Array\n * @return {Uint8Array}\n */\nexport const copyUint8Array = uint8Array => {\n  const newBuf = createUint8ArrayFromLen(uint8Array.byteLength)\n  newBuf.set(uint8Array)\n  return newBuf\n}\n\n/**\n * Encode anything as a UInt8Array. It's a pun on typescripts's `any` type.\n * See encoding.writeAny for more information.\n *\n * @param {any} data\n * @return {Uint8Array}\n */\nexport const encodeAny = data => {\n  const encoder = encoding.createEncoder()\n  encoding.writeAny(encoder, data)\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Decode an any-encoded value.\n *\n * @param {Uint8Array} buf\n * @return {any}\n */\nexport const decodeAny = buf => decoding.readAny(decoding.createDecoder(buf))\n","/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\n\nexport const LOWEST_INT32 = 1 << 31\n/**\n * @type {number}\n */\nexport const HIGHEST_INT32 = binary.BITS31\n\n/**\n * @module number\n */\n\n/* istanbul ignore next */\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\nexport const isNaN = Number.isNaN\n","/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = new encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = new decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */\n\nimport * as buffer from './buffer.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as binary from './binary.js'\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */\nexport class Encoder {\n  constructor () {\n    this.cpos = 0\n    this.cbuf = new Uint8Array(100)\n    /**\n     * @type {Array<Uint8Array>}\n     */\n    this.bufs = []\n  }\n}\n\n/**\n * @function\n * @return {Encoder}\n */\nexport const createEncoder = () => new Encoder()\n\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */\nexport const length = encoder => {\n  let len = encoder.cpos\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    len += encoder.bufs[i].length\n  }\n  return len\n}\n\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */\nexport const toUint8Array = encoder => {\n  const uint8arr = new Uint8Array(length(encoder))\n  let curPos = 0\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    const d = encoder.bufs[i]\n    uint8arr.set(d, curPos)\n    curPos += d.length\n  }\n  uint8arr.set(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\n  return uint8arr\n}\n\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */\nconst verifyLen = (encoder, len) => {\n  const bufferLen = encoder.cbuf.length\n  if (bufferLen - encoder.cpos < len) {\n    encoder.bufs.push(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos))\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\n    encoder.cpos = 0\n  }\n}\n\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */\nexport const write = (encoder, num) => {\n  const bufferLen = encoder.cbuf.length\n  if (encoder.cpos === bufferLen) {\n    encoder.bufs.push(encoder.cbuf)\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\n    encoder.cpos = 0\n  }\n  encoder.cbuf[encoder.cpos++] = num\n}\n\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */\nexport const set = (encoder, pos, num) => {\n  let buffer = null\n  // iterate all buffers and adjust position\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n    const b = encoder.bufs[i]\n    if (pos < b.length) {\n      buffer = b // found buffer\n    } else {\n      pos -= b.length\n    }\n  }\n  if (buffer === null) {\n    // use current buffer\n    buffer = encoder.cbuf\n  }\n  buffer[pos] = num\n}\n\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint8 = write\n\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint8 = set\n\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint16 = (encoder, num) => {\n  write(encoder, num & binary.BITS8)\n  write(encoder, (num >>> 8) & binary.BITS8)\n}\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint16 = (encoder, pos, num) => {\n  set(encoder, pos, num & binary.BITS8)\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\n}\n\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32 = (encoder, num) => {\n  for (let i = 0; i < 4; i++) {\n    write(encoder, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32BigEndian = (encoder, num) => {\n  for (let i = 3; i >= 0; i--) {\n    write(encoder, (num >>> (8 * i)) & binary.BITS8)\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint32 = (encoder, pos, num) => {\n  for (let i = 0; i < 4; i++) {\n    set(encoder, pos + i, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write a variable length unsigned integer.\n *\n * Encodes integers in the range from [0, 4294967295] / [0, 0xffffffff]. (max 32 bit unsigned integer)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarUint = (encoder, num) => {\n  while (num > binary.BITS7) {\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\n    num >>>= 7\n  }\n  write(encoder, binary.BITS7 & num)\n}\n\n/**\n * Write a variable length integer.\n *\n * Encodes integers in the range from [-2147483648, -2147483647].\n *\n * We don't use zig-zag encoding because we want to keep the option open\n * to use the same function for BigInt and 53bit integers (doubles).\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarInt = (encoder, num) => {\n  const isNegative = math.isNegativeZero(num)\n  if (isNegative) {\n    num = -num\n  }\n  //             |- whether to continue reading         |- whether is negative     |- number\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\n  num >>>= 6\n  // We don't need to consider the case of num === 0 so we can use a different\n  // pattern here than above.\n  while (num > 0) {\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\n    num >>>= 7\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const writeVarString = (encoder, str) => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)))\n  }\n}\n\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\n\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeUint8Array = (encoder, uint8Array) => {\n  const bufferLen = encoder.cbuf.length\n  const cpos = encoder.cpos\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\n  const rightCopyLen = uint8Array.length - leftCopyLen\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\n  encoder.cpos += leftCopyLen\n  if (rightCopyLen > 0) {\n    // Still something to write, write right half..\n    // Append new buffer\n    encoder.bufs.push(encoder.cbuf)\n    // must have at least size of remaining buffer\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\n    // copy array\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\n    encoder.cpos = rightCopyLen\n  }\n}\n\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeVarUint8Array = (encoder, uint8Array) => {\n  writeVarUint(encoder, uint8Array.byteLength)\n  writeUint8Array(encoder, uint8Array)\n}\n\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */\nexport const writeOnDataView = (encoder, len) => {\n  verifyLen(encoder, len)\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\n  encoder.cpos += len\n  return dview\n}\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false)\n\nconst floatTestBed = new DataView(new ArrayBuffer(4))\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */\nconst isFloat32 = num => {\n  floatTestBed.setFloat32(0, num)\n  return floatTestBed.getFloat32(0) === num\n}\n\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * • Transforms data to a binary format (not to a string)\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * • Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */\nexport const writeAny = (encoder, data) => {\n  switch (typeof data) {\n    case 'string':\n      // TYPE 119: STRING\n      write(encoder, 119)\n      writeVarString(encoder, data)\n      break\n    case 'number':\n      if (number.isInteger(data) && data <= binary.BITS31) {\n        // TYPE 125: INTEGER\n        write(encoder, 125)\n        writeVarInt(encoder, data)\n      } else if (isFloat32(data)) {\n        // TYPE 124: FLOAT32\n        write(encoder, 124)\n        writeFloat32(encoder, data)\n      } else {\n        // TYPE 123: FLOAT64\n        write(encoder, 123)\n        writeFloat64(encoder, data)\n      }\n      break\n    case 'bigint':\n      // TYPE 122: BigInt\n      write(encoder, 122)\n      writeBigInt64(encoder, data)\n      break\n    case 'object':\n      if (data === null) {\n        // TYPE 126: null\n        write(encoder, 126)\n      } else if (data instanceof Array) {\n        // TYPE 117: Array\n        write(encoder, 117)\n        writeVarUint(encoder, data.length)\n        for (let i = 0; i < data.length; i++) {\n          writeAny(encoder, data[i])\n        }\n      } else if (data instanceof Uint8Array) {\n        // TYPE 116: ArrayBuffer\n        write(encoder, 116)\n        writeVarUint8Array(encoder, data)\n      } else {\n        // TYPE 118: Object\n        write(encoder, 118)\n        const keys = Object.keys(data)\n        writeVarUint(encoder, keys.length)\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i]\n          writeVarString(encoder, key)\n          writeAny(encoder, data[key])\n        }\n      }\n      break\n    case 'boolean':\n      // TYPE 120/121: boolean (true/false)\n      write(encoder, data ? 120 : 121)\n      break\n    default:\n      // TYPE 127: undefined\n      write(encoder, 127)\n  }\n}\n\n/**\n * Now come a few stateful encoder that have their own classes.\n */\n\n/**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */\nexport class RleEncoder extends Encoder {\n  /**\n   * @param {function(Encoder, T):void} writer\n   */\n  constructor (writer) {\n    super()\n    /**\n     * The writer\n     */\n    this.w = writer\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  /**\n   * @param {T} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      this.w(this, v)\n      this.s = v\n    }\n  }\n}\n\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */\nexport class IntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    writeVarInt(this, v - this.s)\n    this.s = v\n  }\n}\n\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n */\nexport class RleIntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v && this.count > 0) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      writeVarInt(this, v - this.s)\n      this.s = v\n    }\n  }\n}\n\n/**\n * @param {UintOptRleEncoder} encoder\n */\nconst flushUintOptRleEncoder = encoder => {\n  /* istanbul ignore else */\n  if (encoder.count > 0) {\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set sign to positive\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */\nexport class UintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */\nexport class IncUintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s + this.count === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */\nconst flushIntDiffOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    //          31 bit making up the diff | wether to write the counter\n    const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set first bit to positive\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encodedDiff)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */\nexport class IntDiffOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.diff === v - this.s) {\n      this.s = v\n      this.count++\n    } else {\n      flushIntDiffOptRleEncoder(this)\n      this.count = 1\n      this.diff = v - this.s\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushIntDiffOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */\nexport class StringEncoder {\n  constructor () {\n    /**\n     * @type {Array<string>}\n     */\n    this.sarr = []\n    this.s = ''\n    this.lensE = new UintOptRleEncoder()\n  }\n\n  /**\n   * @param {string} string\n   */\n  write (string) {\n    this.s += string\n    if (this.s.length > 19) {\n      this.sarr.push(this.s)\n      this.s = ''\n    }\n    this.lensE.write(string.length)\n  }\n\n  toUint8Array () {\n    const encoder = new Encoder()\n    this.sarr.push(this.s)\n    this.s = ''\n    writeVarString(encoder, this.sarr.join(''))\n    writeUint8Array(encoder, this.lensE.toUint8Array())\n    return toUint8Array(encoder)\n  }\n}\n","/* eslint-env browser */\nexport const performance = typeof window === 'undefined' ? null : (typeof window.performance !== 'undefined' && window.performance) || null\n\nconst isoCrypto = typeof crypto === 'undefined' ? null : crypto\n\n/**\n * @type {function(number):ArrayBuffer}\n */\nexport const cryptoRandomBuffer = isoCrypto !== null\n  ? len => {\n    // browser\n    const buf = new ArrayBuffer(len)\n    const arr = new Uint8Array(buf)\n    isoCrypto.getRandomValues(arr)\n    return buf\n  }\n  : len => {\n    // polyfill\n    const buf = new ArrayBuffer(len)\n    const arr = new Uint8Array(buf)\n    for (let i = 0; i < len; i++) {\n      arr[i] = Math.ceil((Math.random() * 0xFFFFFFFF) >>> 0)\n    }\n    return buf\n  }\n","/**\n * Isomorphic library exports from isomorphic.js.\n *\n * @module isomorphic\n */\n\n// @ts-ignore\nexport { performance, cryptoRandomBuffer } from 'isomorphic.js'\n","\n/**\n * Isomorphic module for true random numbers / buffers / uuids.\n *\n * Attention: falls back to Math.random if the browser does not support crypto.\n *\n * @module random\n */\n\nimport * as math from './math.js'\nimport { cryptoRandomBuffer } from './isomorphic.js'\n\nexport const rand = Math.random\n\n/* istanbul ignore next */\nexport const uint32 = () => new Uint32Array(cryptoRandomBuffer(4))[0]\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {T}\n */\nexport const oneOf = arr => arr[math.floor(rand() * arr.length)]\n\n// @ts-ignore\nconst uuidv4Template = [1e7] + -1e3 + -4e3 + -8e3 + -1e11\nexport const uuidv4 = () => uuidv4Template.replace(/[018]/g, /** @param {number} c */ c =>\n  (c ^ uint32() & 15 >> c / 4).toString(16)\n)\n","/**\n * Error helpers.\n *\n * @module error\n */\n\n/**\n * @param {string} s\n * @return {Error}\n */\n/* istanbul ignore next */\nexport const create = s => new Error(s)\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* istanbul ignore next */\nexport const methodUnimplemented = () => {\n  throw create('Method unimplemented')\n}\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* istanbul ignore next */\nexport const unexpectedCase = () => {\n  throw create('Unexpected case')\n}\n","/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */\n\n/**\n * @return {Object<string,any>} obj\n */\nexport const create = () => Object.create(null)\n\n/**\n * Object.assign\n */\nexport const assign = Object.assign\n\n/**\n * @param {Object<string,any>} obj\n */\nexport const keys = Object.keys\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):any} f\n */\nexport const forEach = (obj, f) => {\n  for (const key in obj) {\n    f(obj[key], key)\n  }\n}\n\n/**\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */\nexport const map = (obj, f) => {\n  const results = []\n  for (const key in obj) {\n    results.push(f(obj[key], key))\n  }\n  return results\n}\n\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const length = obj => keys(obj).length\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const some = (obj, f) => {\n  for (const key in obj) {\n    if (f(obj[key], key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const every = (obj, f) => {\n  for (const key in obj) {\n    if (!f(obj[key], key)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|symbol} key\n * @return {boolean}\n */\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\n\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a === b || (length(a) === length(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\n","/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\nimport * as array from './array.js'\nimport * as object from './object.js'\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nexport const callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args)\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1)\n    }\n  }\n}\n\nexport const nop = () => {}\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nexport const apply = f => f()\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nexport const id = a => a\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nexport const equalityStrict = (a, b) => a === b\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((a instanceof Array && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nexport const equalityDeep = (a, b) => {\n  if (a == null || b == null) {\n    return equalityStrict(a, b)\n  }\n  if (a.constructor !== b.constructor) {\n    return false\n  }\n  if (a === b) {\n    return true\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a)\n      b = new Uint8Array(b)\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false\n        }\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const value of a) {\n        if (!b.has(value)) {\n          return false\n        }\n      }\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const key of a.keys()) {\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n          return false\n        }\n      }\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        return false\n      }\n      for (const key in a) {\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false\n        }\n      }\n      break\n    case Array:\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false\n        }\n      }\n      break\n    default:\n      return false\n  }\n  return true\n}\n","/**\n * Utility module to work with EcmaScript Symbols.\n *\n * @module symbol\n */\n\n/**\n * Return fresh symbol.\n *\n * @return {Symbol}\n */\nexport const create = Symbol\n\n/**\n * @param {any} s\n * @return {boolean}\n */\nexport const isSymbol = s => typeof s === 'symbol'\n","/**\n * Working with value pairs.\n *\n * @module pair\n */\n\n/**\n * @template L,R\n */\nexport class Pair {\n  /**\n   * @param {L} left\n   * @param {R} right\n   */\n  constructor (left, right) {\n    this.left = left\n    this.right = right\n  }\n}\n\n/**\n * @template L,R\n * @param {L} left\n * @param {R} right\n * @return {Pair<L,R>}\n */\nexport const create = (left, right) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {R} right\n * @param {L} left\n * @return {Pair<L,R>}\n */\nexport const createReversed = (right, left) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):any} f\n */\nexport const forEach = (arr, f) => arr.forEach(p => f(p.left, p.right))\n\n/**\n * @template L,R,X\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):X} f\n * @return {Array<X>}\n */\nexport const map = (arr, f) => arr.map(p => f(p.left, p.right))\n","/* eslint-env browser */\n\n/**\n * Utility module to work with the DOM.\n *\n * @module dom\n */\n\nimport * as pair from './pair.js'\nimport * as map from './map.js'\n\n/* istanbul ignore next */\n/**\n * @type {Document}\n */\nexport const doc = /** @type {Document} */ (typeof document !== 'undefined' ? document : {})\n\n/**\n * @param {string} name\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const createElement = name => doc.createElement(name)\n\n/**\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nexport const createDocumentFragment = () => doc.createDocumentFragment()\n\n/**\n * @param {string} text\n * @return {Text}\n */\n/* istanbul ignore next */\nexport const createTextNode = text => doc.createTextNode(text)\n\n/* istanbul ignore next */\nexport const domParser = /** @type {DOMParser} */ (typeof DOMParser !== 'undefined' ? new DOMParser() : null)\n\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Object} opts\n */\n/* istanbul ignore next */\nexport const emitCustomEvent = (el, name, opts) => el.dispatchEvent(new CustomEvent(name, opts))\n\n/**\n * @param {Element} el\n * @param {Array<pair.Pair<string,string|boolean>>} attrs Array of key-value pairs\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const setAttributes = (el, attrs) => {\n  pair.forEach(attrs, (key, value) => {\n    if (value === false) {\n      el.removeAttribute(key)\n    } else if (value === true) {\n      el.setAttribute(key, '')\n    } else {\n      // @ts-ignore\n      el.setAttribute(key, value)\n    }\n  })\n  return el\n}\n\n/**\n * @param {Element} el\n * @param {Map<string, string>} attrs Array of key-value pairs\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const setAttributesMap = (el, attrs) => {\n  attrs.forEach((value, key) => { el.setAttribute(key, value) })\n  return el\n}\n\n/**\n * @param {Array<Node>|HTMLCollection} children\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nexport const fragment = children => {\n  const fragment = createDocumentFragment()\n  for (let i = 0; i < children.length; i++) {\n    appendChild(fragment, children[i])\n  }\n  return fragment\n}\n\n/**\n * @param {Element} parent\n * @param {Array<Node>} nodes\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const append = (parent, nodes) => {\n  appendChild(parent, fragment(nodes))\n  return parent\n}\n\n/**\n * @param {HTMLElement} el\n */\n/* istanbul ignore next */\nexport const remove = el => el.remove()\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\n/* istanbul ignore next */\nexport const addEventListener = (el, name, f) => el.addEventListener(name, f)\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\n/* istanbul ignore next */\nexport const removeEventListener = (el, name, f) => el.removeEventListener(name, f)\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\n/* istanbul ignore next */\nexport const addEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => addEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\n/* istanbul ignore next */\nexport const removeEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => removeEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {string} name\n * @param {Array<pair.Pair<string,string>|pair.Pair<string,boolean>>} attrs Array of key-value pairs\n * @param {Array<Node>} children\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const element = (name, attrs = [], children = []) =>\n  append(setAttributes(createElement(name), attrs), children)\n\n/**\n * @param {number} width\n * @param {number} height\n */\n/* istanbul ignore next */\nexport const canvas = (width, height) => {\n  const c = /** @type {HTMLCanvasElement} */ (createElement('canvas'))\n  c.height = height\n  c.width = width\n  return c\n}\n\n/**\n * @param {string} t\n * @return {Text}\n */\n/* istanbul ignore next */\nexport const text = createTextNode\n\n/**\n * @param {pair.Pair<string,string>} pair\n */\n/* istanbul ignore next */\nexport const pairToStyleString = pair => `${pair.left}:${pair.right};`\n\n/**\n * @param {Array<pair.Pair<string,string>>} pairs\n * @return {string}\n */\n/* istanbul ignore next */\nexport const pairsToStyleString = pairs => pairs.map(pairToStyleString).join('')\n\n/**\n * @param {Map<string,string>} m\n * @return {string}\n */\n/* istanbul ignore next */\nexport const mapToStyleString = m => map.map(m, (value, key) => `${key}:${value};`).join('')\n\n/**\n * @todo should always query on a dom element\n *\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {HTMLElement | null}\n */\n/* istanbul ignore next */\nexport const querySelector = (el, query) => el.querySelector(query)\n\n/**\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {NodeListOf<HTMLElement>}\n */\n/* istanbul ignore next */\nexport const querySelectorAll = (el, query) => el.querySelectorAll(query)\n\n/**\n * @param {string} id\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const getElementById = id => /** @type {HTMLElement} */ (doc.getElementById(id))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nconst _parse = html => domParser.parseFromString(`<html><body>${html}</body></html>`, 'text/html').body\n\n/**\n * @param {string} html\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nexport const parseFragment = html => fragment(/** @type {any} */ (_parse(html).childNodes))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const parseElement = html => /** @type HTMLElement */ (_parse(html).firstElementChild)\n\n/**\n * @param {HTMLElement} oldEl\n * @param {HTMLElement|DocumentFragment} newEl\n */\n/* istanbul ignore next */\nexport const replaceWith = (oldEl, newEl) => oldEl.replaceWith(newEl)\n\n/**\n * @param {HTMLElement} parent\n * @param {HTMLElement} el\n * @param {Node|null} ref\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const insertBefore = (parent, el, ref) => parent.insertBefore(el, ref)\n\n/**\n * @param {Node} parent\n * @param {Node} child\n * @return {Node}\n */\n/* istanbul ignore next */\nexport const appendChild = (parent, child) => parent.appendChild(child)\n\nexport const ELEMENT_NODE = doc.ELEMENT_NODE\nexport const TEXT_NODE = doc.TEXT_NODE\nexport const CDATA_SECTION_NODE = doc.CDATA_SECTION_NODE\nexport const COMMENT_NODE = doc.COMMENT_NODE\nexport const DOCUMENT_NODE = doc.DOCUMENT_NODE\nexport const DOCUMENT_TYPE_NODE = doc.DOCUMENT_TYPE_NODE\nexport const DOCUMENT_FRAGMENT_NODE = doc.DOCUMENT_FRAGMENT_NODE\n\n/**\n * @param {any} node\n * @param {number} type\n */\nexport const checkNodeType = (node, type) => node.nodeType === type\n\n/**\n * @param {Node} parent\n * @param {HTMLElement} child\n */\nexport const isParentOf = (parent, child) => {\n  let p = child.parentNode\n  while (p && p !== parent) {\n    p = p.parentNode\n  }\n  return p === parent\n}\n","/**\n * JSON utility functions.\n *\n * @module json\n */\n\n/**\n * Transform JavaScript object to JSON.\n *\n * @param {any} object\n * @return {string}\n */\nexport const stringify = JSON.stringify\n\n/**\n * Parse JSON object.\n *\n * @param {string} json\n * @return {any}\n */\nexport const parse = JSON.parse\n","/* global requestIdleCallback, requestAnimationFrame, cancelIdleCallback, cancelAnimationFrame */\n\n/**\n * Utility module to work with EcmaScript's event loop.\n *\n * @module eventloop\n */\n\n/**\n * @type {Array<function>}\n */\nlet queue = []\n\nconst _runQueue = () => {\n  for (let i = 0; i < queue.length; i++) {\n    queue[i]()\n  }\n  queue = []\n}\n\n/**\n * @param {function():void} f\n */\nexport const enqueue = f => {\n  queue.push(f)\n  if (queue.length === 1) {\n    setTimeout(_runQueue, 0)\n  }\n}\n\n/**\n * @typedef {Object} TimeoutObject\n * @property {function} TimeoutObject.destroy\n */\n\n/**\n * @param {function(number):void} clearFunction\n */\nconst createTimeoutClass = clearFunction => class TT {\n  /**\n   * @param {number} timeoutId\n   */\n  constructor (timeoutId) {\n    this._ = timeoutId\n  }\n\n  destroy () {\n    clearFunction(this._)\n  }\n}\n\nconst Timeout = createTimeoutClass(clearTimeout)\n\n/**\n * @param {number} timeout\n * @param {function} callback\n * @return {TimeoutObject}\n */\nexport const timeout = (timeout, callback) => new Timeout(setTimeout(callback, timeout))\n\nconst Interval = createTimeoutClass(clearInterval)\n\n/**\n * @param {number} timeout\n * @param {function} callback\n * @return {TimeoutObject}\n */\nexport const interval = (timeout, callback) => new Interval(setInterval(callback, timeout))\n\n/* istanbul ignore next */\nexport const Animation = createTimeoutClass(arg => typeof requestAnimationFrame !== 'undefined' && cancelAnimationFrame(arg))\n\n/* istanbul ignore next */\n/**\n * @param {function(number):void} cb\n * @return {TimeoutObject}\n */\nexport const animationFrame = cb => typeof requestAnimationFrame === 'undefined' ? timeout(0, cb) : new Animation(requestAnimationFrame(cb))\n\n/* istanbul ignore next */\n// @ts-ignore\nconst Idle = createTimeoutClass(arg => typeof cancelIdleCallback !== 'undefined' && cancelIdleCallback(arg))\n\n/* istanbul ignore next */\n/**\n * Note: this is experimental and is probably only useful in browsers.\n *\n * @param {function} cb\n * @return {TimeoutObject}\n */\n// @ts-ignore\nexport const idleCallback = cb => typeof requestIdleCallback !== 'undefined' ? new Idle(requestIdleCallback(cb)) : timeout(1000, cb)\n\n/**\n * @param {number} timeout Timeout of the debounce action\n * @return {function(function():void):void}\n */\nexport const createDebouncer = timeout => {\n  let timer = -1\n  return f => {\n    clearTimeout(timer)\n    if (f) {\n      timer = /** @type {any} */ (setTimeout(f, timeout))\n    }\n  }\n}\n","/**\n * Utility module to convert metric values.\n *\n * @module metric\n */\n\nimport * as math from './math.js'\n\nexport const yotta = 1e24\nexport const zetta = 1e21\nexport const exa = 1e18\nexport const peta = 1e15\nexport const tera = 1e12\nexport const giga = 1e9\nexport const mega = 1e6\nexport const kilo = 1e3\nexport const hecto = 1e2\nexport const deca = 10\nexport const deci = 0.1\nexport const centi = 0.01\nexport const milli = 1e-3\nexport const micro = 1e-6\nexport const nano = 1e-9\nexport const pico = 1e-12\nexport const femto = 1e-15\nexport const atto = 1e-18\nexport const zepto = 1e-21\nexport const yocto = 1e-24\n\nconst prefixUp = ['', 'k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y']\nconst prefixDown = ['', 'm', 'μ', 'n', 'p', 'f', 'a', 'z', 'y']\n\n/**\n * Calculate the metric prefix for a number. Assumes E.g. `prefix(1000) = { n: 1, prefix: 'k' }`\n *\n * @param {number} n\n * @param {number} [baseMultiplier] Multiplier of the base (10^(3*baseMultiplier)). E.g. `convert(time, -3)` if time is already in milli seconds\n * @return {{n:number,prefix:string}}\n */\nexport const prefix = (n, baseMultiplier = 0) => {\n  const nPow = n === 0 ? 0 : math.log10(n)\n  let mult = 0\n  while (nPow < mult * 3 && baseMultiplier > -8) {\n    baseMultiplier--\n    mult--\n  }\n  while (nPow >= 3 + mult * 3 && baseMultiplier < 8) {\n    baseMultiplier++\n    mult++\n  }\n  const prefix = baseMultiplier < 0 ? prefixDown[-baseMultiplier] : prefixUp[baseMultiplier]\n  return {\n    n: math.round((mult > 0 ? n / math.exp10(mult * 3) : n * math.exp10(mult * -3)) * 1e12) / 1e12,\n    prefix\n  }\n}\n","/**\n * Utility module to work with time.\n *\n * @module time\n */\n\nimport * as metric from './metric.js'\nimport * as math from './math.js'\n\n/**\n * Return current time.\n *\n * @return {Date}\n */\nexport const getDate = () => new Date()\n\n/**\n * Return current unix time.\n *\n * @return {number}\n */\nexport const getUnixTime = Date.now\n\n/**\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\n *\n * @param {number} d duration in milliseconds\n * @return {string} humanized approximation of time\n */\nexport const humanizeDuration = d => {\n  if (d < 60000) {\n    const p = metric.prefix(d, -1)\n    return math.round(p.n * 100) / 100 + p.prefix + 's'\n  }\n  d = math.floor(d / 1000)\n  const seconds = d % 60\n  const minutes = math.floor(d / 60) % 60\n  const hours = math.floor(d / 3600) % 24\n  const days = math.floor(d / 86400)\n  if (days > 0) {\n    return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\n  }\n  if (hours > 0) {\n    /* istanbul ignore next */\n    return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\n  }\n  return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\n}\n","/**\n * Isomorphic logging module with support for colors!\n *\n * @module logging\n */\n\nimport * as env from './environment.js'\nimport * as symbol from './symbol.js'\nimport * as pair from './pair.js'\nimport * as dom from './dom.js'\nimport * as json from './json.js'\nimport * as map from './map.js'\nimport * as eventloop from './eventloop.js'\nimport * as math from './math.js'\nimport * as time from './time.js'\nimport * as func from './function.js'\n\nexport const BOLD = symbol.create()\nexport const UNBOLD = symbol.create()\nexport const BLUE = symbol.create()\nexport const GREY = symbol.create()\nexport const GREEN = symbol.create()\nexport const RED = symbol.create()\nexport const PURPLE = symbol.create()\nexport const ORANGE = symbol.create()\nexport const UNCOLOR = symbol.create()\n\n/**\n * @type {Object<Symbol,pair.Pair<string,string>>}\n */\nconst _browserStyleMap = {\n  [BOLD]: pair.create('font-weight', 'bold'),\n  [UNBOLD]: pair.create('font-weight', 'normal'),\n  [BLUE]: pair.create('color', 'blue'),\n  [GREEN]: pair.create('color', 'green'),\n  [GREY]: pair.create('color', 'grey'),\n  [RED]: pair.create('color', 'red'),\n  [PURPLE]: pair.create('color', 'purple'),\n  [ORANGE]: pair.create('color', 'orange'), // not well supported in chrome when debugging node with inspector - TODO: deprecate\n  [UNCOLOR]: pair.create('color', 'black')\n}\n\nconst _nodeStyleMap = {\n  [BOLD]: '\\u001b[1m',\n  [UNBOLD]: '\\u001b[2m',\n  [BLUE]: '\\x1b[34m',\n  [GREEN]: '\\x1b[32m',\n  [GREY]: '\\u001b[37m',\n  [RED]: '\\x1b[31m',\n  [PURPLE]: '\\x1b[35m',\n  [ORANGE]: '\\x1b[38;5;208m',\n  [UNCOLOR]: '\\x1b[0m'\n}\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nconst computeBrowserLoggingArgs = args => {\n  const strBuilder = []\n  const styles = []\n  const currentStyle = map.create()\n  /**\n   * @type {Array<string|Object|number>}\n   */\n  let logArgs = []\n  // try with formatting until we find something unsupported\n  let i = 0\n\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        const style = dom.mapToStyleString(currentStyle)\n        if (i > 0 || style.length > 0) {\n          strBuilder.push('%c' + arg)\n          styles.push(style)\n        } else {\n          strBuilder.push(arg)\n        }\n      } else {\n        break\n      }\n    }\n  }\n\n  if (i > 0) {\n    // create logArgs with what we have so far\n    logArgs = styles\n    logArgs.unshift(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg)\n    }\n  }\n  return logArgs\n}\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nconst computeNodeLoggingArgs = args => {\n  const strBuilder = []\n  const logArgs = []\n\n  // try with formatting until we find something unsupported\n  let i = 0\n\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _nodeStyleMap[arg]\n    if (style !== undefined) {\n      strBuilder.push(style)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        strBuilder.push(arg)\n      } else {\n        break\n      }\n    }\n  }\n  if (i > 0) {\n    // create logArgs with what we have so far\n    strBuilder.push('\\x1b[0m')\n    logArgs.push(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    /* istanbul ignore else */\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg)\n    }\n  }\n  return logArgs\n}\n\n/* istanbul ignore next */\nconst computeLoggingArgs = env.isNode ? computeNodeLoggingArgs : computeBrowserLoggingArgs\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const print = (...args) => {\n  console.log(...computeLoggingArgs(args))\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.print(args))\n}\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const warn = (...args) => {\n  console.warn(...computeLoggingArgs(args))\n  args.unshift(ORANGE)\n  vconsoles.forEach(vc => vc.print(args))\n}\n\n/* istanbul ignore next */\n/**\n * @param {Error} err\n */\nexport const printError = err => {\n  console.error(err)\n  vconsoles.forEach(vc => vc.printError(err))\n}\n\n/* istanbul ignore next */\n/**\n * @param {string} url image location\n * @param {number} height height of the image in pixel\n */\nexport const printImg = (url, height) => {\n  if (env.isBrowser) {\n    console.log('%c                      ', `font-size: ${height}px; background-size: contain; background-repeat: no-repeat; background-image: url(${url})`)\n    // console.log('%c                ', `font-size: ${height}x; background: url(${url}) no-repeat;`)\n  }\n  vconsoles.forEach(vc => vc.printImg(url, height))\n}\n\n/* istanbul ignore next */\n/**\n * @param {string} base64\n * @param {number} height\n */\nexport const printImgBase64 = (base64, height) => printImg(`data:image/gif;base64,${base64}`, height)\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const group = (...args) => {\n  console.group(...computeLoggingArgs(args))\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.group(args))\n}\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const groupCollapsed = (...args) => {\n  console.groupCollapsed(...computeLoggingArgs(args))\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.groupCollapsed(args))\n}\n\nexport const groupEnd = () => {\n  console.groupEnd()\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.groupEnd())\n}\n\n/* istanbul ignore next */\n/**\n * @param {function():Node} createNode\n */\nexport const printDom = createNode =>\n  vconsoles.forEach(vc => vc.printDom(createNode()))\n\n/* istanbul ignore next */\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {number} height\n */\nexport const printCanvas = (canvas, height) => printImg(canvas.toDataURL(), height)\n\nexport const vconsoles = new Set()\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<Element>}\n */\nconst _computeLineSpans = args => {\n  const spans = []\n  const currentStyle = new Map()\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        // @ts-ignore\n        const span = dom.element('span', [pair.create('style', dom.mapToStyleString(currentStyle))], [dom.text(arg)])\n        if (span.innerHTML === '') {\n          span.innerHTML = '&nbsp;'\n        }\n        spans.push(span)\n      } else {\n        break\n      }\n    }\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    let content = args[i]\n    if (!(content instanceof Symbol)) {\n      if (content.constructor !== String && content.constructor !== Number) {\n        content = ' ' + json.stringify(content) + ' '\n      }\n      spans.push(dom.element('span', [], [dom.text(/** @type {string} */ (content))]))\n    }\n  }\n  return spans\n}\n\nconst lineStyle = 'font-family:monospace;border-bottom:1px solid #e2e2e2;padding:2px;'\n\n/* istanbul ignore next */\nexport class VConsole {\n  /**\n   * @param {Element} dom\n   */\n  constructor (dom) {\n    this.dom = dom\n    /**\n     * @type {Element}\n     */\n    this.ccontainer = this.dom\n    this.depth = 0\n    vconsoles.add(this)\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   * @param {boolean} collapsed\n   */\n  group (args, collapsed = false) {\n    eventloop.enqueue(() => {\n      const triangleDown = dom.element('span', [pair.create('hidden', collapsed), pair.create('style', 'color:grey;font-size:120%;')], [dom.text('▼')])\n      const triangleRight = dom.element('span', [pair.create('hidden', !collapsed), pair.create('style', 'color:grey;font-size:125%;')], [dom.text('▶')])\n      const content = dom.element('div', [pair.create('style', `${lineStyle};padding-left:${this.depth * 10}px`)], [triangleDown, triangleRight, dom.text(' ')].concat(_computeLineSpans(args)))\n      const nextContainer = dom.element('div', [pair.create('hidden', collapsed)])\n      const nextLine = dom.element('div', [], [content, nextContainer])\n      dom.append(this.ccontainer, [nextLine])\n      this.ccontainer = nextContainer\n      this.depth++\n      // when header is clicked, collapse/uncollapse container\n      dom.addEventListener(content, 'click', event => {\n        nextContainer.toggleAttribute('hidden')\n        triangleDown.toggleAttribute('hidden')\n        triangleRight.toggleAttribute('hidden')\n      })\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  groupCollapsed (args) {\n    this.group(args, true)\n  }\n\n  groupEnd () {\n    eventloop.enqueue(() => {\n      if (this.depth > 0) {\n        this.depth--\n        // @ts-ignore\n        this.ccontainer = this.ccontainer.parentElement.parentElement\n      }\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  print (args) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [dom.element('div', [pair.create('style', `${lineStyle};padding-left:${this.depth * 10}px`)], _computeLineSpans(args))])\n    })\n  }\n\n  /**\n   * @param {Error} err\n   */\n  printError (err) {\n    this.print([RED, BOLD, err.toString()])\n  }\n\n  /**\n   * @param {string} url\n   * @param {number} height\n   */\n  printImg (url, height) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [dom.element('img', [pair.create('src', url), pair.create('height', `${math.round(height * 1.5)}px`)])])\n    })\n  }\n\n  /**\n   * @param {Node} node\n   */\n  printDom (node) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [node])\n    })\n  }\n\n  destroy () {\n    eventloop.enqueue(() => {\n      vconsoles.delete(this)\n    })\n  }\n}\n\n/* istanbul ignore next */\n/**\n * @param {Element} dom\n */\nexport const createVConsole = dom => new VConsole(dom)\n\nconst loggingColors = [GREEN, PURPLE, ORANGE, BLUE]\nlet nextColor = 0\nlet lastLoggingTime = time.getUnixTime()\n\n/**\n * @param {string} moduleName\n * @return {function(...any):void}\n */\nexport const createModuleLogger = moduleName => {\n  const color = loggingColors[nextColor]\n  const debugRegexVar = env.getVariable('log')\n  const doLogging = debugRegexVar !== null && (debugRegexVar === '*' || debugRegexVar === 'true' || new RegExp(debugRegexVar, 'gi').test(moduleName))\n  nextColor = (nextColor + 1) % loggingColors.length\n  moduleName += ': '\n\n  return !doLogging ? func.nop : (...args) => {\n    const timeNow = time.getUnixTime()\n    const timeDiff = timeNow - lastLoggingTime\n    lastLoggingTime = timeNow\n    print(color, moduleName, UNCOLOR, ...args.map(arg => (typeof arg === 'string' || typeof arg === 'symbol') ? arg : JSON.stringify(arg)), color, ' +' + timeDiff + 'ms')\n  }\n}\n","/**\n * Utility module to create and manipulate Iterators.\n *\n * @module iterator\n */\n\n/**\n * @template T,R\n * @param {Iterator<T>} iterator\n * @param {function(T):R} f\n * @return {IterableIterator<R>}\n */\nexport const mapIterator = (iterator, f) => ({\n  /**\n   * @param {function(T):R} f\n   */\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next () {\n    const r = iterator.next()\n    return { value: r.done ? undefined : f(r.value), done: r.done }\n  }\n})\n\n/**\n * @template T\n * @param {function():IteratorResult<T>} next\n * @return {IterableIterator<T>}\n */\nexport const createIterator = next => ({\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next\n})\n\n/**\n * @template T\n * @param {Iterator<T>} iterator\n * @param {function(T):boolean} filter\n */\nexport const iteratorFilter = (iterator, filter) => createIterator(() => {\n  let res\n  do {\n    res = iterator.next()\n  } while (!res.done && !filter(res.value))\n  return res\n})\n\n/**\n * @template T,M\n * @param {Iterator<T>} iterator\n * @param {function(T):M} fmap\n */\nexport const iteratorMap = (iterator, fmap) => createIterator(() => {\n  const { done, value } = iterator.next()\n  return { done, value: done ? undefined : fmap(value) }\n})\n","\nimport {\n  AbstractStruct,\n  UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\nimport * as error from 'lib0/error.js'\nimport * as encoding from 'lib0/encoding.js'\n\nexport const structSkipRefNumber = 10\n\n/**\n * @private\n */\nexport class Skip extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {Skip} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    // skip structs cannot be integrated\n    error.unexpectedCase()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structSkipRefNumber)\n    // write as VarUint because Skips can't make use of predictable length-encoding\n    encoding.writeVarUint(encoder.restEncoder, this.length - offset)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n","\nimport { Observable } from 'lib0/observable.js'\n\nimport {\n  Doc // eslint-disable-line\n} from '../internals.js'\n\n/**\n * This is an abstract interface that all Connectors should implement to keep them interchangeable.\n *\n * @note This interface is experimental and it is not advised to actually inherit this class.\n *       It just serves as typing information.\n *\n * @extends {Observable<any>}\n */\nexport class AbstractConnector extends Observable {\n  /**\n   * @param {Doc} ydoc\n   * @param {any} awareness\n   */\n  constructor (ydoc, awareness) {\n    super()\n    this.doc = ydoc\n    this.awareness = awareness\n  }\n}\n","\nimport {\n  findIndexSS,\n  getState,\n  splitItem,\n  iterateStructs,\n  UpdateEncoderV2,\n  DSDecoderV1, DSEncoderV1, DSDecoderV2, DSEncoderV2, Item, GC, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\n\nimport * as array from 'lib0/array.js'\nimport * as math from 'lib0/math.js'\nimport * as map from 'lib0/map.js'\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\n\nexport class DeleteItem {\n  /**\n   * @param {number} clock\n   * @param {number} len\n   */\n  constructor (clock, len) {\n    /**\n     * @type {number}\n     */\n    this.clock = clock\n    /**\n     * @type {number}\n     */\n    this.len = len\n  }\n}\n\n/**\n * We no longer maintain a DeleteStore. DeleteSet is a temporary object that is created when needed.\n * - When created in a transaction, it must only be accessed after sorting, and merging\n *   - This DeleteSet is send to other clients\n * - We do not create a DeleteSet when we send a sync message. The DeleteSet message is created directly from StructStore\n * - We read a DeleteSet as part of a sync/update message. In this case the DeleteSet is already sorted and merged.\n */\nexport class DeleteSet {\n  constructor () {\n    /**\n     * @type {Map<number,Array<DeleteItem>>}\n     */\n    this.clients = new Map()\n  }\n}\n\n/**\n * Iterate over all structs that the DeleteSet gc's.\n *\n * @param {Transaction} transaction\n * @param {DeleteSet} ds\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nexport const iterateDeletedStructs = (transaction, ds, f) =>\n  ds.clients.forEach((deletes, clientid) => {\n    const structs = /** @type {Array<GC|Item>} */ (transaction.doc.store.clients.get(clientid))\n    for (let i = 0; i < deletes.length; i++) {\n      const del = deletes[i]\n      iterateStructs(transaction, structs, del.clock, del.len, f)\n    }\n  })\n\n/**\n * @param {Array<DeleteItem>} dis\n * @param {number} clock\n * @return {number|null}\n *\n * @private\n * @function\n */\nexport const findIndexDS = (dis, clock) => {\n  let left = 0\n  let right = dis.length - 1\n  while (left <= right) {\n    const midindex = math.floor((left + right) / 2)\n    const mid = dis[midindex]\n    const midclock = mid.clock\n    if (midclock <= clock) {\n      if (clock < midclock + mid.len) {\n        return midindex\n      }\n      left = midindex + 1\n    } else {\n      right = midindex - 1\n    }\n  }\n  return null\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {ID} id\n * @return {boolean}\n *\n * @private\n * @function\n */\nexport const isDeleted = (ds, id) => {\n  const dis = ds.clients.get(id.client)\n  return dis !== undefined && findIndexDS(dis, id.clock) !== null\n}\n\n/**\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nexport const sortAndMergeDeleteSet = ds => {\n  ds.clients.forEach(dels => {\n    dels.sort((a, b) => a.clock - b.clock)\n    // merge items without filtering or splicing the array\n    // i is the current pointer\n    // j refers to the current insert position for the pointed item\n    // try to merge dels[i] into dels[j-1] or set dels[j]=dels[i]\n    let i, j\n    for (i = 1, j = 1; i < dels.length; i++) {\n      const left = dels[j - 1]\n      const right = dels[i]\n      if (left.clock + left.len >= right.clock) {\n        left.len = math.max(left.len, right.clock + right.len - left.clock)\n      } else {\n        if (j < i) {\n          dels[j] = right\n        }\n        j++\n      }\n    }\n    dels.length = j\n  })\n}\n\n/**\n * @param {Array<DeleteSet>} dss\n * @return {DeleteSet} A fresh DeleteSet\n */\nexport const mergeDeleteSets = dss => {\n  const merged = new DeleteSet()\n  for (let dssI = 0; dssI < dss.length; dssI++) {\n    dss[dssI].clients.forEach((delsLeft, client) => {\n      if (!merged.clients.has(client)) {\n        // Write all missing keys from current ds and all following.\n        // If merged already contains `client` current ds has already been added.\n        /**\n         * @type {Array<DeleteItem>}\n         */\n        const dels = delsLeft.slice()\n        for (let i = dssI + 1; i < dss.length; i++) {\n          array.appendTo(dels, dss[i].clients.get(client) || [])\n        }\n        merged.clients.set(client, dels)\n      }\n    })\n  }\n  sortAndMergeDeleteSet(merged)\n  return merged\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {number} client\n * @param {number} clock\n * @param {number} length\n *\n * @private\n * @function\n */\nexport const addToDeleteSet = (ds, client, clock, length) => {\n  map.setIfUndefined(ds.clients, client, () => []).push(new DeleteItem(clock, length))\n}\n\nexport const createDeleteSet = () => new DeleteSet()\n\n/**\n * @param {StructStore} ss\n * @return {DeleteSet} Merged and sorted DeleteSet\n *\n * @private\n * @function\n */\nexport const createDeleteSetFromStructStore = ss => {\n  const ds = createDeleteSet()\n  ss.clients.forEach((structs, client) => {\n    /**\n     * @type {Array<DeleteItem>}\n     */\n    const dsitems = []\n    for (let i = 0; i < structs.length; i++) {\n      const struct = structs[i]\n      if (struct.deleted) {\n        const clock = struct.id.clock\n        let len = struct.length\n        if (i + 1 < structs.length) {\n          for (let next = structs[i + 1]; i + 1 < structs.length && next.id.clock === clock + len && next.deleted; next = structs[++i + 1]) {\n            len += next.length\n          }\n        }\n        dsitems.push(new DeleteItem(clock, len))\n      }\n    }\n    if (dsitems.length > 0) {\n      ds.clients.set(client, dsitems)\n    }\n  })\n  return ds\n}\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nexport const writeDeleteSet = (encoder, ds) => {\n  encoding.writeVarUint(encoder.restEncoder, ds.clients.size)\n  ds.clients.forEach((dsitems, client) => {\n    encoder.resetDsCurVal()\n    encoding.writeVarUint(encoder.restEncoder, client)\n    const len = dsitems.length\n    encoding.writeVarUint(encoder.restEncoder, len)\n    for (let i = 0; i < len; i++) {\n      const item = dsitems[i]\n      encoder.writeDsClock(item.clock)\n      encoder.writeDsLen(item.len)\n    }\n  })\n}\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {DeleteSet}\n *\n * @private\n * @function\n */\nexport const readDeleteSet = decoder => {\n  const ds = new DeleteSet()\n  const numClients = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal()\n    const client = decoding.readVarUint(decoder.restDecoder)\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder)\n    if (numberOfDeletes > 0) {\n      const dsField = map.setIfUndefined(ds.clients, client, () => [])\n      for (let i = 0; i < numberOfDeletes; i++) {\n        dsField.push(new DeleteItem(decoder.readDsClock(), decoder.readDsLen()))\n      }\n    }\n  }\n  return ds\n}\n\n/**\n * @todo YDecoder also contains references to String and other Decoders. Would make sense to exchange YDecoder.toUint8Array for YDecoder.DsToUint8Array()..\n */\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @return {Uint8Array|null} Returns a v2 update containing all deletes that couldn't be applied yet; or null if all deletes were applied successfully.\n *\n * @private\n * @function\n */\nexport const readAndApplyDeleteSet = (decoder, transaction, store) => {\n  const unappliedDS = new DeleteSet()\n  const numClients = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal()\n    const client = decoding.readVarUint(decoder.restDecoder)\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder)\n    const structs = store.clients.get(client) || []\n    const state = getState(store, client)\n    for (let i = 0; i < numberOfDeletes; i++) {\n      const clock = decoder.readDsClock()\n      const clockEnd = clock + decoder.readDsLen()\n      if (clock < state) {\n        if (state < clockEnd) {\n          addToDeleteSet(unappliedDS, client, state, clockEnd - state)\n        }\n        let index = findIndexSS(structs, clock)\n        /**\n         * We can ignore the case of GC and Delete structs, because we are going to skip them\n         * @type {Item}\n         */\n        // @ts-ignore\n        let struct = structs[index]\n        // split the first item if necessary\n        if (!struct.deleted && struct.id.clock < clock) {\n          structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock))\n          index++ // increase we now want to use the next struct\n        }\n        while (index < structs.length) {\n          // @ts-ignore\n          struct = structs[index++]\n          if (struct.id.clock < clockEnd) {\n            if (!struct.deleted) {\n              if (clockEnd < struct.id.clock + struct.length) {\n                structs.splice(index, 0, splitItem(transaction, struct, clockEnd - struct.id.clock))\n              }\n              struct.delete(transaction)\n            }\n          } else {\n            break\n          }\n        }\n      } else {\n        addToDeleteSet(unappliedDS, client, clock, clockEnd - clock)\n      }\n    }\n  }\n  if (unappliedDS.clients.size > 0) {\n    const ds = new UpdateEncoderV2()\n    encoding.writeVarUint(ds.restEncoder, 0) // encode 0 structs\n    writeDeleteSet(ds, unappliedDS)\n    return ds.toUint8Array()\n  }\n  return null\n}\n","/**\n * @module Y\n */\n\nimport {\n  StructStore,\n  AbstractType,\n  YArray,\n  YText,\n  YMap,\n  YXmlFragment,\n  transact,\n  ContentDoc, Item, Transaction, YEvent // eslint-disable-line\n} from '../internals.js'\n\nimport { Observable } from 'lib0/observable.js'\nimport * as random from 'lib0/random.js'\nimport * as map from 'lib0/map.js'\nimport * as array from 'lib0/array.js'\n\nexport const generateNewClientId = random.uint32\n\n/**\n * @typedef {Object} DocOpts\n * @property {boolean} [DocOpts.gc=true] Disable garbage collection (default: gc=true)\n * @property {function(Item):boolean} [DocOpts.gcFilter] Will be called before an Item is garbage collected. Return false to keep the Item.\n * @property {string} [DocOpts.guid] Define a globally unique identifier for this document\n * @property {any} [DocOpts.meta] Any kind of meta information you want to associate with this document. If this is a subdocument, remote peers will store the meta information as well.\n * @property {boolean} [DocOpts.autoLoad] If a subdocument, automatically load document. If this is a subdocument, remote peers will load the document as well automatically.\n */\n\n/**\n * A Yjs instance handles the state of shared data.\n * @extends Observable<string>\n */\nexport class Doc extends Observable {\n  /**\n   * @param {DocOpts} [opts] configuration\n   */\n  constructor ({ guid = random.uuidv4(), gc = true, gcFilter = () => true, meta = null, autoLoad = false } = {}) {\n    super()\n    this.gc = gc\n    this.gcFilter = gcFilter\n    this.clientID = generateNewClientId()\n    this.guid = guid\n    /**\n     * @type {Map<string, AbstractType<YEvent>>}\n     */\n    this.share = new Map()\n    this.store = new StructStore()\n    /**\n     * @type {Transaction | null}\n     */\n    this._transaction = null\n    /**\n     * @type {Array<Transaction>}\n     */\n    this._transactionCleanups = []\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocs = new Set()\n    /**\n     * If this document is a subdocument - a document integrated into another document - then _item is defined.\n     * @type {Item?}\n     */\n    this._item = null\n    this.shouldLoad = autoLoad\n    this.autoLoad = autoLoad\n    this.meta = meta\n  }\n\n  /**\n   * Notify the parent document that you request to load data into this subdocument (if it is a subdocument).\n   *\n   * `load()` might be used in the future to request any provider to load the most current data.\n   *\n   * It is safe to call `load()` multiple times.\n   */\n  load () {\n    const item = this._item\n    if (item !== null && !this.shouldLoad) {\n      transact(/** @type {any} */ (item.parent).doc, transaction => {\n        transaction.subdocsLoaded.add(this)\n      }, null, true)\n    }\n    this.shouldLoad = true\n  }\n\n  getSubdocs () {\n    return this.subdocs\n  }\n\n  getSubdocGuids () {\n    return new Set(Array.from(this.subdocs).map(doc => doc.guid))\n  }\n\n  /**\n   * Changes that happen inside of a transaction are bundled. This means that\n   * the observer fires _after_ the transaction is finished and that all changes\n   * that happened inside of the transaction are sent as one message to the\n   * other peers.\n   *\n   * @param {function(Transaction):void} f The function that should be executed as a transaction\n   * @param {any} [origin] Origin of who started the transaction. Will be stored on transaction.origin\n   *\n   * @public\n   */\n  transact (f, origin = null) {\n    transact(this, f, origin)\n  }\n\n  /**\n   * Define a shared data type.\n   *\n   * Multiple calls of `y.get(name, TypeConstructor)` yield the same result\n   * and do not overwrite each other. I.e.\n   * `y.define(name, Y.Array) === y.define(name, Y.Array)`\n   *\n   * After this method is called, the type is also available on `y.share.get(name)`.\n   *\n   * *Best Practices:*\n   * Define all types right after the Yjs instance is created and store them in a separate object.\n   * Also use the typed methods `getText(name)`, `getArray(name)`, ..\n   *\n   * @example\n   *   const y = new Y(..)\n   *   const appState = {\n   *     document: y.getText('document')\n   *     comments: y.getArray('comments')\n   *   }\n   *\n   * @param {string} name\n   * @param {Function} TypeConstructor The constructor of the type definition. E.g. Y.Text, Y.Array, Y.Map, ...\n   * @return {AbstractType<any>} The created type. Constructed with TypeConstructor\n   *\n   * @public\n   */\n  get (name, TypeConstructor = AbstractType) {\n    const type = map.setIfUndefined(this.share, name, () => {\n      // @ts-ignore\n      const t = new TypeConstructor()\n      t._integrate(this, null)\n      return t\n    })\n    const Constr = type.constructor\n    if (TypeConstructor !== AbstractType && Constr !== TypeConstructor) {\n      if (Constr === AbstractType) {\n        // @ts-ignore\n        const t = new TypeConstructor()\n        t._map = type._map\n        type._map.forEach(/** @param {Item?} n */ n => {\n          for (; n !== null; n = n.left) {\n            // @ts-ignore\n            n.parent = t\n          }\n        })\n        t._start = type._start\n        for (let n = t._start; n !== null; n = n.right) {\n          n.parent = t\n        }\n        t._length = type._length\n        this.share.set(name, t)\n        t._integrate(this, null)\n        return t\n      } else {\n        throw new Error(`Type with the name ${name} has already been defined with a different constructor`)\n      }\n    }\n    return type\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YArray<T>}\n   *\n   * @public\n   */\n  getArray (name = '') {\n    // @ts-ignore\n    return this.get(name, YArray)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YText}\n   *\n   * @public\n   */\n  getText (name = '') {\n    // @ts-ignore\n    return this.get(name, YText)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YMap<any>}\n   *\n   * @public\n   */\n  getMap (name = '') {\n    // @ts-ignore\n    return this.get(name, YMap)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YXmlFragment}\n   *\n   * @public\n   */\n  getXmlFragment (name = '') {\n    // @ts-ignore\n    return this.get(name, YXmlFragment)\n  }\n\n  /**\n   * Converts the entire document into a js object, recursively traversing each yjs type\n   * Doesn't log types that have not been defined (using ydoc.getType(..)).\n   *\n   * @deprecated Do not use this method and rather call toJSON directly on the shared types.\n   *\n   * @return {Object<string, any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string, any>}\n     */\n    const doc = {}\n\n    this.share.forEach((value, key) => {\n      doc[key] = value.toJSON()\n    })\n\n    return doc\n  }\n\n  /**\n   * Emit `destroy` event and unregister all event handlers.\n   */\n  destroy () {\n    array.from(this.subdocs).forEach(subdoc => subdoc.destroy())\n    const item = this._item\n    if (item !== null) {\n      this._item = null\n      const content = /** @type {ContentDoc} */ (item.content)\n      if (item.deleted) {\n        // @ts-ignore\n        content.doc = null\n      } else {\n        content.doc = new Doc({ guid: this.guid, ...content.opts })\n        content.doc._item = item\n      }\n      transact(/** @type {any} */ (item).parent.doc, transaction => {\n        if (!item.deleted) {\n          transaction.subdocsAdded.add(content.doc)\n        }\n        transaction.subdocsRemoved.add(this)\n      }, null, true)\n    }\n    this.emit('destroyed', [true])\n    this.emit('destroy', [this])\n    super.destroy()\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function(...any):any} f\n   */\n  on (eventName, f) {\n    super.on(eventName, f)\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} f\n   */\n  off (eventName, f) {\n    super.off(eventName, f)\n  }\n}\n","import * as buffer from 'lib0/buffer.js'\nimport * as decoding from 'lib0/decoding.js'\nimport {\n  ID, createID\n} from '../internals.js'\n\nexport class DSDecoderV1 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    this.restDecoder = decoder\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n}\n\nexport class UpdateDecoderV1 extends DSDecoderV1 {\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return decoding.readUint8(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return decoding.readVarString(this.restDecoder)\n  }\n\n  /**\n   * @return {boolean} isKey\n   */\n  readParentInfo () {\n    return decoding.readVarUint(this.restDecoder) === 1\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number} len\n   */\n  readLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return buffer.copyUint8Array(decoding.readVarUint8Array(this.restDecoder))\n  }\n\n  /**\n   * Legacy implementation uses JSON parse. We use any-decoding in v2.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return JSON.parse(decoding.readVarString(this.restDecoder))\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    return decoding.readVarString(this.restDecoder)\n  }\n}\n\nexport class DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    /**\n     * @private\n     */\n    this.dsCurrVal = 0\n    this.restDecoder = decoder\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    this.dsCurrVal += decoding.readVarUint(this.restDecoder)\n    return this.dsCurrVal\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    const diff = decoding.readVarUint(this.restDecoder) + 1\n    this.dsCurrVal += diff\n    return diff\n  }\n}\n\nexport class UpdateDecoderV2 extends DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    super(decoder)\n    /**\n     * List of cached keys. If the keys[id] does not exist, we read a new key\n     * from stringEncoder and push it to keys.\n     *\n     * @type {Array<string>}\n     */\n    this.keys = []\n    decoding.readVarUint(decoder) // read feature flag - currently unused\n    this.keyClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.clientDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.leftClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.rightClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.infoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8)\n    this.stringDecoder = new decoding.StringDecoder(decoding.readVarUint8Array(decoder))\n    this.parentInfoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8)\n    this.typeRefDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.lenDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder))\n  }\n\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return new ID(this.clientDecoder.read(), this.leftClockDecoder.read())\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return new ID(this.clientDecoder.read(), this.rightClockDecoder.read())\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return this.clientDecoder.read()\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return /** @type {number} */ (this.infoDecoder.read())\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return this.stringDecoder.read()\n  }\n\n  /**\n   * @return {boolean}\n   */\n  readParentInfo () {\n    return this.parentInfoDecoder.read() === 1\n  }\n\n  /**\n   * @return {number} An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return this.typeRefDecoder.read()\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number}\n   */\n  readLen () {\n    return this.lenDecoder.read()\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return decoding.readVarUint8Array(this.restDecoder)\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    const keyClock = this.keyClockDecoder.read()\n    if (keyClock < this.keys.length) {\n      return this.keys[keyClock]\n    } else {\n      const key = this.stringDecoder.read()\n      this.keys.push(key)\n      return key\n    }\n  }\n}\n","\nimport * as error from 'lib0/error.js'\nimport * as encoding from 'lib0/encoding.js'\n\nimport {\n  ID // eslint-disable-line\n} from '../internals.js'\n\nexport class DSEncoderV1 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder()\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    encoding.writeVarUint(this.restEncoder, clock)\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    encoding.writeVarUint(this.restEncoder, len)\n  }\n}\n\nexport class UpdateEncoderV1 extends DSEncoderV1 {\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client)\n    encoding.writeVarUint(this.restEncoder, id.clock)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client)\n    encoding.writeVarUint(this.restEncoder, id.clock)\n  }\n\n  /**\n   * Use writeClient and writeClock instead of writeID if possible.\n   * @param {number} client\n   */\n  writeClient (client) {\n    encoding.writeVarUint(this.restEncoder, client)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    encoding.writeUint8(this.restEncoder, info)\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    encoding.writeVarString(this.restEncoder, s)\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    encoding.writeVarUint(this.restEncoder, isYKey ? 1 : 0)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    encoding.writeVarUint(this.restEncoder, info)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    encoding.writeVarUint(this.restEncoder, len)\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any)\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf)\n  }\n\n  /**\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeVarString(this.restEncoder, JSON.stringify(embed))\n  }\n\n  /**\n   * @param {string} key\n   */\n  writeKey (key) {\n    encoding.writeVarString(this.restEncoder, key)\n  }\n}\n\nexport class DSEncoderV2 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder() // encodes all the rest / non-optimized\n    this.dsCurrVal = 0\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    const diff = clock - this.dsCurrVal\n    this.dsCurrVal = clock\n    encoding.writeVarUint(this.restEncoder, diff)\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    if (len === 0) {\n      error.unexpectedCase()\n    }\n    encoding.writeVarUint(this.restEncoder, len - 1)\n    this.dsCurrVal += len\n  }\n}\n\nexport class UpdateEncoderV2 extends DSEncoderV2 {\n  constructor () {\n    super()\n    /**\n     * @type {Map<string,number>}\n     */\n    this.keyMap = new Map()\n    /**\n     * Refers to the next uniqe key-identifier to me used.\n     * See writeKey method for more information.\n     *\n     * @type {number}\n     */\n    this.keyClock = 0\n    this.keyClockEncoder = new encoding.IntDiffOptRleEncoder()\n    this.clientEncoder = new encoding.UintOptRleEncoder()\n    this.leftClockEncoder = new encoding.IntDiffOptRleEncoder()\n    this.rightClockEncoder = new encoding.IntDiffOptRleEncoder()\n    this.infoEncoder = new encoding.RleEncoder(encoding.writeUint8)\n    this.stringEncoder = new encoding.StringEncoder()\n    this.parentInfoEncoder = new encoding.RleEncoder(encoding.writeUint8)\n    this.typeRefEncoder = new encoding.UintOptRleEncoder()\n    this.lenEncoder = new encoding.UintOptRleEncoder()\n  }\n\n  toUint8Array () {\n    const encoder = encoding.createEncoder()\n    encoding.writeVarUint(encoder, 0) // this is a feature flag that we might use in the future\n    encoding.writeVarUint8Array(encoder, this.keyClockEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.clientEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.leftClockEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.rightClockEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.infoEncoder))\n    encoding.writeVarUint8Array(encoder, this.stringEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.parentInfoEncoder))\n    encoding.writeVarUint8Array(encoder, this.typeRefEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.lenEncoder.toUint8Array())\n    // @note The rest encoder is appended! (note the missing var)\n    encoding.writeUint8Array(encoder, encoding.toUint8Array(this.restEncoder))\n    return encoding.toUint8Array(encoder)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    this.clientEncoder.write(id.client)\n    this.leftClockEncoder.write(id.clock)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    this.clientEncoder.write(id.client)\n    this.rightClockEncoder.write(id.clock)\n  }\n\n  /**\n   * @param {number} client\n   */\n  writeClient (client) {\n    this.clientEncoder.write(client)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    this.infoEncoder.write(info)\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    this.stringEncoder.write(s)\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    this.parentInfoEncoder.write(isYKey ? 1 : 0)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    this.typeRefEncoder.write(info)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    this.lenEncoder.write(len)\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any)\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf)\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeAny(this.restEncoder, embed)\n  }\n\n  /**\n   * Property keys are often reused. For example, in y-prosemirror the key `bold` might\n   * occur very often. For a 3d application, the key `position` might occur very often.\n   *\n   * We cache these keys in a Map and refer to them via a unique number.\n   *\n   * @param {string} key\n   */\n  writeKey (key) {\n    const clock = this.keyMap.get(key)\n    if (clock === undefined) {\n      this.keyClockEncoder.write(this.keyClock++)\n      this.stringEncoder.write(key)\n    } else {\n      this.keyClockEncoder.write(this.keyClock++)\n    }\n  }\n}\n","\n/**\n * @module encoding\n */\n/*\n * We use the first five bits in the info flag for determining the type of the struct.\n *\n * 0: GC\n * 1: Item with Deleted content\n * 2: Item with JSON content\n * 3: Item with Binary content\n * 4: Item with String content\n * 5: Item with Embed content (for richtext content)\n * 6: Item with Format content (a formatting marker for richtext content)\n * 7: Item with Type\n */\n\nimport {\n  findIndexSS,\n  getState,\n  createID,\n  getStateVector,\n  readAndApplyDeleteSet,\n  writeDeleteSet,\n  createDeleteSetFromStructStore,\n  transact,\n  readItemContent,\n  UpdateDecoderV1,\n  UpdateDecoderV2,\n  UpdateEncoderV1,\n  UpdateEncoderV2,\n  DSEncoderV2,\n  DSDecoderV1,\n  DSEncoderV1,\n  mergeUpdatesV2,\n  Skip,\n  diffUpdateV2,\n  DSDecoderV2, Doc, Transaction, GC, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\nimport * as binary from 'lib0/binary.js'\nimport * as map from 'lib0/map.js'\nimport * as math from 'lib0/math.js'\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Array<GC|Item>} structs All structs by `client`\n * @param {number} client\n * @param {number} clock write structs starting with `ID(client,clock)`\n *\n * @function\n */\nconst writeStructs = (encoder, structs, client, clock) => {\n  // write first id\n  clock = math.max(clock, structs[0].id.clock) // make sure the first id exists\n  const startNewStructs = findIndexSS(structs, clock)\n  // write # encoded structs\n  encoding.writeVarUint(encoder.restEncoder, structs.length - startNewStructs)\n  encoder.writeClient(client)\n  encoding.writeVarUint(encoder.restEncoder, clock)\n  const firstStruct = structs[startNewStructs]\n  // write first struct with an offset\n  firstStruct.write(encoder, clock - firstStruct.id.clock)\n  for (let i = startNewStructs + 1; i < structs.length; i++) {\n    structs[i].write(encoder, 0)\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {StructStore} store\n * @param {Map<number,number>} _sm\n *\n * @private\n * @function\n */\nexport const writeClientsStructs = (encoder, store, _sm) => {\n  // we filter all valid _sm entries into sm\n  const sm = new Map()\n  _sm.forEach((clock, client) => {\n    // only write if new structs are available\n    if (getState(store, client) > clock) {\n      sm.set(client, clock)\n    }\n  })\n  getStateVector(store).forEach((clock, client) => {\n    if (!_sm.has(client)) {\n      sm.set(client, 0)\n    }\n  })\n  // write # states that were updated\n  encoding.writeVarUint(encoder.restEncoder, sm.size)\n  // Write items with higher client ids first\n  // This heavily improves the conflict algorithm.\n  Array.from(sm.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    // @ts-ignore\n    writeStructs(encoder, store.clients.get(client), client, clock)\n  })\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder The decoder object to read data from.\n * @param {Doc} doc\n * @return {Map<number, { i: number, refs: Array<Item | GC> }>}\n *\n * @private\n * @function\n */\nexport const readClientsStructRefs = (decoder, doc) => {\n  /**\n   * @type {Map<number, { i: number, refs: Array<Item | GC> }>}\n   */\n  const clientRefs = map.create()\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder)\n    /**\n     * @type {Array<GC|Item>}\n     */\n    const refs = new Array(numberOfStructs)\n    const client = decoder.readClient()\n    let clock = decoding.readVarUint(decoder.restDecoder)\n    // const start = performance.now()\n    clientRefs.set(client, { i: 0, refs })\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo()\n      switch (binary.BITS5 & info) {\n        case 0: { // GC\n          const len = decoder.readLen()\n          refs[i] = new GC(createID(client, clock), len)\n          clock += len\n          break\n        }\n        case 10: { // Skip Struct (nothing to apply)\n          // @todo we could reduce the amount of checks by adding Skip struct to clientRefs so we know that something is missing.\n          const len = decoding.readVarUint(decoder.restDecoder)\n          refs[i] = new Skip(createID(client, clock), len)\n          clock += len\n          break\n        }\n        default: { // Item with content\n          /**\n           * The optimized implementation doesn't use any variables because inlining variables is faster.\n           * Below a non-optimized version is shown that implements the basic algorithm with\n           * a few comments\n           */\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n            null, // right\n            (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n            cantCopyParentInfo ? (decoder.readParentInfo() ? doc.get(decoder.readString()) : decoder.readLeftID()) : null, // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          )\n          /* A non-optimized implementation of the above algorithm:\n\n          // The item that was originally to the left of this item.\n          const origin = (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null\n          // The item that was originally to the right of this item.\n          const rightOrigin = (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n          const hasParentYKey = cantCopyParentInfo ? decoder.readParentInfo() : false\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const parentYKey = cantCopyParentInfo && hasParentYKey ? decoder.readString() : null\n\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            origin, // origin\n            null, // right\n            rightOrigin, // right origin\n            cantCopyParentInfo && !hasParentYKey ? decoder.readLeftID() : (parentYKey !== null ? doc.get(parentYKey) : null), // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          )\n          */\n          refs[i] = struct\n          clock += struct.length\n        }\n      }\n    }\n    // console.log('time to read: ', performance.now() - start) // @todo remove\n  }\n  return clientRefs\n}\n\n/**\n * Resume computing structs generated by struct readers.\n *\n * While there is something to do, we integrate structs in this order\n * 1. top element on stack, if stack is not empty\n * 2. next element from current struct reader (if empty, use next struct reader)\n *\n * If struct causally depends on another struct (ref.missing), we put next reader of\n * `ref.id.client` on top of stack.\n *\n * At some point we find a struct that has no causal dependencies,\n * then we start emptying the stack.\n *\n * It is not possible to have circles: i.e. struct1 (from client1) depends on struct2 (from client2)\n * depends on struct3 (from client1). Therefore the max stack size is eqaul to `structReaders.length`.\n *\n * This method is implemented in a way so that we can resume computation if this update\n * causally depends on another update.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {Map<number, { i: number, refs: (GC | Item)[] }>} clientsStructRefs\n * @return { null | { update: Uint8Array, missing: Map<number,number> } }\n *\n * @private\n * @function\n */\nconst integrateStructs = (transaction, store, clientsStructRefs) => {\n  /**\n   * @type {Array<Item | GC>}\n   */\n  const stack = []\n  // sort them so that we take the higher id first, in case of conflicts the lower id will probably not conflict with the id from the higher user.\n  let clientsStructRefsIds = Array.from(clientsStructRefs.keys()).sort((a, b) => a - b)\n  if (clientsStructRefsIds.length === 0) {\n    return null\n  }\n  const getNextStructTarget = () => {\n    if (clientsStructRefsIds.length === 0) {\n      return null\n    }\n    let nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]))\n    while (nextStructsTarget.refs.length === nextStructsTarget.i) {\n      clientsStructRefsIds.pop()\n      if (clientsStructRefsIds.length > 0) {\n        nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]))\n      } else {\n        return null\n      }\n    }\n    return nextStructsTarget\n  }\n  let curStructsTarget = getNextStructTarget()\n  if (curStructsTarget === null && stack.length === 0) {\n    return null\n  }\n\n  /**\n   * @type {StructStore}\n   */\n  const restStructs = new StructStore()\n  const missingSV = new Map()\n  /**\n   * @param {number} client\n   * @param {number} clock\n   */\n  const updateMissingSv = (client, clock) => {\n    const mclock = missingSV.get(client)\n    if (mclock == null || mclock > clock) {\n      missingSV.set(client, clock)\n    }\n  }\n  /**\n   * @type {GC|Item}\n   */\n  let stackHead = /** @type {any} */ (curStructsTarget).refs[/** @type {any} */ (curStructsTarget).i++]\n  // caching the state because it is used very often\n  const state = new Map()\n\n  const addStackToRestSS = () => {\n    for (const item of stack) {\n      const client = item.id.client\n      const unapplicableItems = clientsStructRefs.get(client)\n      if (unapplicableItems) {\n        // decrement because we weren't able to apply previous operation\n        unapplicableItems.i--\n        restStructs.clients.set(client, unapplicableItems.refs.slice(unapplicableItems.i))\n        clientsStructRefs.delete(client)\n        unapplicableItems.i = 0\n        unapplicableItems.refs = []\n      } else {\n        // item was the last item on clientsStructRefs and the field was already cleared. Add item to restStructs and continue\n        restStructs.clients.set(client, [item])\n      }\n      // remove client from clientsStructRefsIds to prevent users from applying the same update again\n      clientsStructRefsIds = clientsStructRefsIds.filter(c => c !== client)\n    }\n    stack.length = 0\n  }\n\n  // iterate over all struct readers until we are done\n  while (true) {\n    if (stackHead.constructor !== Skip) {\n      const localClock = map.setIfUndefined(state, stackHead.id.client, () => getState(store, stackHead.id.client))\n      const offset = localClock - stackHead.id.clock\n      if (offset < 0) {\n        // update from the same client is missing\n        stack.push(stackHead)\n        updateMissingSv(stackHead.id.client, stackHead.id.clock - 1)\n        // hid a dead wall, add all items from stack to restSS\n        addStackToRestSS()\n      } else {\n        const missing = stackHead.getMissing(transaction, store)\n        if (missing !== null) {\n          stack.push(stackHead)\n          // get the struct reader that has the missing struct\n          /**\n           * @type {{ refs: Array<GC|Item>, i: number }}\n           */\n          const structRefs = clientsStructRefs.get(/** @type {number} */ (missing)) || { refs: [], i: 0 }\n          if (structRefs.refs.length === structRefs.i) {\n            // This update message causally depends on another update message that doesn't exist yet\n            updateMissingSv(/** @type {number} */ (missing), getState(store, missing))\n            addStackToRestSS()\n          } else {\n            stackHead = structRefs.refs[structRefs.i++]\n            continue\n          }\n        } else if (offset === 0 || offset < stackHead.length) {\n          // all fine, apply the stackhead\n          stackHead.integrate(transaction, offset)\n          state.set(stackHead.id.client, stackHead.id.clock + stackHead.length)\n        }\n      }\n    }\n    // iterate to next stackHead\n    if (stack.length > 0) {\n      stackHead = /** @type {GC|Item} */ (stack.pop())\n    } else if (curStructsTarget !== null && curStructsTarget.i < curStructsTarget.refs.length) {\n      stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++])\n    } else {\n      curStructsTarget = getNextStructTarget()\n      if (curStructsTarget === null) {\n        // we are done!\n        break\n      } else {\n        stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++])\n      }\n    }\n  }\n  if (restStructs.clients.size > 0) {\n    const encoder = new UpdateEncoderV2()\n    writeClientsStructs(encoder, restStructs, new Map())\n    // write empty deleteset\n    // writeDeleteSet(encoder, new DeleteSet())\n    encoding.writeVarUint(encoder.restEncoder, 0) // => no need for an extra function call, just write 0 deletes\n    return { missing: missingSV, update: encoder.toUint8Array() }\n  }\n  return null\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nexport const writeStructsFromTransaction = (encoder, transaction) => writeClientsStructs(encoder, transaction.doc.store, transaction.beforeState)\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {UpdateDecoderV1 | UpdateDecoderV2} [structDecoder]\n *\n * @function\n */\nexport const readUpdateV2 = (decoder, ydoc, transactionOrigin, structDecoder = new UpdateDecoderV2(decoder)) =>\n  transact(ydoc, transaction => {\n    let retry = false\n    const doc = transaction.doc\n    const store = doc.store\n    // let start = performance.now()\n    const ss = readClientsStructRefs(structDecoder, doc)\n    // console.log('time to read structs: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    // console.log('time to merge: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const restStructs = integrateStructs(transaction, store, ss)\n    const pending = store.pendingStructs\n    if (pending) {\n      // check if we can apply something\n      for (const [client, clock] of pending.missing) {\n        if (clock < getState(store, client)) {\n          retry = true\n          break\n        }\n      }\n      if (restStructs) {\n        // merge restStructs into store.pending\n        for (const [client, clock] of restStructs.missing) {\n          const mclock = pending.missing.get(client)\n          if (mclock == null || mclock > clock) {\n            pending.missing.set(client, clock)\n          }\n        }\n        pending.update = mergeUpdatesV2([pending.update, restStructs.update])\n      }\n    } else {\n      store.pendingStructs = restStructs\n    }\n    // console.log('time to integrate: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const dsRest = readAndApplyDeleteSet(structDecoder, transaction, store)\n    if (store.pendingDs) {\n      // @todo we could make a lower-bound state-vector check as we do above\n      const pendingDSUpdate = new UpdateDecoderV2(decoding.createDecoder(store.pendingDs))\n      decoding.readVarUint(pendingDSUpdate.restDecoder) // read 0 structs, because we only encode deletes in pendingdsupdate\n      const dsRest2 = readAndApplyDeleteSet(pendingDSUpdate, transaction, store)\n      if (dsRest && dsRest2) {\n        // case 1: ds1 != null && ds2 != null\n        store.pendingDs = mergeUpdatesV2([dsRest, dsRest2])\n      } else {\n        // case 2: ds1 != null\n        // case 3: ds2 != null\n        // case 4: ds1 == null && ds2 == null\n        store.pendingDs = dsRest || dsRest2\n      }\n    } else {\n      // Either dsRest == null && pendingDs == null OR dsRest != null\n      store.pendingDs = dsRest\n    }\n    // console.log('time to cleanup: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n\n    // console.log('time to resume delete readers: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    if (retry) {\n      const update = /** @type {{update: Uint8Array}} */ (store.pendingStructs).update\n      store.pendingStructs = null\n      applyUpdateV2(transaction.doc, update)\n    }\n  }, transactionOrigin, false)\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nexport const readUpdate = (decoder, ydoc, transactionOrigin) => readUpdateV2(decoder, ydoc, transactionOrigin, new UpdateDecoderV1(decoder))\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n *\n * @function\n */\nexport const applyUpdateV2 = (ydoc, update, transactionOrigin, YDecoder = UpdateDecoderV2) => {\n  const decoder = decoding.createDecoder(update)\n  readUpdateV2(decoder, ydoc, transactionOrigin, new YDecoder(decoder))\n}\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nexport const applyUpdate = (ydoc, update, transactionOrigin) => applyUpdateV2(ydoc, update, transactionOrigin, UpdateDecoderV1)\n\n/**\n * Write all the document as a single update message. If you specify the state of the remote client (`targetStateVector`) it will\n * only write the operations that are missing.\n *\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Doc} doc\n * @param {Map<number,number>} [targetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n *\n * @function\n */\nexport const writeStateAsUpdate = (encoder, doc, targetStateVector = new Map()) => {\n  writeClientsStructs(encoder, doc.store, targetStateVector)\n  writeDeleteSet(encoder, createDeleteSetFromStructStore(doc.store))\n}\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @param {UpdateEncoderV1 | UpdateEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateAsUpdateV2 = (doc, encodedTargetStateVector = new Uint8Array([0]), encoder = new UpdateEncoderV2()) => {\n  const targetStateVector = decodeStateVector(encodedTargetStateVector)\n  writeStateAsUpdate(encoder, doc, targetStateVector)\n  const updates = [encoder.toUint8Array()]\n  // also add the pending updates (if there are any)\n  // @todo support diffirent encoders\n  if (encoder.constructor === UpdateEncoderV2) {\n    if (doc.store.pendingDs) {\n      updates.push(doc.store.pendingDs)\n    }\n    if (doc.store.pendingStructs) {\n      updates.push(diffUpdateV2(doc.store.pendingStructs.update, encodedTargetStateVector))\n    }\n    if (updates.length > 1) {\n      return mergeUpdatesV2(updates)\n    }\n  }\n  return updates[0]\n}\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateAsUpdate = (doc, encodedTargetStateVector) => encodeStateAsUpdateV2(doc, encodedTargetStateVector, new UpdateEncoderV1())\n\n/**\n * Read state vector from Decoder and return as Map\n *\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nexport const readStateVector = decoder => {\n  const ss = new Map()\n  const ssLength = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < ssLength; i++) {\n    const client = decoding.readVarUint(decoder.restDecoder)\n    const clock = decoding.readVarUint(decoder.restDecoder)\n    ss.set(client, clock)\n  }\n  return ss\n}\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\n// export const decodeStateVectorV2 = decodedState => readStateVector(new DSDecoderV2(decoding.createDecoder(decodedState)))\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nexport const decodeStateVector = decodedState => readStateVector(new DSDecoderV1(decoding.createDecoder(decodedState)))\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Map<number,number>} sv\n * @function\n */\nexport const writeStateVector = (encoder, sv) => {\n  encoding.writeVarUint(encoder.restEncoder, sv.size)\n  sv.forEach((clock, client) => {\n    encoding.writeVarUint(encoder.restEncoder, client) // @todo use a special client decoder that is based on mapping\n    encoding.writeVarUint(encoder.restEncoder, clock)\n  })\n  return encoder\n}\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Doc} doc\n *\n * @function\n */\nexport const writeDocumentStateVector = (encoder, doc) => writeStateVector(encoder, getStateVector(doc.store))\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateVectorV2 = (doc, encoder = new DSEncoderV2()) => {\n  if (doc instanceof Map) {\n    writeStateVector(encoder, doc)\n  } else {\n    writeDocumentStateVector(encoder, doc)\n  }\n  return encoder.toUint8Array()\n}\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateVector = doc => encodeStateVectorV2(doc, new DSEncoderV1())\n","import * as f from 'lib0/function.js'\n\n/**\n * General event handler implementation.\n *\n * @template ARG0, ARG1\n *\n * @private\n */\nexport class EventHandler {\n  constructor () {\n    /**\n     * @type {Array<function(ARG0, ARG1):void>}\n     */\n    this.l = []\n  }\n}\n\n/**\n * @template ARG0,ARG1\n * @returns {EventHandler<ARG0,ARG1>}\n *\n * @private\n * @function\n */\nexport const createEventHandler = () => new EventHandler()\n\n/**\n * Adds an event listener that is called when\n * {@link EventHandler#callEventListeners} is called.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler.\n *\n * @private\n * @function\n */\nexport const addEventHandlerListener = (eventHandler, f) =>\n  eventHandler.l.push(f)\n\n/**\n * Removes an event listener.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler that was added with\n *                     {@link EventHandler#addEventListener}\n *\n * @private\n * @function\n */\nexport const removeEventHandlerListener = (eventHandler, f) => {\n  const l = eventHandler.l\n  const len = l.length\n  eventHandler.l = l.filter(g => f !== g)\n  if (len === eventHandler.l.length) {\n    console.error('[yjs] Tried to remove event handler that doesn\\'t exist.')\n  }\n}\n\n/**\n * Removes all event listeners.\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n *\n * @private\n * @function\n */\nexport const removeAllEventHandlerListeners = eventHandler => {\n  eventHandler.l.length = 0\n}\n\n/**\n * Call all event listeners that were added via\n * {@link EventHandler#addEventListener}.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {ARG0} arg0\n * @param {ARG1} arg1\n *\n * @private\n * @function\n */\nexport const callEventHandlerListeners = (eventHandler, arg0, arg1) =>\n  f.callAll(eventHandler.l, [arg0, arg1])\n","\nimport { AbstractType } from '../internals.js' // eslint-disable-line\n\nimport * as decoding from 'lib0/decoding.js'\nimport * as encoding from 'lib0/encoding.js'\nimport * as error from 'lib0/error.js'\n\nexport class ID {\n  /**\n   * @param {number} client client id\n   * @param {number} clock unique per client id, continuous number\n   */\n  constructor (client, clock) {\n    /**\n     * Client id\n     * @type {number}\n     */\n    this.client = client\n    /**\n     * unique per client id, continuous number\n     * @type {number}\n     */\n    this.clock = clock\n  }\n}\n\n/**\n * @param {ID | null} a\n * @param {ID | null} b\n * @return {boolean}\n *\n * @function\n */\nexport const compareIDs = (a, b) => a === b || (a !== null && b !== null && a.client === b.client && a.clock === b.clock)\n\n/**\n * @param {number} client\n * @param {number} clock\n *\n * @private\n * @function\n */\nexport const createID = (client, clock) => new ID(client, clock)\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {ID} id\n *\n * @private\n * @function\n */\nexport const writeID = (encoder, id) => {\n  encoding.writeVarUint(encoder, id.client)\n  encoding.writeVarUint(encoder, id.clock)\n}\n\n/**\n * Read ID.\n * * If first varUint read is 0xFFFFFF a RootID is returned.\n * * Otherwise an ID is returned\n *\n * @param {decoding.Decoder} decoder\n * @return {ID}\n *\n * @private\n * @function\n */\nexport const readID = decoder =>\n  createID(decoding.readVarUint(decoder), decoding.readVarUint(decoder))\n\n/**\n * The top types are mapped from y.share.get(keyname) => type.\n * `type` does not store any information about the `keyname`.\n * This function finds the correct `keyname` for `type` and throws otherwise.\n *\n * @param {AbstractType<any>} type\n * @return {string}\n *\n * @private\n * @function\n */\nexport const findRootTypeKey = type => {\n  // @ts-ignore _y must be defined, otherwise unexpected case\n  for (const [key, value] of type.doc.share.entries()) {\n    if (value === type) {\n      return key\n    }\n  }\n  throw error.unexpectedCase()\n}\n","\nimport { AbstractType, Item } from '../internals.js' // eslint-disable-line\n\n/**\n * Check if `parent` is a parent of `child`.\n *\n * @param {AbstractType<any>} parent\n * @param {Item|null} child\n * @return {Boolean} Whether `parent` is a parent of `child`.\n *\n * @private\n * @function\n */\nexport const isParentOf = (parent, child) => {\n  while (child !== null) {\n    if (child.parent === parent) {\n      return true\n    }\n    child = /** @type {AbstractType<any>} */ (child.parent)._item\n  }\n  return false\n}\n","\nimport {\n  AbstractType // eslint-disable-line\n} from '../internals.js'\n\n/**\n * Convenient helper to log type information.\n *\n * Do not use in productive systems as the output can be immense!\n *\n * @param {AbstractType<any>} type\n */\nexport const logType = type => {\n  const res = []\n  let n = type._start\n  while (n) {\n    res.push(n)\n    n = n.right\n  }\n  console.log('Children: ', res)\n  console.log('Children content: ', res.filter(m => !m.deleted).map(m => m.content))\n}\n","\nimport {\n  YArray,\n  YMap,\n  readDeleteSet,\n  writeDeleteSet,\n  createDeleteSet,\n  DSEncoderV1, DSDecoderV1, ID, DeleteSet, YArrayEvent, Transaction, Doc // eslint-disable-line\n} from '../internals.js'\n\nimport * as decoding from 'lib0/decoding.js'\n\nimport { mergeDeleteSets, isDeleted } from './DeleteSet.js'\n\nexport class PermanentUserData {\n  /**\n   * @param {Doc} doc\n   * @param {YMap<any>} [storeType]\n   */\n  constructor (doc, storeType = doc.getMap('users')) {\n    /**\n     * @type {Map<string,DeleteSet>}\n     */\n    const dss = new Map()\n    this.yusers = storeType\n    this.doc = doc\n    /**\n     * Maps from clientid to userDescription\n     *\n     * @type {Map<number,string>}\n     */\n    this.clients = new Map()\n    this.dss = dss\n    /**\n     * @param {YMap<any>} user\n     * @param {string} userDescription\n     */\n    const initUser = (user, userDescription) => {\n      /**\n       * @type {YArray<Uint8Array>}\n       */\n      const ds = user.get('ds')\n      const ids = user.get('ids')\n      const addClientId = /** @param {number} clientid */ clientid => this.clients.set(clientid, userDescription)\n      ds.observe(/** @param {YArrayEvent<any>} event */ event => {\n        event.changes.added.forEach(item => {\n          item.content.getContent().forEach(encodedDs => {\n            if (encodedDs instanceof Uint8Array) {\n              this.dss.set(userDescription, mergeDeleteSets([this.dss.get(userDescription) || createDeleteSet(), readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs)))]))\n            }\n          })\n        })\n      })\n      this.dss.set(userDescription, mergeDeleteSets(ds.map(encodedDs => readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs))))))\n      ids.observe(/** @param {YArrayEvent<any>} event */ event =>\n        event.changes.added.forEach(item => item.content.getContent().forEach(addClientId))\n      )\n      ids.forEach(addClientId)\n    }\n    // observe users\n    storeType.observe(event => {\n      event.keysChanged.forEach(userDescription =>\n        initUser(storeType.get(userDescription), userDescription)\n      )\n    })\n    // add intial data\n    storeType.forEach(initUser)\n  }\n\n  /**\n   * @param {Doc} doc\n   * @param {number} clientid\n   * @param {string} userDescription\n   * @param {Object} [conf]\n   * @param {function(Transaction, DeleteSet):boolean} [conf.filter]\n   */\n  setUserMapping (doc, clientid, userDescription, { filter = () => true } = {}) {\n    const users = this.yusers\n    let user = users.get(userDescription)\n    if (!user) {\n      user = new YMap()\n      user.set('ids', new YArray())\n      user.set('ds', new YArray())\n      users.set(userDescription, user)\n    }\n    user.get('ids').push([clientid])\n    users.observe(event => {\n      setTimeout(() => {\n        const userOverwrite = users.get(userDescription)\n        if (userOverwrite !== user) {\n          // user was overwritten, port all data over to the next user object\n          // @todo Experiment with Y.Sets here\n          user = userOverwrite\n          // @todo iterate over old type\n          this.clients.forEach((_userDescription, clientid) => {\n            if (userDescription === _userDescription) {\n              user.get('ids').push([clientid])\n            }\n          })\n          const encoder = new DSEncoderV1()\n          const ds = this.dss.get(userDescription)\n          if (ds) {\n            writeDeleteSet(encoder, ds)\n            user.get('ds').push([encoder.toUint8Array()])\n          }\n        }\n      }, 0)\n    })\n    doc.on('afterTransaction', /** @param {Transaction} transaction */ transaction => {\n      setTimeout(() => {\n        const yds = user.get('ds')\n        const ds = transaction.deleteSet\n        if (transaction.local && ds.clients.size > 0 && filter(transaction, ds)) {\n          const encoder = new DSEncoderV1()\n          writeDeleteSet(encoder, ds)\n          yds.push([encoder.toUint8Array()])\n        }\n      })\n    })\n  }\n\n  /**\n   * @param {number} clientid\n   * @return {any}\n   */\n  getUserByClientId (clientid) {\n    return this.clients.get(clientid) || null\n  }\n\n  /**\n   * @param {ID} id\n   * @return {string | null}\n   */\n  getUserByDeletedId (id) {\n    for (const [userDescription, ds] of this.dss.entries()) {\n      if (isDeleted(ds, id)) {\n        return userDescription\n      }\n    }\n    return null\n  }\n}\n","\nimport {\n  writeID,\n  readID,\n  compareIDs,\n  getState,\n  findRootTypeKey,\n  Item,\n  createID,\n  ContentType,\n  followRedone,\n  ID, Doc, AbstractType // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\nimport * as error from 'lib0/error.js'\n\n/**\n * A relative position is based on the Yjs model and is not affected by document changes.\n * E.g. If you place a relative position before a certain character, it will always point to this character.\n * If you place a relative position at the end of a type, it will always point to the end of the type.\n *\n * A numeric position is often unsuited for user selections, because it does not change when content is inserted\n * before or after.\n *\n * ```Insert(0, 'x')('a|bc') = 'xa|bc'``` Where | is the relative position.\n *\n * One of the properties must be defined.\n *\n * @example\n *   // Current cursor position is at position 10\n *   const relativePosition = createRelativePositionFromIndex(yText, 10)\n *   // modify yText\n *   yText.insert(0, 'abc')\n *   yText.delete(3, 10)\n *   // Compute the cursor position\n *   const absolutePosition = createAbsolutePositionFromRelativePosition(y, relativePosition)\n *   absolutePosition.type === yText // => true\n *   console.log('cursor location is ' + absolutePosition.index) // => cursor location is 3\n *\n */\nexport class RelativePosition {\n  /**\n   * @param {ID|null} type\n   * @param {string|null} tname\n   * @param {ID|null} item\n   * @param {number} assoc\n   */\n  constructor (type, tname, item, assoc = 0) {\n    /**\n     * @type {ID|null}\n     */\n    this.type = type\n    /**\n     * @type {string|null}\n     */\n    this.tname = tname\n    /**\n     * @type {ID | null}\n     */\n    this.item = item\n    /**\n     * A relative position is associated to a specific character. By default\n     * assoc >= 0, the relative position is associated to the character\n     * after the meant position.\n     * I.e. position 1 in 'ab' is associated to character 'b'.\n     *\n     * If assoc < 0, then the relative position is associated to the caharacter\n     * before the meant position.\n     *\n     * @type {number}\n     */\n    this.assoc = assoc\n  }\n}\n\n/**\n * @param {RelativePosition} rpos\n * @return {any}\n */\nexport const relativePositionToJSON = rpos => {\n  const json = {}\n  if (rpos.type) {\n    json.type = rpos.type\n  }\n  if (rpos.tname) {\n    json.tname = rpos.tname\n  }\n  if (rpos.item) {\n    json.item = rpos.item\n  }\n  if (rpos.assoc != null) {\n    json.assoc = rpos.assoc\n  }\n  return json\n}\n\n/**\n * @param {any} json\n * @return {RelativePosition}\n *\n * @function\n */\nexport const createRelativePositionFromJSON = json => new RelativePosition(json.type == null ? null : createID(json.type.client, json.type.clock), json.tname || null, json.item == null ? null : createID(json.item.client, json.item.clock), json.assoc == null ? 0 : json.assoc)\n\nexport class AbsolutePosition {\n  /**\n   * @param {AbstractType<any>} type\n   * @param {number} index\n   * @param {number} [assoc]\n   */\n  constructor (type, index, assoc = 0) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type\n    /**\n     * @type {number}\n     */\n    this.index = index\n    this.assoc = assoc\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @param {number} [assoc]\n *\n * @function\n */\nexport const createAbsolutePosition = (type, index, assoc = 0) => new AbsolutePosition(type, index, assoc)\n\n/**\n * @param {AbstractType<any>} type\n * @param {ID|null} item\n * @param {number} [assoc]\n *\n * @function\n */\nexport const createRelativePosition = (type, item, assoc) => {\n  let typeid = null\n  let tname = null\n  if (type._item === null) {\n    tname = findRootTypeKey(type)\n  } else {\n    typeid = createID(type._item.id.client, type._item.id.clock)\n  }\n  return new RelativePosition(typeid, tname, item, assoc)\n}\n\n/**\n * Create a relativePosition based on a absolute position.\n *\n * @param {AbstractType<any>} type The base type (e.g. YText or YArray).\n * @param {number} index The absolute position.\n * @param {number} [assoc]\n * @return {RelativePosition}\n *\n * @function\n */\nexport const createRelativePositionFromTypeIndex = (type, index, assoc = 0) => {\n  let t = type._start\n  if (assoc < 0) {\n    // associated to the left character or the beginning of a type, increment index if possible.\n    if (index === 0) {\n      return createRelativePosition(type, null, assoc)\n    }\n    index--\n  }\n  while (t !== null) {\n    if (!t.deleted && t.countable) {\n      if (t.length > index) {\n        // case 1: found position somewhere in the linked list\n        return createRelativePosition(type, createID(t.id.client, t.id.clock + index), assoc)\n      }\n      index -= t.length\n    }\n    if (t.right === null && assoc < 0) {\n      // left-associated position, return last available id\n      return createRelativePosition(type, t.lastId, assoc)\n    }\n    t = t.right\n  }\n  return createRelativePosition(type, null, assoc)\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {RelativePosition} rpos\n *\n * @function\n */\nexport const writeRelativePosition = (encoder, rpos) => {\n  const { type, tname, item, assoc } = rpos\n  if (item !== null) {\n    encoding.writeVarUint(encoder, 0)\n    writeID(encoder, item)\n  } else if (tname !== null) {\n    // case 2: found position at the end of the list and type is stored in y.share\n    encoding.writeUint8(encoder, 1)\n    encoding.writeVarString(encoder, tname)\n  } else if (type !== null) {\n    // case 3: found position at the end of the list and type is attached to an item\n    encoding.writeUint8(encoder, 2)\n    writeID(encoder, type)\n  } else {\n    throw error.unexpectedCase()\n  }\n  encoding.writeVarInt(encoder, assoc)\n  return encoder\n}\n\n/**\n * @param {RelativePosition} rpos\n * @return {Uint8Array}\n */\nexport const encodeRelativePosition = rpos => {\n  const encoder = encoding.createEncoder()\n  writeRelativePosition(encoder, rpos)\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {RelativePosition}\n *\n * @function\n */\nexport const readRelativePosition = decoder => {\n  let type = null\n  let tname = null\n  let itemID = null\n  switch (decoding.readVarUint(decoder)) {\n    case 0:\n      // case 1: found position somewhere in the linked list\n      itemID = readID(decoder)\n      break\n    case 1:\n      // case 2: found position at the end of the list and type is stored in y.share\n      tname = decoding.readVarString(decoder)\n      break\n    case 2: {\n      // case 3: found position at the end of the list and type is attached to an item\n      type = readID(decoder)\n    }\n  }\n  const assoc = decoding.hasContent(decoder) ? decoding.readVarInt(decoder) : 0\n  return new RelativePosition(type, tname, itemID, assoc)\n}\n\n/**\n * @param {Uint8Array} uint8Array\n * @return {RelativePosition}\n */\nexport const decodeRelativePosition = uint8Array => readRelativePosition(decoding.createDecoder(uint8Array))\n\n/**\n * @param {RelativePosition} rpos\n * @param {Doc} doc\n * @return {AbsolutePosition|null}\n *\n * @function\n */\nexport const createAbsolutePositionFromRelativePosition = (rpos, doc) => {\n  const store = doc.store\n  const rightID = rpos.item\n  const typeID = rpos.type\n  const tname = rpos.tname\n  const assoc = rpos.assoc\n  let type = null\n  let index = 0\n  if (rightID !== null) {\n    if (getState(store, rightID.client) <= rightID.clock) {\n      return null\n    }\n    const res = followRedone(store, rightID)\n    const right = res.item\n    if (!(right instanceof Item)) {\n      return null\n    }\n    type = /** @type {AbstractType<any>} */ (right.parent)\n    if (type._item === null || !type._item.deleted) {\n      index = (right.deleted || !right.countable) ? 0 : (res.diff + (assoc >= 0 ? 0 : 1)) // adjust position based on left association if necessary\n      let n = right.left\n      while (n !== null) {\n        if (!n.deleted && n.countable) {\n          index += n.length\n        }\n        n = n.left\n      }\n    }\n  } else {\n    if (tname !== null) {\n      type = doc.get(tname)\n    } else if (typeID !== null) {\n      if (getState(store, typeID.client) <= typeID.clock) {\n        // type does not exist yet\n        return null\n      }\n      const { item } = followRedone(store, typeID)\n      if (item instanceof Item && item.content instanceof ContentType) {\n        type = item.content.type\n      } else {\n        // struct is garbage collected\n        return null\n      }\n    } else {\n      throw error.unexpectedCase()\n    }\n    if (assoc >= 0) {\n      index = type._length\n    } else {\n      index = 0\n    }\n  }\n  return createAbsolutePosition(type, index, rpos.assoc)\n}\n\n/**\n * @param {RelativePosition|null} a\n * @param {RelativePosition|null} b\n * @return {boolean}\n *\n * @function\n */\nexport const compareRelativePositions = (a, b) => a === b || (\n  a !== null && b !== null && a.tname === b.tname && compareIDs(a.item, b.item) && compareIDs(a.type, b.type) && a.assoc === b.assoc\n)\n","\nimport {\n  isDeleted,\n  createDeleteSetFromStructStore,\n  getStateVector,\n  getItemCleanStart,\n  iterateDeletedStructs,\n  writeDeleteSet,\n  writeStateVector,\n  readDeleteSet,\n  readStateVector,\n  createDeleteSet,\n  createID,\n  getState,\n  findIndexSS,\n  UpdateEncoderV2,\n  applyUpdateV2,\n  DSEncoderV1, DSEncoderV2, DSDecoderV1, DSDecoderV2, Transaction, Doc, DeleteSet, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as map from 'lib0/map.js'\nimport * as set from 'lib0/set.js'\nimport * as decoding from 'lib0/decoding.js'\nimport * as encoding from 'lib0/encoding.js'\n\nexport class Snapshot {\n  /**\n   * @param {DeleteSet} ds\n   * @param {Map<number,number>} sv state map\n   */\n  constructor (ds, sv) {\n    /**\n     * @type {DeleteSet}\n     */\n    this.ds = ds\n    /**\n     * State Map\n     * @type {Map<number,number>}\n     */\n    this.sv = sv\n  }\n}\n\n/**\n * @param {Snapshot} snap1\n * @param {Snapshot} snap2\n * @return {boolean}\n */\nexport const equalSnapshots = (snap1, snap2) => {\n  const ds1 = snap1.ds.clients\n  const ds2 = snap2.ds.clients\n  const sv1 = snap1.sv\n  const sv2 = snap2.sv\n  if (sv1.size !== sv2.size || ds1.size !== ds2.size) {\n    return false\n  }\n  for (const [key, value] of sv1.entries()) {\n    if (sv2.get(key) !== value) {\n      return false\n    }\n  }\n  for (const [client, dsitems1] of ds1.entries()) {\n    const dsitems2 = ds2.get(client) || []\n    if (dsitems1.length !== dsitems2.length) {\n      return false\n    }\n    for (let i = 0; i < dsitems1.length; i++) {\n      const dsitem1 = dsitems1[i]\n      const dsitem2 = dsitems2[i]\n      if (dsitem1.clock !== dsitem2.clock || dsitem1.len !== dsitem2.len) {\n        return false\n      }\n    }\n  }\n  return true\n}\n\n/**\n * @param {Snapshot} snapshot\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n */\nexport const encodeSnapshotV2 = (snapshot, encoder = new DSEncoderV2()) => {\n  writeDeleteSet(encoder, snapshot.ds)\n  writeStateVector(encoder, snapshot.sv)\n  return encoder.toUint8Array()\n}\n\n/**\n * @param {Snapshot} snapshot\n * @return {Uint8Array}\n */\nexport const encodeSnapshot = snapshot => encodeSnapshotV2(snapshot, new DSEncoderV1())\n\n/**\n * @param {Uint8Array} buf\n * @param {DSDecoderV1 | DSDecoderV2} [decoder]\n * @return {Snapshot}\n */\nexport const decodeSnapshotV2 = (buf, decoder = new DSDecoderV2(decoding.createDecoder(buf))) => {\n  return new Snapshot(readDeleteSet(decoder), readStateVector(decoder))\n}\n\n/**\n * @param {Uint8Array} buf\n * @return {Snapshot}\n */\nexport const decodeSnapshot = buf => decodeSnapshotV2(buf, new DSDecoderV1(decoding.createDecoder(buf)))\n\n/**\n * @param {DeleteSet} ds\n * @param {Map<number,number>} sm\n * @return {Snapshot}\n */\nexport const createSnapshot = (ds, sm) => new Snapshot(ds, sm)\n\nexport const emptySnapshot = createSnapshot(createDeleteSet(), new Map())\n\n/**\n * @param {Doc} doc\n * @return {Snapshot}\n */\nexport const snapshot = doc => createSnapshot(createDeleteSetFromStructStore(doc.store), getStateVector(doc.store))\n\n/**\n * @param {Item} item\n * @param {Snapshot|undefined} snapshot\n *\n * @protected\n * @function\n */\nexport const isVisible = (item, snapshot) => snapshot === undefined ? !item.deleted : (\n  snapshot.sv.has(item.id.client) && (snapshot.sv.get(item.id.client) || 0) > item.id.clock && !isDeleted(snapshot.ds, item.id)\n)\n\n/**\n * @param {Transaction} transaction\n * @param {Snapshot} snapshot\n */\nexport const splitSnapshotAffectedStructs = (transaction, snapshot) => {\n  const meta = map.setIfUndefined(transaction.meta, splitSnapshotAffectedStructs, set.create)\n  const store = transaction.doc.store\n  // check if we already split for this snapshot\n  if (!meta.has(snapshot)) {\n    snapshot.sv.forEach((clock, client) => {\n      if (clock < getState(store, client)) {\n        getItemCleanStart(transaction, createID(client, clock))\n      }\n    })\n    iterateDeletedStructs(transaction, snapshot.ds, item => {})\n    meta.add(snapshot)\n  }\n}\n\n/**\n * @param {Doc} originDoc\n * @param {Snapshot} snapshot\n * @param {Doc} [newDoc] Optionally, you may define the Yjs document that receives the data from originDoc\n * @return {Doc}\n */\nexport const createDocFromSnapshot = (originDoc, snapshot, newDoc = new Doc()) => {\n  if (originDoc.gc) {\n    // we should not try to restore a GC-ed document, because some of the restored items might have their content deleted\n    throw new Error('originDoc must not be garbage collected')\n  }\n  const { sv, ds } = snapshot\n\n  const encoder = new UpdateEncoderV2()\n  originDoc.transact(transaction => {\n    let size = 0\n    sv.forEach(clock => {\n      if (clock > 0) {\n        size++\n      }\n    })\n    encoding.writeVarUint(encoder.restEncoder, size)\n    // splitting the structs before writing them to the encoder\n    for (const [client, clock] of sv) {\n      if (clock === 0) {\n        continue\n      }\n      if (clock < getState(originDoc.store, client)) {\n        getItemCleanStart(transaction, createID(client, clock))\n      }\n      const structs = originDoc.store.clients.get(client) || []\n      const lastStructIndex = findIndexSS(structs, clock - 1)\n      // write # encoded structs\n      encoding.writeVarUint(encoder.restEncoder, lastStructIndex + 1)\n      encoder.writeClient(client)\n      // first clock written is 0\n      encoding.writeVarUint(encoder.restEncoder, 0)\n      for (let i = 0; i <= lastStructIndex; i++) {\n        structs[i].write(encoder, 0)\n      }\n    }\n    writeDeleteSet(encoder, ds)\n  })\n\n  applyUpdateV2(newDoc, encoder.toUint8Array(), 'snapshot')\n  return newDoc\n}\n","\nimport {\n  GC,\n  splitItem,\n  Transaction, ID, Item, DSDecoderV2 // eslint-disable-line\n} from '../internals.js'\n\nimport * as math from 'lib0/math.js'\nimport * as error from 'lib0/error.js'\n\nexport class StructStore {\n  constructor () {\n    /**\n     * @type {Map<number,Array<GC|Item>>}\n     */\n    this.clients = new Map()\n    /**\n     * @type {null | { missing: Map<number, number>, update: Uint8Array }}\n     */\n    this.pendingStructs = null\n    /**\n     * @type {null | Uint8Array}\n     */\n    this.pendingDs = null\n  }\n}\n\n/**\n * Return the states as a Map<client,clock>.\n * Note that clock refers to the next expected clock id.\n *\n * @param {StructStore} store\n * @return {Map<number,number>}\n *\n * @public\n * @function\n */\nexport const getStateVector = store => {\n  const sm = new Map()\n  store.clients.forEach((structs, client) => {\n    const struct = structs[structs.length - 1]\n    sm.set(client, struct.id.clock + struct.length)\n  })\n  return sm\n}\n\n/**\n * @param {StructStore} store\n * @param {number} client\n * @return {number}\n *\n * @public\n * @function\n */\nexport const getState = (store, client) => {\n  const structs = store.clients.get(client)\n  if (structs === undefined) {\n    return 0\n  }\n  const lastStruct = structs[structs.length - 1]\n  return lastStruct.id.clock + lastStruct.length\n}\n\n/**\n * @param {StructStore} store\n *\n * @private\n * @function\n */\nexport const integretyCheck = store => {\n  store.clients.forEach(structs => {\n    for (let i = 1; i < structs.length; i++) {\n      const l = structs[i - 1]\n      const r = structs[i]\n      if (l.id.clock + l.length !== r.id.clock) {\n        throw new Error('StructStore failed integrety check')\n      }\n    }\n  })\n}\n\n/**\n * @param {StructStore} store\n * @param {GC|Item} struct\n *\n * @private\n * @function\n */\nexport const addStruct = (store, struct) => {\n  let structs = store.clients.get(struct.id.client)\n  if (structs === undefined) {\n    structs = []\n    store.clients.set(struct.id.client, structs)\n  } else {\n    const lastStruct = structs[structs.length - 1]\n    if (lastStruct.id.clock + lastStruct.length !== struct.id.clock) {\n      throw error.unexpectedCase()\n    }\n  }\n  structs.push(struct)\n}\n\n/**\n * Perform a binary search on a sorted array\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n * @return {number}\n *\n * @private\n * @function\n */\nexport const findIndexSS = (structs, clock) => {\n  let left = 0\n  let right = structs.length - 1\n  let mid = structs[right]\n  let midclock = mid.id.clock\n  if (midclock === clock) {\n    return right\n  }\n  // @todo does it even make sense to pivot the search?\n  // If a good split misses, it might actually increase the time to find the correct item.\n  // Currently, the only advantage is that search with pivoting might find the item on the first try.\n  let midindex = math.floor((clock / (midclock + mid.length - 1)) * right) // pivoting the search\n  while (left <= right) {\n    mid = structs[midindex]\n    midclock = mid.id.clock\n    if (midclock <= clock) {\n      if (clock < midclock + mid.length) {\n        return midindex\n      }\n      left = midindex + 1\n    } else {\n      right = midindex - 1\n    }\n    midindex = math.floor((left + right) / 2)\n  }\n  // Always check state before looking for a struct in StructStore\n  // Therefore the case of not finding a struct is unexpected\n  throw error.unexpectedCase()\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {GC|Item}\n *\n * @private\n * @function\n */\nexport const find = (store, id) => {\n  /**\n   * @type {Array<GC|Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client)\n  return structs[findIndexSS(structs, id.clock)]\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n * @private\n * @function\n */\nexport const getItem = /** @type {function(StructStore,ID):Item} */ (find)\n\n/**\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n */\nexport const findIndexCleanStart = (transaction, structs, clock) => {\n  const index = findIndexSS(structs, clock)\n  const struct = structs[index]\n  if (struct.id.clock < clock && struct instanceof Item) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock))\n    return index + 1\n  }\n  return index\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nexport const getItemCleanStart = (transaction, id) => {\n  const structs = /** @type {Array<Item>} */ (transaction.doc.store.clients.get(id.client))\n  return structs[findIndexCleanStart(transaction, structs, id.clock)]\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nexport const getItemCleanEnd = (transaction, store, id) => {\n  /**\n   * @type {Array<Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client)\n  const index = findIndexSS(structs, id.clock)\n  const struct = structs[index]\n  if (id.clock !== struct.id.clock + struct.length - 1 && struct.constructor !== GC) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, id.clock - struct.id.clock + 1))\n  }\n  return struct\n}\n\n/**\n * Replace `item` with `newitem` in store\n * @param {StructStore} store\n * @param {GC|Item} struct\n * @param {GC|Item} newStruct\n *\n * @private\n * @function\n */\nexport const replaceStruct = (store, struct, newStruct) => {\n  const structs = /** @type {Array<GC|Item>} */ (store.clients.get(struct.id.client))\n  structs[findIndexSS(structs, struct.id.clock)] = newStruct\n}\n\n/**\n * Iterate over a range of structs\n *\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clockStart Inclusive start\n * @param {number} len\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nexport const iterateStructs = (transaction, structs, clockStart, len, f) => {\n  if (len === 0) {\n    return\n  }\n  const clockEnd = clockStart + len\n  let index = findIndexCleanStart(transaction, structs, clockStart)\n  let struct\n  do {\n    struct = structs[index++]\n    if (clockEnd < struct.id.clock + struct.length) {\n      findIndexCleanStart(transaction, structs, clockEnd)\n    }\n    f(struct)\n  } while (index < structs.length && structs[index].id.clock < clockEnd)\n}\n","\nimport {\n  getState,\n  writeStructsFromTransaction,\n  writeDeleteSet,\n  DeleteSet,\n  sortAndMergeDeleteSet,\n  getStateVector,\n  findIndexSS,\n  callEventHandlerListeners,\n  Item,\n  generateNewClientId,\n  createID,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, GC, StructStore, AbstractType, AbstractStruct, YEvent, Doc // eslint-disable-line\n} from '../internals.js'\n\nimport * as map from 'lib0/map.js'\nimport * as math from 'lib0/math.js'\nimport * as set from 'lib0/set.js'\nimport * as logging from 'lib0/logging.js'\nimport { callAll } from 'lib0/function.js'\n\n/**\n * A transaction is created for every change on the Yjs model. It is possible\n * to bundle changes on the Yjs model in a single transaction to\n * minimize the number on messages sent and the number of observer calls.\n * If possible the user of this library should bundle as many changes as\n * possible. Here is an example to illustrate the advantages of bundling:\n *\n * @example\n * const map = y.define('map', YMap)\n * // Log content when change is triggered\n * map.observe(() => {\n *   console.log('change triggered')\n * })\n * // Each change on the map type triggers a log message:\n * map.set('a', 0) // => \"change triggered\"\n * map.set('b', 0) // => \"change triggered\"\n * // When put in a transaction, it will trigger the log after the transaction:\n * y.transact(() => {\n *   map.set('a', 1)\n *   map.set('b', 1)\n * }) // => \"change triggered\"\n *\n * @public\n */\nexport class Transaction {\n  /**\n   * @param {Doc} doc\n   * @param {any} origin\n   * @param {boolean} local\n   */\n  constructor (doc, origin, local) {\n    /**\n     * The Yjs instance.\n     * @type {Doc}\n     */\n    this.doc = doc\n    /**\n     * Describes the set of deleted items by ids\n     * @type {DeleteSet}\n     */\n    this.deleteSet = new DeleteSet()\n    /**\n     * Holds the state before the transaction started.\n     * @type {Map<Number,Number>}\n     */\n    this.beforeState = getStateVector(doc.store)\n    /**\n     * Holds the state after the transaction.\n     * @type {Map<Number,Number>}\n     */\n    this.afterState = new Map()\n    /**\n     * All types that were directly modified (property added or child\n     * inserted/deleted). New types are not included in this Set.\n     * Maps from type to parentSubs (`item.parentSub = null` for YArray)\n     * @type {Map<AbstractType<YEvent>,Set<String|null>>}\n     */\n    this.changed = new Map()\n    /**\n     * Stores the events for the types that observe also child elements.\n     * It is mainly used by `observeDeep`.\n     * @type {Map<AbstractType<YEvent>,Array<YEvent>>}\n     */\n    this.changedParentTypes = new Map()\n    /**\n     * @type {Array<AbstractStruct>}\n     */\n    this._mergeStructs = []\n    /**\n     * @type {any}\n     */\n    this.origin = origin\n    /**\n     * Stores meta information on the transaction\n     * @type {Map<any,any>}\n     */\n    this.meta = new Map()\n    /**\n     * Whether this change originates from this doc.\n     * @type {boolean}\n     */\n    this.local = local\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsAdded = new Set()\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsRemoved = new Set()\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsLoaded = new Set()\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n * @return {boolean} Whether data was written.\n */\nexport const writeUpdateMessageFromTransaction = (encoder, transaction) => {\n  if (transaction.deleteSet.clients.size === 0 && !map.any(transaction.afterState, (clock, client) => transaction.beforeState.get(client) !== clock)) {\n    return false\n  }\n  sortAndMergeDeleteSet(transaction.deleteSet)\n  writeStructsFromTransaction(encoder, transaction)\n  writeDeleteSet(encoder, transaction.deleteSet)\n  return true\n}\n\n/**\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nexport const nextID = transaction => {\n  const y = transaction.doc\n  return createID(y.clientID, getState(y.store, y.clientID))\n}\n\n/**\n * If `type.parent` was added in current transaction, `type` technically\n * did not change, it was just added and we should not fire events for `type`.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<YEvent>} type\n * @param {string|null} parentSub\n */\nexport const addChangedTypeToTransaction = (transaction, type, parentSub) => {\n  const item = type._item\n  if (item === null || (item.id.clock < (transaction.beforeState.get(item.id.client) || 0) && !item.deleted)) {\n    map.setIfUndefined(transaction.changed, type, set.create).add(parentSub)\n  }\n}\n\n/**\n * @param {Array<AbstractStruct>} structs\n * @param {number} pos\n */\nconst tryToMergeWithLeft = (structs, pos) => {\n  const left = structs[pos - 1]\n  const right = structs[pos]\n  if (left.deleted === right.deleted && left.constructor === right.constructor) {\n    if (left.mergeWith(right)) {\n      structs.splice(pos, 1)\n      if (right instanceof Item && right.parentSub !== null && /** @type {AbstractType<any>} */ (right.parent)._map.get(right.parentSub) === right) {\n        /** @type {AbstractType<any>} */ (right.parent)._map.set(right.parentSub, /** @type {Item} */ (left))\n      }\n    }\n  }\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nconst tryGcDeleteSet = (ds, store, gcFilter) => {\n  for (const [client, deleteItems] of ds.clients.entries()) {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di]\n      const endDeleteItemClock = deleteItem.clock + deleteItem.len\n      for (\n        let si = findIndexSS(structs, deleteItem.clock), struct = structs[si];\n        si < structs.length && struct.id.clock < endDeleteItemClock;\n        struct = structs[++si]\n      ) {\n        const struct = structs[si]\n        if (deleteItem.clock + deleteItem.len <= struct.id.clock) {\n          break\n        }\n        if (struct instanceof Item && struct.deleted && !struct.keep && gcFilter(struct)) {\n          struct.gc(store, false)\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n */\nconst tryMergeDeleteSet = (ds, store) => {\n  // try to merge deleted / gc'd items\n  // merge from right to left for better efficiecy and so we don't miss any merge targets\n  ds.clients.forEach((deleteItems, client) => {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di]\n      // start with merging the item next to the last deleted item\n      const mostRightIndexToCheck = math.min(structs.length - 1, 1 + findIndexSS(structs, deleteItem.clock + deleteItem.len - 1))\n      for (\n        let si = mostRightIndexToCheck, struct = structs[si];\n        si > 0 && struct.id.clock >= deleteItem.clock;\n        struct = structs[--si]\n      ) {\n        tryToMergeWithLeft(structs, si)\n      }\n    }\n  })\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nexport const tryGc = (ds, store, gcFilter) => {\n  tryGcDeleteSet(ds, store, gcFilter)\n  tryMergeDeleteSet(ds, store)\n}\n\n/**\n * @param {Array<Transaction>} transactionCleanups\n * @param {number} i\n */\nconst cleanupTransactions = (transactionCleanups, i) => {\n  if (i < transactionCleanups.length) {\n    const transaction = transactionCleanups[i]\n    const doc = transaction.doc\n    const store = doc.store\n    const ds = transaction.deleteSet\n    const mergeStructs = transaction._mergeStructs\n    try {\n      sortAndMergeDeleteSet(ds)\n      transaction.afterState = getStateVector(transaction.doc.store)\n      doc._transaction = null\n      doc.emit('beforeObserverCalls', [transaction, doc])\n      /**\n       * An array of event callbacks.\n       *\n       * Each callback is called even if the other ones throw errors.\n       *\n       * @type {Array<function():void>}\n       */\n      const fs = []\n      // observe events on changed types\n      transaction.changed.forEach((subs, itemtype) =>\n        fs.push(() => {\n          if (itemtype._item === null || !itemtype._item.deleted) {\n            itemtype._callObserver(transaction, subs)\n          }\n        })\n      )\n      fs.push(() => {\n        // deep observe events\n        transaction.changedParentTypes.forEach((events, type) =>\n          fs.push(() => {\n            // We need to think about the possibility that the user transforms the\n            // Y.Doc in the event.\n            if (type._item === null || !type._item.deleted) {\n              events = events\n                .filter(event =>\n                  event.target._item === null || !event.target._item.deleted\n                )\n              events\n                .forEach(event => {\n                  event.currentTarget = type\n                })\n              // sort events by path length so that top-level events are fired first.\n              events\n                .sort((event1, event2) => event1.path.length - event2.path.length)\n              // We don't need to check for events.length\n              // because we know it has at least one element\n              callEventHandlerListeners(type._dEH, events, transaction)\n            }\n          })\n        )\n        fs.push(() => doc.emit('afterTransaction', [transaction, doc]))\n      })\n      callAll(fs, [])\n    } finally {\n      // Replace deleted items with ItemDeleted / GC.\n      // This is where content is actually remove from the Yjs Doc.\n      if (doc.gc) {\n        tryGcDeleteSet(ds, store, doc.gcFilter)\n      }\n      tryMergeDeleteSet(ds, store)\n\n      // on all affected store.clients props, try to merge\n      transaction.afterState.forEach((clock, client) => {\n        const beforeClock = transaction.beforeState.get(client) || 0\n        if (beforeClock !== clock) {\n          const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n          // we iterate from right to left so we can safely remove entries\n          const firstChangePos = math.max(findIndexSS(structs, beforeClock), 1)\n          for (let i = structs.length - 1; i >= firstChangePos; i--) {\n            tryToMergeWithLeft(structs, i)\n          }\n        }\n      })\n      // try to merge mergeStructs\n      // @todo: it makes more sense to transform mergeStructs to a DS, sort it, and merge from right to left\n      //        but at the moment DS does not handle duplicates\n      for (let i = 0; i < mergeStructs.length; i++) {\n        const { client, clock } = mergeStructs[i].id\n        const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n        const replacedStructPos = findIndexSS(structs, clock)\n        if (replacedStructPos + 1 < structs.length) {\n          tryToMergeWithLeft(structs, replacedStructPos + 1)\n        }\n        if (replacedStructPos > 0) {\n          tryToMergeWithLeft(structs, replacedStructPos)\n        }\n      }\n      if (!transaction.local && transaction.afterState.get(doc.clientID) !== transaction.beforeState.get(doc.clientID)) {\n        doc.clientID = generateNewClientId()\n        logging.print(logging.ORANGE, logging.BOLD, '[yjs] ', logging.UNBOLD, logging.RED, 'Changed the client-id because another client seems to be using it.')\n      }\n      // @todo Merge all the transactions into one and provide send the data as a single update message\n      doc.emit('afterTransactionCleanup', [transaction, doc])\n      if (doc._observers.has('update')) {\n        const encoder = new UpdateEncoderV1()\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction)\n        if (hasContent) {\n          doc.emit('update', [encoder.toUint8Array(), transaction.origin, doc, transaction])\n        }\n      }\n      if (doc._observers.has('updateV2')) {\n        const encoder = new UpdateEncoderV2()\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction)\n        if (hasContent) {\n          doc.emit('updateV2', [encoder.toUint8Array(), transaction.origin, doc, transaction])\n        }\n      }\n      transaction.subdocsAdded.forEach(subdoc => doc.subdocs.add(subdoc))\n      transaction.subdocsRemoved.forEach(subdoc => doc.subdocs.delete(subdoc))\n\n      doc.emit('subdocs', [{ loaded: transaction.subdocsLoaded, added: transaction.subdocsAdded, removed: transaction.subdocsRemoved }])\n      transaction.subdocsRemoved.forEach(subdoc => subdoc.destroy())\n\n      if (transactionCleanups.length <= i + 1) {\n        doc._transactionCleanups = []\n        doc.emit('afterAllTransactions', [doc, transactionCleanups])\n      } else {\n        cleanupTransactions(transactionCleanups, i + 1)\n      }\n    }\n  }\n}\n\n/**\n * Implements the functionality of `y.transact(()=>{..})`\n *\n * @param {Doc} doc\n * @param {function(Transaction):void} f\n * @param {any} [origin=true]\n *\n * @function\n */\nexport const transact = (doc, f, origin = null, local = true) => {\n  const transactionCleanups = doc._transactionCleanups\n  let initialCall = false\n  if (doc._transaction === null) {\n    initialCall = true\n    doc._transaction = new Transaction(doc, origin, local)\n    transactionCleanups.push(doc._transaction)\n    if (transactionCleanups.length === 1) {\n      doc.emit('beforeAllTransactions', [doc])\n    }\n    doc.emit('beforeTransaction', [doc._transaction, doc])\n  }\n  try {\n    f(doc._transaction)\n  } finally {\n    if (initialCall && transactionCleanups[0] === doc._transaction) {\n      // The first transaction ended, now process observer calls.\n      // Observer call may create new transactions for which we need to call the observers and do cleanup.\n      // We don't want to nest these calls, so we execute these calls one after\n      // another.\n      // Also we need to ensure that all cleanups are called, even if the\n      // observes throw errors.\n      // This file is full of hacky try {} finally {} blocks to ensure that an\n      // event can throw errors and also that the cleanup is called.\n      cleanupTransactions(transactionCleanups, 0)\n    }\n  }\n}\n","import {\n  mergeDeleteSets,\n  iterateDeletedStructs,\n  keepItem,\n  transact,\n  createID,\n  redoItem,\n  isParentOf,\n  followRedone,\n  getItemCleanStart,\n  isDeleted,\n  addToDeleteSet,\n  Transaction, Doc, Item, GC, DeleteSet, AbstractType, YEvent // eslint-disable-line\n} from '../internals.js'\n\nimport * as time from 'lib0/time.js'\nimport { Observable } from 'lib0/observable.js'\n\nclass StackItem {\n  /**\n   * @param {DeleteSet} deletions\n   * @param {DeleteSet} insertions\n   */\n  constructor (deletions, insertions) {\n    this.insertions = insertions\n    this.deletions = deletions\n    /**\n     * Use this to save and restore metadata like selection range\n     */\n    this.meta = new Map()\n  }\n}\n\n/**\n * @param {UndoManager} undoManager\n * @param {Array<StackItem>} stack\n * @param {string} eventType\n * @return {StackItem?}\n */\nconst popStackItem = (undoManager, stack, eventType) => {\n  /**\n   * Whether a change happened\n   * @type {StackItem?}\n   */\n  let result = null\n  /**\n   * Keep a reference to the transaction so we can fire the event with the changedParentTypes\n   * @type {any}\n   */\n  let _tr = null\n  const doc = undoManager.doc\n  const scope = undoManager.scope\n  transact(doc, transaction => {\n    while (stack.length > 0 && result === null) {\n      const store = doc.store\n      const stackItem = /** @type {StackItem} */ (stack.pop())\n      /**\n       * @type {Set<Item>}\n       */\n      const itemsToRedo = new Set()\n      /**\n       * @type {Array<Item>}\n       */\n      const itemsToDelete = []\n      let performedChange = false\n      iterateDeletedStructs(transaction, stackItem.insertions, struct => {\n        if (struct instanceof Item) {\n          if (struct.redone !== null) {\n            let { item, diff } = followRedone(store, struct.id)\n            if (diff > 0) {\n              item = getItemCleanStart(transaction, createID(item.id.client, item.id.clock + diff))\n            }\n            struct = item\n          }\n          if (!struct.deleted && scope.some(type => isParentOf(type, /** @type {Item} */ (struct)))) {\n            itemsToDelete.push(struct)\n          }\n        }\n      })\n      iterateDeletedStructs(transaction, stackItem.deletions, struct => {\n        if (\n          struct instanceof Item &&\n          scope.some(type => isParentOf(type, struct)) &&\n          // Never redo structs in stackItem.insertions because they were created and deleted in the same capture interval.\n          !isDeleted(stackItem.insertions, struct.id)\n        ) {\n          itemsToRedo.add(struct)\n        }\n      })\n      itemsToRedo.forEach(struct => {\n        performedChange = redoItem(transaction, struct, itemsToRedo) !== null || performedChange\n      })\n      // We want to delete in reverse order so that children are deleted before\n      // parents, so we have more information available when items are filtered.\n      for (let i = itemsToDelete.length - 1; i >= 0; i--) {\n        const item = itemsToDelete[i]\n        if (undoManager.deleteFilter(item)) {\n          item.delete(transaction)\n          performedChange = true\n        }\n      }\n      result = performedChange ? stackItem : null\n    }\n    transaction.changed.forEach((subProps, type) => {\n      // destroy search marker if necessary\n      if (subProps.has(null) && type._searchMarker) {\n        type._searchMarker.length = 0\n      }\n    })\n    _tr = transaction\n  }, undoManager)\n  if (result != null) {\n    const changedParentTypes = _tr.changedParentTypes\n    undoManager.emit('stack-item-popped', [{ stackItem: result, type: eventType, changedParentTypes }, undoManager])\n  }\n  return result\n}\n\n/**\n * @typedef {Object} UndoManagerOptions\n * @property {number} [UndoManagerOptions.captureTimeout=500]\n * @property {function(Item):boolean} [UndoManagerOptions.deleteFilter=()=>true] Sometimes\n * it is necessary to filter whan an Undo/Redo operation can delete. If this\n * filter returns false, the type/item won't be deleted even it is in the\n * undo/redo scope.\n * @property {Set<any>} [UndoManagerOptions.trackedOrigins=new Set([null])]\n */\n\n/**\n * Fires 'stack-item-added' event when a stack item was added to either the undo- or\n * the redo-stack. You may store additional stack information via the\n * metadata property on `event.stackItem.meta` (it is a `Map` of metadata properties).\n * Fires 'stack-item-popped' event when a stack item was popped from either the\n * undo- or the redo-stack. You may restore the saved stack information from `event.stackItem.meta`.\n *\n * @extends {Observable<'stack-item-added'|'stack-item-popped'>}\n */\nexport class UndoManager extends Observable {\n  /**\n   * @param {AbstractType<any>|Array<AbstractType<any>>} typeScope Accepts either a single type, or an array of types\n   * @param {UndoManagerOptions} options\n   */\n  constructor (typeScope, { captureTimeout = 500, deleteFilter = () => true, trackedOrigins = new Set([null]) } = {}) {\n    super()\n    this.scope = typeScope instanceof Array ? typeScope : [typeScope]\n    this.deleteFilter = deleteFilter\n    trackedOrigins.add(this)\n    this.trackedOrigins = trackedOrigins\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.undoStack = []\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.redoStack = []\n    /**\n     * Whether the client is currently undoing (calling UndoManager.undo)\n     *\n     * @type {boolean}\n     */\n    this.undoing = false\n    this.redoing = false\n    this.doc = /** @type {Doc} */ (this.scope[0].doc)\n    this.lastChange = 0\n    this.doc.on('afterTransaction', /** @param {Transaction} transaction */ transaction => {\n      // Only track certain transactions\n      if (!this.scope.some(type => transaction.changedParentTypes.has(type)) || (!this.trackedOrigins.has(transaction.origin) && (!transaction.origin || !this.trackedOrigins.has(transaction.origin.constructor)))) {\n        return\n      }\n      const undoing = this.undoing\n      const redoing = this.redoing\n      const stack = undoing ? this.redoStack : this.undoStack\n      if (undoing) {\n        this.stopCapturing() // next undo should not be appended to last stack item\n      } else if (!redoing) {\n        // neither undoing nor redoing: delete redoStack\n        this.redoStack = []\n      }\n      const insertions = new DeleteSet()\n      transaction.afterState.forEach((endClock, client) => {\n        const startClock = transaction.beforeState.get(client) || 0\n        const len = endClock - startClock\n        if (len > 0) {\n          addToDeleteSet(insertions, client, startClock, len)\n        }\n      })\n      const now = time.getUnixTime()\n      if (now - this.lastChange < captureTimeout && stack.length > 0 && !undoing && !redoing) {\n        // append change to last stack op\n        const lastOp = stack[stack.length - 1]\n        lastOp.deletions = mergeDeleteSets([lastOp.deletions, transaction.deleteSet])\n        lastOp.insertions = mergeDeleteSets([lastOp.insertions, insertions])\n      } else {\n        // create a new stack op\n        stack.push(new StackItem(transaction.deleteSet, insertions))\n      }\n      if (!undoing && !redoing) {\n        this.lastChange = now\n      }\n      // make sure that deleted structs are not gc'd\n      iterateDeletedStructs(transaction, transaction.deleteSet, /** @param {Item|GC} item */ item => {\n        if (item instanceof Item && this.scope.some(type => isParentOf(type, item))) {\n          keepItem(item, true)\n        }\n      })\n      this.emit('stack-item-added', [{ stackItem: stack[stack.length - 1], origin: transaction.origin, type: undoing ? 'redo' : 'undo', changedParentTypes: transaction.changedParentTypes }, this])\n    })\n  }\n\n  clear () {\n    this.doc.transact(transaction => {\n      /**\n       * @param {StackItem} stackItem\n       */\n      const clearItem = stackItem => {\n        iterateDeletedStructs(transaction, stackItem.deletions, item => {\n          if (item instanceof Item && this.scope.some(type => isParentOf(type, item))) {\n            keepItem(item, false)\n          }\n        })\n      }\n      this.undoStack.forEach(clearItem)\n      this.redoStack.forEach(clearItem)\n    })\n    this.undoStack = []\n    this.redoStack = []\n  }\n\n  /**\n   * UndoManager merges Undo-StackItem if they are created within time-gap\n   * smaller than `options.captureTimeout`. Call `um.stopCapturing()` so that the next\n   * StackItem won't be merged.\n   *\n   *\n   * @example\n   *     // without stopCapturing\n   *     ytext.insert(0, 'a')\n   *     ytext.insert(1, 'b')\n   *     um.undo()\n   *     ytext.toString() // => '' (note that 'ab' was removed)\n   *     // with stopCapturing\n   *     ytext.insert(0, 'a')\n   *     um.stopCapturing()\n   *     ytext.insert(0, 'b')\n   *     um.undo()\n   *     ytext.toString() // => 'a' (note that only 'b' was removed)\n   *\n   */\n  stopCapturing () {\n    this.lastChange = 0\n  }\n\n  /**\n   * Undo last changes on type.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  undo () {\n    this.undoing = true\n    let res\n    try {\n      res = popStackItem(this, this.undoStack, 'undo')\n    } finally {\n      this.undoing = false\n    }\n    return res\n  }\n\n  /**\n   * Redo last undo operation.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  redo () {\n    this.redoing = true\n    let res\n    try {\n      res = popStackItem(this, this.redoStack, 'redo')\n    } finally {\n      this.redoing = false\n    }\n    return res\n  }\n}\n","\nimport * as binary from 'lib0/binary.js'\nimport * as decoding from 'lib0/decoding.js'\nimport * as encoding from 'lib0/encoding.js'\nimport * as logging from 'lib0/logging.js'\nimport * as math from 'lib0/math.js'\nimport {\n  createID,\n  readItemContent,\n  readDeleteSet,\n  writeDeleteSet,\n  Skip,\n  mergeDeleteSets,\n  DSEncoderV1,\n  DSEncoderV2,\n  decodeStateVector,\n  Item, GC, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2 // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n */\nfunction * lazyStructReaderGenerator (decoder) {\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder)\n    const client = decoder.readClient()\n    let clock = decoding.readVarUint(decoder.restDecoder)\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo()\n      // @todo use switch instead of ifs\n      if (info === 10) {\n        const len = decoding.readVarUint(decoder.restDecoder)\n        yield new Skip(createID(client, clock), len)\n        clock += len\n      } else if ((binary.BITS5 & info) !== 0) {\n        const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n        // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n        // and we read the next string as parentYKey.\n        // It indicates how we store/retrieve parent from `y.share`\n        // @type {string|null}\n        const struct = new Item(\n          createID(client, clock),\n          null, // left\n          (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n          null, // right\n          (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n          // @ts-ignore Force writing a string here.\n          cantCopyParentInfo ? (decoder.readParentInfo() ? decoder.readString() : decoder.readLeftID()) : null, // parent\n          cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n          readItemContent(decoder, info) // item content\n        )\n        yield struct\n        clock += struct.length\n      } else {\n        const len = decoder.readLen()\n        yield new GC(createID(client, clock), len)\n        clock += len\n      }\n    }\n  }\n}\n\nexport class LazyStructReader {\n  /**\n   * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n   * @param {boolean} filterSkips\n   */\n  constructor (decoder, filterSkips) {\n    this.gen = lazyStructReaderGenerator(decoder)\n    /**\n     * @type {null | Item | Skip | GC}\n     */\n    this.curr = null\n    this.done = false\n    this.filterSkips = filterSkips\n    this.next()\n  }\n\n  /**\n   * @return {Item | GC | Skip |null}\n   */\n  next () {\n    // ignore \"Skip\" structs\n    do {\n      this.curr = this.gen.next().value || null\n    } while (this.filterSkips && this.curr !== null && this.curr.constructor === Skip)\n    return this.curr\n  }\n}\n\n/**\n * @param {Uint8Array} update\n *\n */\nexport const logUpdate = update => logUpdateV2(update, UpdateDecoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nexport const logUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = []\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr)\n  }\n  logging.print('Structs: ', structs)\n  const ds = readDeleteSet(updateDecoder)\n  logging.print('DeleteSet: ', ds)\n}\n\nexport class LazyStructWriter {\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  constructor (encoder) {\n    this.currClient = 0\n    this.startClock = 0\n    this.written = 0\n    this.encoder = encoder\n    /**\n     * We want to write operations lazily, but also we need to know beforehand how many operations we want to write for each client.\n     *\n     * This kind of meta-information (#clients, #structs-per-client-written) is written to the restEncoder.\n     *\n     * We fragment the restEncoder and store a slice of it per-client until we know how many clients there are.\n     * When we flush (toUint8Array) we write the restEncoder using the fragments and the meta-information.\n     *\n     * @type {Array<{ written: number, restEncoder: Uint8Array }>}\n     */\n    this.clientStructs = []\n  }\n}\n\n/**\n * @param {Array<Uint8Array>} updates\n * @return {Uint8Array}\n */\nexport const mergeUpdates = updates => mergeUpdatesV2(updates, UpdateDecoderV1, UpdateEncoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof DSEncoderV1 | typeof DSEncoderV2} YEncoder\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {Uint8Array}\n */\nexport const encodeStateVectorFromUpdateV2 = (update, YEncoder = DSEncoderV2, YDecoder = UpdateDecoderV2) => {\n  const encoder = new YEncoder()\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), true)\n  let curr = updateDecoder.curr\n  if (curr !== null) {\n    let size = 1\n    let currClient = curr.id.client\n    let currClock = curr.id.clock\n    let stopCounting = false\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        size++\n        // We found a new client\n        // write what we have to the encoder\n        encoding.writeVarUint(encoder.restEncoder, currClient)\n        encoding.writeVarUint(encoder.restEncoder, currClock)\n        currClient = curr.id.client\n        stopCounting = false\n      }\n      if (curr.constructor === Skip) {\n        stopCounting = true\n      }\n      if (!stopCounting) {\n        currClock = curr.id.clock + curr.length\n      }\n    }\n    // write what we have\n    encoding.writeVarUint(encoder.restEncoder, currClient)\n    encoding.writeVarUint(encoder.restEncoder, currClock)\n    // prepend the size of the state vector\n    const enc = encoding.createEncoder()\n    encoding.writeVarUint(enc, size)\n    encoding.writeBinaryEncoder(enc, encoder.restEncoder)\n    encoder.restEncoder = enc\n    return encoder.toUint8Array()\n  } else {\n    encoding.writeVarUint(encoder.restEncoder, 0)\n    return encoder.toUint8Array()\n  }\n}\n\n/**\n * @param {Uint8Array} update\n * @return {Uint8Array}\n */\nexport const encodeStateVectorFromUpdate = update => encodeStateVectorFromUpdateV2(update, DSEncoderV1, UpdateDecoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nexport const parseUpdateMetaV2 = (update, YDecoder = UpdateDecoderV2) => {\n  /**\n   * @type {Map<number, number>}\n   */\n  const from = new Map()\n  /**\n   * @type {Map<number, number>}\n   */\n  const to = new Map()\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false)\n  let curr = updateDecoder.curr\n  if (curr !== null) {\n    let currClient = curr.id.client\n    let currClock = curr.id.clock\n    // write the beginning to `from`\n    from.set(currClient, currClock)\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        // We found a new client\n        // write the end to `to`\n        to.set(currClient, currClock)\n        // write the beginning to `from`\n        from.set(curr.id.client, curr.id.clock)\n        // update currClient\n        currClient = curr.id.client\n      }\n      currClock = curr.id.clock + curr.length\n    }\n    // write the end to `to`\n    to.set(currClient, currClock)\n  }\n  return { from, to }\n}\n\n/**\n * @param {Uint8Array} update\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nexport const parseUpdateMeta = update => parseUpdateMetaV2(update, UpdateDecoderV1)\n\n/**\n * This method is intended to slice any kind of struct and retrieve the right part.\n * It does not handle side-effects, so it should only be used by the lazy-encoder.\n *\n * @param {Item | GC | Skip} left\n * @param {number} diff\n * @return {Item | GC}\n */\nconst sliceStruct = (left, diff) => {\n  if (left.constructor === GC) {\n    const { client, clock } = left.id\n    return new GC(createID(client, clock + diff), left.length - diff)\n  } else if (left.constructor === Skip) {\n    const { client, clock } = left.id\n    return new Skip(createID(client, clock + diff), left.length - diff)\n  } else {\n    const leftItem = /** @type {Item} */ (left)\n    const { client, clock } = leftItem.id\n    return new Item(\n      createID(client, clock + diff),\n      null,\n      createID(client, clock + diff - 1),\n      null,\n      leftItem.rightOrigin,\n      leftItem.parent,\n      leftItem.parentSub,\n      leftItem.content.splice(diff)\n    )\n  }\n}\n\n/**\n *\n * This function works similarly to `readUpdateV2`.\n *\n * @param {Array<Uint8Array>} updates\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n * @return {Uint8Array}\n */\nexport const mergeUpdatesV2 = (updates, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  const updateDecoders = updates.map(update => new YDecoder(decoding.createDecoder(update)))\n  let lazyStructDecoders = updateDecoders.map(decoder => new LazyStructReader(decoder, true))\n\n  /**\n   * @todo we don't need offset because we always slice before\n   * @type {null | { struct: Item | GC | Skip, offset: number }}\n   */\n  let currWrite = null\n\n  const updateEncoder = new YEncoder()\n  // write structs lazily\n  const lazyStructEncoder = new LazyStructWriter(updateEncoder)\n\n  // Note: We need to ensure that all lazyStructDecoders are fully consumed\n  // Note: Should merge document updates whenever possible - even from different updates\n  // Note: Should handle that some operations cannot be applied yet ()\n\n  while (true) {\n    // Write higher clients first ⇒ sort by clientID & clock and remove decoders without content\n    lazyStructDecoders = lazyStructDecoders.filter(dec => dec.curr !== null)\n    lazyStructDecoders.sort(\n      /** @type {function(any,any):number} */ (dec1, dec2) => {\n        if (dec1.curr.id.client === dec2.curr.id.client) {\n          const clockDiff = dec1.curr.id.clock - dec2.curr.id.clock\n          if (clockDiff === 0) {\n            return dec1.curr.constructor === dec2.curr.constructor ? 0 : (\n              dec1.curr.constructor === Skip ? 1 : -1\n            )\n          } else {\n            return clockDiff\n          }\n        } else {\n          return dec2.curr.id.client - dec1.curr.id.client\n        }\n      }\n    )\n    if (lazyStructDecoders.length === 0) {\n      break\n    }\n    const currDecoder = lazyStructDecoders[0]\n    // write from currDecoder until the next operation is from another client or if filler-struct\n    // then we need to reorder the decoders and find the next operation to write\n    const firstClient = /** @type {Item | GC} */ (currDecoder.curr).id.client\n\n    if (currWrite !== null) {\n      let curr = /** @type {Item | GC | null} */ (currDecoder.curr)\n\n      // iterate until we find something that we haven't written already\n      // remember: first the high client-ids are written\n      while (curr !== null && curr.id.clock + curr.length <= currWrite.struct.id.clock + currWrite.struct.length && curr.id.client >= currWrite.struct.id.client) {\n        curr = currDecoder.next()\n      }\n      if (curr === null || curr.id.client !== firstClient) {\n        continue\n      }\n\n      if (firstClient !== currWrite.struct.id.client) {\n        writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n        currWrite = { struct: curr, offset: 0 }\n        currDecoder.next()\n      } else {\n        if (currWrite.struct.id.clock + currWrite.struct.length < curr.id.clock) {\n          // @todo write currStruct & set currStruct = Skip(clock = currStruct.id.clock + currStruct.length, length = curr.id.clock - self.clock)\n          if (currWrite.struct.constructor === Skip) {\n            // extend existing skip\n            currWrite.struct.length = curr.id.clock + curr.length - currWrite.struct.id.clock\n          } else {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n            const diff = curr.id.clock - currWrite.struct.id.clock - currWrite.struct.length\n            /**\n             * @type {Skip}\n             */\n            const struct = new Skip(createID(firstClient, currWrite.struct.id.clock + currWrite.struct.length), diff)\n            currWrite = { struct, offset: 0 }\n          }\n        } else { // if (currWrite.struct.id.clock + currWrite.struct.length >= curr.id.clock) {\n          const diff = currWrite.struct.id.clock + currWrite.struct.length - curr.id.clock\n          if (diff > 0) {\n            if (currWrite.struct.constructor === Skip) {\n              // prefer to slice Skip because the other struct might contain more information\n              currWrite.struct.length -= diff\n            } else {\n              curr = sliceStruct(curr, diff)\n            }\n          }\n          if (!currWrite.struct.mergeWith(/** @type {any} */ (curr))) {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n            currWrite = { struct: curr, offset: 0 }\n            currDecoder.next()\n          }\n        }\n      }\n    } else {\n      currWrite = { struct: /** @type {Item | GC} */ (currDecoder.curr), offset: 0 }\n      currDecoder.next()\n    }\n    for (\n      let next = currDecoder.curr;\n      next !== null && next.id.client === firstClient && next.id.clock === currWrite.struct.id.clock + currWrite.struct.length && next.constructor !== Skip;\n      next = currDecoder.next()\n    ) {\n      writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n      currWrite = { struct: next, offset: 0 }\n    }\n  }\n  if (currWrite !== null) {\n    writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n    currWrite = null\n  }\n  finishLazyStructWriting(lazyStructEncoder)\n\n  const dss = updateDecoders.map(decoder => readDeleteSet(decoder))\n  const ds = mergeDeleteSets(dss)\n  writeDeleteSet(updateEncoder, ds)\n  return updateEncoder.toUint8Array()\n}\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n */\nexport const diffUpdateV2 = (update, sv, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  const state = decodeStateVector(sv)\n  const encoder = new YEncoder()\n  const lazyStructWriter = new LazyStructWriter(encoder)\n  const decoder = new YDecoder(decoding.createDecoder(update))\n  const reader = new LazyStructReader(decoder, false)\n  while (reader.curr) {\n    const curr = reader.curr\n    const currClient = curr.id.client\n    const svClock = state.get(currClient) || 0\n    if (reader.curr.constructor === Skip) {\n      // the first written struct shouldn't be a skip\n      reader.next()\n      continue\n    }\n    if (curr.id.clock + curr.length > svClock) {\n      writeStructToLazyStructWriter(lazyStructWriter, curr, math.max(svClock - curr.id.clock, 0))\n      reader.next()\n      while (reader.curr && reader.curr.id.client === currClient) {\n        writeStructToLazyStructWriter(lazyStructWriter, reader.curr, 0)\n        reader.next()\n      }\n    } else {\n      // read until something new comes up\n      while (reader.curr && reader.curr.id.client === currClient && reader.curr.id.clock + reader.curr.length <= svClock) {\n        reader.next()\n      }\n    }\n  }\n  finishLazyStructWriting(lazyStructWriter)\n  // write ds\n  const ds = readDeleteSet(decoder)\n  writeDeleteSet(encoder, ds)\n  return encoder.toUint8Array()\n}\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n */\nexport const diffUpdate = (update, sv) => diffUpdateV2(update, sv, UpdateDecoderV1, UpdateEncoderV1)\n\n/**\n * @param {LazyStructWriter} lazyWriter\n */\nconst flushLazyStructWriter = lazyWriter => {\n  if (lazyWriter.written > 0) {\n    lazyWriter.clientStructs.push({ written: lazyWriter.written, restEncoder: encoding.toUint8Array(lazyWriter.encoder.restEncoder) })\n    lazyWriter.encoder.restEncoder = encoding.createEncoder()\n    lazyWriter.written = 0\n  }\n}\n\n/**\n * @param {LazyStructWriter} lazyWriter\n * @param {Item | GC} struct\n * @param {number} offset\n */\nconst writeStructToLazyStructWriter = (lazyWriter, struct, offset) => {\n  // flush curr if we start another client\n  if (lazyWriter.written > 0 && lazyWriter.currClient !== struct.id.client) {\n    flushLazyStructWriter(lazyWriter)\n  }\n  if (lazyWriter.written === 0) {\n    lazyWriter.currClient = struct.id.client\n    // write next client\n    lazyWriter.encoder.writeClient(struct.id.client)\n    // write startClock\n    encoding.writeVarUint(lazyWriter.encoder.restEncoder, struct.id.clock + offset)\n  }\n  struct.write(lazyWriter.encoder, offset)\n  lazyWriter.written++\n}\n/**\n * Call this function when we collected all parts and want to\n * put all the parts together. After calling this method,\n * you can continue using the UpdateEncoder.\n *\n * @param {LazyStructWriter} lazyWriter\n */\nconst finishLazyStructWriting = (lazyWriter) => {\n  flushLazyStructWriter(lazyWriter)\n\n  // this is a fresh encoder because we called flushCurr\n  const restEncoder = lazyWriter.encoder.restEncoder\n\n  /**\n   * Now we put all the fragments together.\n   * This works similarly to `writeClientsStructs`\n   */\n\n  // write # states that were updated - i.e. the clients\n  encoding.writeVarUint(restEncoder, lazyWriter.clientStructs.length)\n\n  for (let i = 0; i < lazyWriter.clientStructs.length; i++) {\n    const partStructs = lazyWriter.clientStructs[i]\n    /**\n     * Works similarly to `writeStructs`\n     */\n    // write # encoded structs\n    encoding.writeVarUint(restEncoder, partStructs.written)\n    // write the rest of the fragment\n    encoding.writeUint8Array(restEncoder, partStructs.restEncoder)\n  }\n}\n","\nimport {\n  isDeleted,\n  Item, AbstractType, Transaction, AbstractStruct // eslint-disable-line\n} from '../internals.js'\n\nimport * as set from 'lib0/set.js'\nimport * as array from 'lib0/array.js'\n\n/**\n * YEvent describes the changes on a YType.\n */\nexport class YEvent {\n  /**\n   * @param {AbstractType<any>} target The changed type.\n   * @param {Transaction} transaction\n   */\n  constructor (target, transaction) {\n    /**\n     * The type on which this event was created on.\n     * @type {AbstractType<any>}\n     */\n    this.target = target\n    /**\n     * The current target on which the observe callback is called.\n     * @type {AbstractType<any>}\n     */\n    this.currentTarget = target\n    /**\n     * The transaction that triggered this event.\n     * @type {Transaction}\n     */\n    this.transaction = transaction\n    /**\n     * @type {Object|null}\n     */\n    this._changes = null\n    /**\n     * @type {null | Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n     */\n    this._keys = null\n    /**\n     * @type {null | Array<{ insert?: string | Array<any>, retain?: number, delete?: number, attributes?: Object<string, any> }>}\n     */\n    this._delta = null\n  }\n\n  /**\n   * Computes the path from `y` to the changed type.\n   *\n   * @todo v14 should standardize on path: Array<{parent, index}> because that is easier to work with.\n   *\n   * The following property holds:\n   * @example\n   *   let type = y\n   *   event.path.forEach(dir => {\n   *     type = type.get(dir)\n   *   })\n   *   type === event.target // => true\n   */\n  get path () {\n    // @ts-ignore _item is defined because target is integrated\n    return getPathTo(this.currentTarget, this.target)\n  }\n\n  /**\n   * Check if a struct is deleted by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  deletes (struct) {\n    return isDeleted(this.transaction.deleteSet, struct.id)\n  }\n\n  /**\n   * @type {Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n   */\n  get keys () {\n    if (this._keys === null) {\n      const keys = new Map()\n      const target = this.target\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target))\n      changed.forEach(key => {\n        if (key !== null) {\n          const item = /** @type {Item} */ (target._map.get(key))\n          /**\n           * @type {'delete' | 'add' | 'update'}\n           */\n          let action\n          let oldValue\n          if (this.adds(item)) {\n            let prev = item.left\n            while (prev !== null && this.adds(prev)) {\n              prev = prev.left\n            }\n            if (this.deletes(item)) {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'delete'\n                oldValue = array.last(prev.content.getContent())\n              } else {\n                return\n              }\n            } else {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'update'\n                oldValue = array.last(prev.content.getContent())\n              } else {\n                action = 'add'\n                oldValue = undefined\n              }\n            }\n          } else {\n            if (this.deletes(item)) {\n              action = 'delete'\n              oldValue = array.last(/** @type {Item} */ item.content.getContent())\n            } else {\n              return // nop\n            }\n          }\n          keys.set(key, { action, oldValue })\n        }\n      })\n      this._keys = keys\n    }\n    return this._keys\n  }\n\n  /**\n   * @type {Array<{insert?: string | Array<any>, retain?: number, delete?: number, attributes?: Object<string, any>}>}\n   */\n  get delta () {\n    return this.changes.delta\n  }\n\n  /**\n   * Check if a struct is added by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  adds (struct) {\n    return struct.id.clock >= (this.transaction.beforeState.get(struct.id.client) || 0)\n  }\n\n  /**\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    let changes = this._changes\n    if (changes === null) {\n      const target = this.target\n      const added = set.create()\n      const deleted = set.create()\n      /**\n       * @type {Array<{insert:Array<any>}|{delete:number}|{retain:number}>}\n       */\n      const delta = []\n      changes = {\n        added,\n        deleted,\n        delta,\n        keys: this.keys\n      }\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target))\n      if (changed.has(null)) {\n        /**\n         * @type {any}\n         */\n        let lastOp = null\n        const packOp = () => {\n          if (lastOp) {\n            delta.push(lastOp)\n          }\n        }\n        for (let item = target._start; item !== null; item = item.right) {\n          if (item.deleted) {\n            if (this.deletes(item) && !this.adds(item)) {\n              if (lastOp === null || lastOp.delete === undefined) {\n                packOp()\n                lastOp = { delete: 0 }\n              }\n              lastOp.delete += item.length\n              deleted.add(item)\n            } // else nop\n          } else {\n            if (this.adds(item)) {\n              if (lastOp === null || lastOp.insert === undefined) {\n                packOp()\n                lastOp = { insert: [] }\n              }\n              lastOp.insert = lastOp.insert.concat(item.content.getContent())\n              added.add(item)\n            } else {\n              if (lastOp === null || lastOp.retain === undefined) {\n                packOp()\n                lastOp = { retain: 0 }\n              }\n              lastOp.retain += item.length\n            }\n          }\n        }\n        if (lastOp !== null && lastOp.retain === undefined) {\n          packOp()\n        }\n      }\n      this._changes = changes\n    }\n    return /** @type {any} */ (changes)\n  }\n}\n\n/**\n * Compute the path from this type to the specified target.\n *\n * @example\n *   // `child` should be accessible via `type.get(path[0]).get(path[1])..`\n *   const path = type.getPathTo(child)\n *   // assuming `type instanceof YArray`\n *   console.log(path) // might look like => [2, 'key1']\n *   child === type.get(path[0]).get(path[1])\n *\n * @param {AbstractType<any>} parent\n * @param {AbstractType<any>} child target\n * @return {Array<string|number>} Path to the target\n *\n * @private\n * @function\n */\nconst getPathTo = (parent, child) => {\n  const path = []\n  while (child._item !== null && child !== parent) {\n    if (child._item.parentSub !== null) {\n      // parent is map-ish\n      path.unshift(child._item.parentSub)\n    } else {\n      // parent is array-ish\n      let i = 0\n      let c = /** @type {AbstractType<any>} */ (child._item.parent)._start\n      while (c !== child._item && c !== null) {\n        if (!c.deleted) {\n          i++\n        }\n        c = c.right\n      }\n      path.unshift(i)\n    }\n    child = /** @type {AbstractType<any>} */ (child._item.parent)\n  }\n  return path\n}\n","\nimport {\n  removeEventHandlerListener,\n  callEventHandlerListeners,\n  addEventHandlerListener,\n  createEventHandler,\n  getState,\n  isVisible,\n  ContentType,\n  createID,\n  ContentAny,\n  ContentBinary,\n  getItemCleanStart,\n  ContentDoc, YText, YArray, UpdateEncoderV1, UpdateEncoderV2, Doc, Snapshot, Transaction, EventHandler, YEvent, Item, // eslint-disable-line\n} from '../internals.js'\n\nimport * as map from 'lib0/map.js'\nimport * as iterator from 'lib0/iterator.js'\nimport * as error from 'lib0/error.js'\nimport * as math from 'lib0/math.js'\n\nconst maxSearchMarker = 80\n\n/**\n * A unique timestamp that identifies each marker.\n *\n * Time is relative,.. this is more like an ever-increasing clock.\n *\n * @type {number}\n */\nlet globalSearchMarkerTimestamp = 0\n\nexport class ArraySearchMarker {\n  /**\n   * @param {Item} p\n   * @param {number} index\n   */\n  constructor (p, index) {\n    p.marker = true\n    this.p = p\n    this.index = index\n    this.timestamp = globalSearchMarkerTimestamp++\n  }\n}\n\n/**\n * @param {ArraySearchMarker} marker\n */\nconst refreshMarkerTimestamp = marker => { marker.timestamp = globalSearchMarkerTimestamp++ }\n\n/**\n * This is rather complex so this function is the only thing that should overwrite a marker\n *\n * @param {ArraySearchMarker} marker\n * @param {Item} p\n * @param {number} index\n */\nconst overwriteMarker = (marker, p, index) => {\n  marker.p.marker = false\n  marker.p = p\n  p.marker = true\n  marker.index = index\n  marker.timestamp = globalSearchMarkerTimestamp++\n}\n\n/**\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {Item} p\n * @param {number} index\n */\nconst markPosition = (searchMarker, p, index) => {\n  if (searchMarker.length >= maxSearchMarker) {\n    // override oldest marker (we don't want to create more objects)\n    const marker = searchMarker.reduce((a, b) => a.timestamp < b.timestamp ? a : b)\n    overwriteMarker(marker, p, index)\n    return marker\n  } else {\n    // create new marker\n    const pm = new ArraySearchMarker(p, index)\n    searchMarker.push(pm)\n    return pm\n  }\n}\n\n/**\n * Search marker help us to find positions in the associative array faster.\n *\n * They speed up the process of finding a position without much bookkeeping.\n *\n * A maximum of `maxSearchMarker` objects are created.\n *\n * This function always returns a refreshed marker (updated timestamp)\n *\n * @param {AbstractType<any>} yarray\n * @param {number} index\n */\nexport const findMarker = (yarray, index) => {\n  if (yarray._start === null || index === 0 || yarray._searchMarker === null) {\n    return null\n  }\n  const marker = yarray._searchMarker.length === 0 ? null : yarray._searchMarker.reduce((a, b) => math.abs(index - a.index) < math.abs(index - b.index) ? a : b)\n  let p = yarray._start\n  let pindex = 0\n  if (marker !== null) {\n    p = marker.p\n    pindex = marker.index\n    refreshMarkerTimestamp(marker) // we used it, we might need to use it again\n  }\n  // iterate to right if possible\n  while (p.right !== null && pindex < index) {\n    if (!p.deleted && p.countable) {\n      if (index < pindex + p.length) {\n        break\n      }\n      pindex += p.length\n    }\n    p = p.right\n  }\n  // iterate to left if necessary (might be that pindex > index)\n  while (p.left !== null && pindex > index) {\n    p = p.left\n    if (!p.deleted && p.countable) {\n      pindex -= p.length\n    }\n  }\n  // we want to make sure that p can't be merged with left, because that would screw up everything\n  // in that cas just return what we have (it is most likely the best marker anyway)\n  // iterate to left until p can't be merged with left\n  while (p.left !== null && p.left.id.client === p.id.client && p.left.id.clock + p.left.length === p.id.clock) {\n    p = p.left\n    if (!p.deleted && p.countable) {\n      pindex -= p.length\n    }\n  }\n\n  // @todo remove!\n  // assure position\n  // {\n  //   let start = yarray._start\n  //   let pos = 0\n  //   while (start !== p) {\n  //     if (!start.deleted && start.countable) {\n  //       pos += start.length\n  //     }\n  //     start = /** @type {Item} */ (start.right)\n  //   }\n  //   if (pos !== pindex) {\n  //     debugger\n  //     throw new Error('Gotcha position fail!')\n  //   }\n  // }\n  // if (marker) {\n  //   if (window.lengthes == null) {\n  //     window.lengthes = []\n  //     window.getLengthes = () => window.lengthes.sort((a, b) => a - b)\n  //   }\n  //   window.lengthes.push(marker.index - pindex)\n  //   console.log('distance', marker.index - pindex, 'len', p && p.parent.length)\n  // }\n  if (marker !== null && math.abs(marker.index - pindex) < /** @type {YText|YArray<any>} */ (p.parent).length / maxSearchMarker) {\n    // adjust existing marker\n    overwriteMarker(marker, p, pindex)\n    return marker\n  } else {\n    // create new marker\n    return markPosition(yarray._searchMarker, p, pindex)\n  }\n}\n\n/**\n * Update markers when a change happened.\n *\n * This should be called before doing a deletion!\n *\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {number} index\n * @param {number} len If insertion, len is positive. If deletion, len is negative.\n */\nexport const updateMarkerChanges = (searchMarker, index, len) => {\n  for (let i = searchMarker.length - 1; i >= 0; i--) {\n    const m = searchMarker[i]\n    if (len > 0) {\n      /**\n       * @type {Item|null}\n       */\n      let p = m.p\n      p.marker = false\n      // Ideally we just want to do a simple position comparison, but this will only work if\n      // search markers don't point to deleted items for formats.\n      // Iterate marker to prev undeleted countable position so we know what to do when updating a position\n      while (p && (p.deleted || !p.countable)) {\n        p = p.left\n        if (p && !p.deleted && p.countable) {\n          // adjust position. the loop should break now\n          m.index -= p.length\n        }\n      }\n      if (p === null || p.marker === true) {\n        // remove search marker if updated position is null or if position is already marked\n        searchMarker.splice(i, 1)\n        continue\n      }\n      m.p = p\n      p.marker = true\n    }\n    if (index < m.index || (len > 0 && index === m.index)) { // a simple index <= m.index check would actually suffice\n      m.index = math.max(index, m.index + len)\n    }\n  }\n}\n\n/**\n * Accumulate all (list) children of a type and return them as an Array.\n *\n * @param {AbstractType<any>} t\n * @return {Array<Item>}\n */\nexport const getTypeChildren = t => {\n  let s = t._start\n  const arr = []\n  while (s) {\n    arr.push(s)\n    s = s.right\n  }\n  return arr\n}\n\n/**\n * Call event listeners with an event. This will also add an event to all\n * parents (for `.observeDeep` handlers).\n *\n * @template EventType\n * @param {AbstractType<EventType>} type\n * @param {Transaction} transaction\n * @param {EventType} event\n */\nexport const callTypeObservers = (type, transaction, event) => {\n  const changedType = type\n  const changedParentTypes = transaction.changedParentTypes\n  while (true) {\n    // @ts-ignore\n    map.setIfUndefined(changedParentTypes, type, () => []).push(event)\n    if (type._item === null) {\n      break\n    }\n    type = /** @type {AbstractType<any>} */ (type._item.parent)\n  }\n  callEventHandlerListeners(changedType._eH, event, transaction)\n}\n\n/**\n * @template EventType\n * Abstract Yjs Type class\n */\nexport class AbstractType {\n  constructor () {\n    /**\n     * @type {Item|null}\n     */\n    this._item = null\n    /**\n     * @type {Map<string,Item>}\n     */\n    this._map = new Map()\n    /**\n     * @type {Item|null}\n     */\n    this._start = null\n    /**\n     * @type {Doc|null}\n     */\n    this.doc = null\n    this._length = 0\n    /**\n     * Event handlers\n     * @type {EventHandler<EventType,Transaction>}\n     */\n    this._eH = createEventHandler()\n    /**\n     * Deep event handlers\n     * @type {EventHandler<Array<YEvent>,Transaction>}\n     */\n    this._dEH = createEventHandler()\n    /**\n     * @type {null | Array<ArraySearchMarker>}\n     */\n    this._searchMarker = null\n  }\n\n  /**\n   * @return {AbstractType<any>|null}\n   */\n  get parent () {\n    return this._item ? /** @type {AbstractType<any>} */ (this._item.parent) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item|null} item\n   */\n  _integrate (y, item) {\n    this.doc = y\n    this._item = item\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  _copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  clone () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) { }\n\n  /**\n   * The first non-deleted item\n   */\n  get _first () {\n    let n = this._start\n    while (n !== null && n.deleted) {\n      n = n.right\n    }\n    return n\n  }\n\n  /**\n   * Creates YEvent and calls all type observers.\n   * Must be implemented by each type.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    if (!transaction.local && this._searchMarker) {\n      this._searchMarker.length = 0\n    }\n  }\n\n  /**\n   * Observe all events that are created on this type.\n   *\n   * @param {function(EventType, Transaction):void} f Observer function\n   */\n  observe (f) {\n    addEventHandlerListener(this._eH, f)\n  }\n\n  /**\n   * Observe all events that are created by this type and its children.\n   *\n   * @param {function(Array<YEvent>,Transaction):void} f Observer function\n   */\n  observeDeep (f) {\n    addEventHandlerListener(this._dEH, f)\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(EventType,Transaction):void} f Observer function\n   */\n  unobserve (f) {\n    removeEventHandlerListener(this._eH, f)\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(Array<YEvent>,Transaction):void} f Observer function\n   */\n  unobserveDeep (f) {\n    removeEventHandlerListener(this._dEH, f)\n  }\n\n  /**\n   * @abstract\n   * @return {any}\n   */\n  toJSON () {}\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} start\n * @param {number} end\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListSlice = (type, start, end) => {\n  if (start < 0) {\n    start = type._length + start\n  }\n  if (end < 0) {\n    end = type._length + end\n  }\n  let len = end - start\n  const cs = []\n  let n = type._start\n  while (n !== null && len > 0) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      if (c.length <= start) {\n        start -= c.length\n      } else {\n        for (let i = start; i < c.length && len > 0; i++) {\n          cs.push(c[i])\n          len--\n        }\n        start = 0\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * @param {AbstractType<any>} type\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListToArray = type => {\n  const cs = []\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i])\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {Snapshot} snapshot\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListToArraySnapshot = (type, snapshot) => {\n  const cs = []\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i])\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * Executes a provided function on once on overy element of this YArray.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,any):void} f A function to execute on every element of this YArray.\n *\n * @private\n * @function\n */\nexport const typeListForEach = (type, f) => {\n  let index = 0\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type)\n      }\n    }\n    n = n.right\n  }\n}\n\n/**\n * @template C,R\n * @param {AbstractType<any>} type\n * @param {function(C,number,AbstractType<any>):R} f\n * @return {Array<R>}\n *\n * @private\n * @function\n */\nexport const typeListMap = (type, f) => {\n  /**\n   * @type {Array<any>}\n   */\n  const result = []\n  typeListForEach(type, (c, i) => {\n    result.push(f(c, i, type))\n  })\n  return result\n}\n\n/**\n * @param {AbstractType<any>} type\n * @return {IterableIterator<any>}\n *\n * @private\n * @function\n */\nexport const typeListCreateIterator = type => {\n  let n = type._start\n  /**\n   * @type {Array<any>|null}\n   */\n  let currentContent = null\n  let currentContentIndex = 0\n  return {\n    [Symbol.iterator] () {\n      return this\n    },\n    next: () => {\n      // find some content\n      if (currentContent === null) {\n        while (n !== null && n.deleted) {\n          n = n.right\n        }\n        // check if we reached the end, no need to check currentContent, because it does not exist\n        if (n === null) {\n          return {\n            done: true,\n            value: undefined\n          }\n        }\n        // we found n, so we can set currentContent\n        currentContent = n.content.getContent()\n        currentContentIndex = 0\n        n = n.right // we used the content of n, now iterate to next\n      }\n      const value = currentContent[currentContentIndex++]\n      // check if we need to empty currentContent\n      if (currentContent.length <= currentContentIndex) {\n        currentContent = null\n      }\n      return {\n        done: false,\n        value\n      }\n    }\n  }\n}\n\n/**\n * Executes a provided function on once on overy element of this YArray.\n * Operates on a snapshotted state of the document.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,AbstractType<any>):void} f A function to execute on every element of this YArray.\n * @param {Snapshot} snapshot\n *\n * @private\n * @function\n */\nexport const typeListForEachSnapshot = (type, f, snapshot) => {\n  let index = 0\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type)\n      }\n    }\n    n = n.right\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @return {any}\n *\n * @private\n * @function\n */\nexport const typeListGet = (type, index) => {\n  const marker = findMarker(type, index)\n  let n = type._start\n  if (marker !== null) {\n    n = marker.p\n    index -= marker.index\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        return n.content.getContent()[index]\n      }\n      index -= n.length\n    }\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Item?} referenceItem\n * @param {Array<Object<string,any>|Array<any>|boolean|number|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListInsertGenericsAfter = (transaction, parent, referenceItem, content) => {\n  let left = referenceItem\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  const store = doc.store\n  const right = referenceItem === null ? parent._start : referenceItem.right\n  /**\n   * @type {Array<Object|Array<any>|number>}\n   */\n  let jsonContent = []\n  const packJsonContent = () => {\n    if (jsonContent.length > 0) {\n      left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentAny(jsonContent))\n      left.integrate(transaction, 0)\n      jsonContent = []\n    }\n  }\n  content.forEach(c => {\n    switch (c.constructor) {\n      case Number:\n      case Object:\n      case Boolean:\n      case Array:\n      case String:\n        jsonContent.push(c)\n        break\n      default:\n        packJsonContent()\n        switch (c.constructor) {\n          case Uint8Array:\n          case ArrayBuffer:\n            left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentBinary(new Uint8Array(/** @type {Uint8Array} */ (c))))\n            left.integrate(transaction, 0)\n            break\n          case Doc:\n            left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentDoc(/** @type {Doc} */ (c)))\n            left.integrate(transaction, 0)\n            break\n          default:\n            if (c instanceof AbstractType) {\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentType(c))\n              left.integrate(transaction, 0)\n            } else {\n              throw new Error('Unexpected content type in insert operation')\n            }\n        }\n    }\n  })\n  packJsonContent()\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {Array<Object<string,any>|Array<any>|number|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListInsertGenerics = (transaction, parent, index, content) => {\n  if (index === 0) {\n    if (parent._searchMarker) {\n      updateMarkerChanges(parent._searchMarker, index, content.length)\n    }\n    return typeListInsertGenericsAfter(transaction, parent, null, content)\n  }\n  const startIndex = index\n  const marker = findMarker(parent, index)\n  let n = parent._start\n  if (marker !== null) {\n    n = marker.p\n    index -= marker.index\n    // we need to iterate one to the left so that the algorithm works\n    if (index === 0) {\n      // @todo refactor this as it actually doesn't consider formats\n      n = n.prev // important! get the left undeleted item so that we can actually decrease index\n      index += (n && n.countable && !n.deleted) ? n.length : 0\n    }\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index <= n.length) {\n        if (index < n.length) {\n          // insert in-between\n          getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index))\n        }\n        break\n      }\n      index -= n.length\n    }\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, content.length)\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {number} length\n *\n * @private\n * @function\n */\nexport const typeListDelete = (transaction, parent, index, length) => {\n  if (length === 0) { return }\n  const startIndex = index\n  const startLength = length\n  const marker = findMarker(parent, index)\n  let n = parent._start\n  if (marker !== null) {\n    n = marker.p\n    index -= marker.index\n  }\n  // compute the first item to be deleted\n  for (; n !== null && index > 0; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index))\n      }\n      index -= n.length\n    }\n  }\n  // delete all items until done\n  while (length > 0 && n !== null) {\n    if (!n.deleted) {\n      if (length < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + length))\n      }\n      n.delete(transaction)\n      length -= n.length\n    }\n    n = n.right\n  }\n  if (length > 0) {\n    throw error.create('array length exceeded')\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, -startLength + length /* in case we remove the above exception */)\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n *\n * @private\n * @function\n */\nexport const typeMapDelete = (transaction, parent, key) => {\n  const c = parent._map.get(key)\n  if (c !== undefined) {\n    c.delete(transaction)\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Object|number|Array<any>|string|Uint8Array|AbstractType<any>} value\n *\n * @private\n * @function\n */\nexport const typeMapSet = (transaction, parent, key, value) => {\n  const left = parent._map.get(key) || null\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  let content\n  if (value == null) {\n    content = new ContentAny([value])\n  } else {\n    switch (value.constructor) {\n      case Number:\n      case Object:\n      case Boolean:\n      case Array:\n      case String:\n        content = new ContentAny([value])\n        break\n      case Uint8Array:\n        content = new ContentBinary(/** @type {Uint8Array} */ (value))\n        break\n      case Doc:\n        content = new ContentDoc(/** @type {Doc} */ (value))\n        break\n      default:\n        if (value instanceof AbstractType) {\n          content = new ContentType(value)\n        } else {\n          throw new Error('Unexpected content type')\n        }\n    }\n  }\n  new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, null, null, parent, key, content).integrate(transaction, 0)\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {Object<string,any>|number|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nexport const typeMapGet = (parent, key) => {\n  const val = parent._map.get(key)\n  return val !== undefined && !val.deleted ? val.content.getContent()[val.length - 1] : undefined\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @return {Object<string,Object<string,any>|number|Array<any>|string|Uint8Array|AbstractType<any>|undefined>}\n *\n * @private\n * @function\n */\nexport const typeMapGetAll = (parent) => {\n  /**\n   * @type {Object<string,any>}\n   */\n  const res = {}\n  parent._map.forEach((value, key) => {\n    if (!value.deleted) {\n      res[key] = value.content.getContent()[value.length - 1]\n    }\n  })\n  return res\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {boolean}\n *\n * @private\n * @function\n */\nexport const typeMapHas = (parent, key) => {\n  const val = parent._map.get(key)\n  return val !== undefined && !val.deleted\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Snapshot} snapshot\n * @return {Object<string,any>|number|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nexport const typeMapGetSnapshot = (parent, key, snapshot) => {\n  let v = parent._map.get(key) || null\n  while (v !== null && (!snapshot.sv.has(v.id.client) || v.id.clock >= (snapshot.sv.get(v.id.client) || 0))) {\n    v = v.left\n  }\n  return v !== null && isVisible(v, snapshot) ? v.content.getContent()[v.length - 1] : undefined\n}\n\n/**\n * @param {Map<string,Item>} map\n * @return {IterableIterator<Array<any>>}\n *\n * @private\n * @function\n */\nexport const createMapIterator = map => iterator.iteratorFilter(map.entries(), /** @param {any} entry */ entry => !entry[1].deleted)\n","/**\n * @module YArray\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  typeListGet,\n  typeListToArray,\n  typeListForEach,\n  typeListCreateIterator,\n  typeListInsertGenerics,\n  typeListDelete,\n  typeListMap,\n  YArrayRefID,\n  callTypeObservers,\n  transact,\n  ArraySearchMarker, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, Transaction, Item // eslint-disable-line\n} from '../internals.js'\nimport { typeListSlice } from './AbstractType.js'\n\n/**\n * Event that describes the changes on a YArray\n * @template T\n */\nexport class YArrayEvent extends YEvent {\n  /**\n   * @param {YArray<T>} yarray The changed type\n   * @param {Transaction} transaction The transaction object\n   */\n  constructor (yarray, transaction) {\n    super(yarray, transaction)\n    this._transaction = transaction\n  }\n}\n\n/**\n * A shared Array implementation.\n * @template T\n * @extends AbstractType<YArrayEvent<T>>\n * @implements {Iterable<T>}\n */\nexport class YArray extends AbstractType {\n  constructor () {\n    super()\n    /**\n     * @type {Array<any>?}\n     * @private\n     */\n    this._prelimContent = []\n    /**\n     * @type {Array<ArraySearchMarker>}\n     */\n    this._searchMarker = []\n  }\n\n  /**\n   * Construct a new YArray containing the specified items.\n   * @template T\n   * @param {Array<T>} items\n   * @return {YArray<T>}\n   */\n  static from (items) {\n    const a = new YArray()\n    a.push(items)\n    return a\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent))\n    this._prelimContent = null\n  }\n\n  _copy () {\n    return new YArray()\n  }\n\n  /**\n   * @return {YArray<T>}\n   */\n  clone () {\n    const arr = new YArray()\n    arr.insert(0, this.toArray().map(el =>\n      el instanceof AbstractType ? el.clone() : el\n    ))\n    return arr\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Creates YArrayEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs)\n    callTypeObservers(this, transaction, new YArrayEvent(this, transaction))\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * Important: This function expects an array of content. Not just a content\n   * object. The reason for this \"weirdness\" is that inserting several elements\n   * is very efficient when it is done as a single operation.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  yarray.insert(0, ['a'])\n   *  // Insert numbers 1, 2 at position 1\n   *  yarray.insert(1, [1, 2])\n   *\n   * @param {number} index The index to insert content at.\n   * @param {Array<T>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, content)\n      })\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to append.\n   */\n  push (content) {\n    this.insert(this.length, content)\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content)\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} length The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length)\n      })\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, length)\n    }\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {T}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<T>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<T>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Array<any>}\n   */\n  toJSON () {\n    return this.map(c => c instanceof AbstractType ? c.toJSON() : c)\n  }\n\n  /**\n   * Returns an Array with the result of calling a provided function on every\n   * element of this YArray.\n   *\n   * @template T,M\n   * @param {function(T,number,YArray<T>):M} f Function that produces an element of the new Array\n   * @return {Array<M>} A new array with each element being the result of the\n   *                 callback function\n   */\n  map (f) {\n    return typeListMap(this, /** @type {any} */ (f))\n  }\n\n  /**\n   * Executes a provided function on once on overy element of this YArray.\n   *\n   * @param {function(T,number,YArray<T>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f)\n  }\n\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return typeListCreateIterator(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YArrayRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n *\n * @private\n * @function\n */\nexport const readYArray = decoder => new YArray()\n","\n/**\n * @module YMap\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  typeMapDelete,\n  typeMapSet,\n  typeMapGet,\n  typeMapHas,\n  createMapIterator,\n  YMapRefID,\n  callTypeObservers,\n  transact,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, Transaction, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as iterator from 'lib0/iterator.js'\n\n/**\n * @template T\n * Event that describes the changes on a YMap.\n */\nexport class YMapEvent extends YEvent {\n  /**\n   * @param {YMap<T>} ymap The YArray that changed.\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed.\n   */\n  constructor (ymap, transaction, subs) {\n    super(ymap, transaction)\n    this.keysChanged = subs\n  }\n}\n\n/**\n * @template T number|string|Object|Array|Uint8Array\n * A shared Map implementation.\n *\n * @extends AbstractType<YMapEvent<T>>\n * @implements {Iterable<T>}\n */\nexport class YMap extends AbstractType {\n  /**\n   *\n   * @param {Iterable<readonly [string, any]>=} entries - an optional iterable to initialize the YMap\n   */\n  constructor (entries) {\n    super()\n    /**\n     * @type {Map<string,any>?}\n     * @private\n     */\n    this._prelimContent = null\n\n    if (entries === undefined) {\n      this._prelimContent = new Map()\n    } else {\n      this._prelimContent = new Map(entries)\n    }\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;/** @type {Map<string, any>} */ (this._prelimContent).forEach((value, key) => {\n      this.set(key, value)\n    })\n    this._prelimContent = null\n  }\n\n  _copy () {\n    return new YMap()\n  }\n\n  /**\n   * @return {YMap<T>}\n   */\n  clone () {\n    const map = new YMap()\n    this.forEach((value, key) => {\n      map.set(key, value instanceof AbstractType ? value.clone() : value)\n    })\n    return map\n  }\n\n  /**\n   * Creates YMapEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YMapEvent(this, transaction, parentSubs))\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Object<string,T>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string,T>}\n     */\n    const map = {}\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        const v = item.content.getContent()[item.length - 1]\n        map[key] = v instanceof AbstractType ? v.toJSON() : v\n      }\n    })\n    return map\n  }\n\n  /**\n   * Returns the size of the YMap (count of key/value pairs)\n   *\n   * @return {number}\n   */\n  get size () {\n    return [...createMapIterator(this._map)].length\n  }\n\n  /**\n   * Returns the keys for each element in the YMap Type.\n   *\n   * @return {IterableIterator<string>}\n   */\n  keys () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[0])\n  }\n\n  /**\n   * Returns the values for each element in the YMap Type.\n   *\n   * @return {IterableIterator<any>}\n   */\n  values () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[1].content.getContent()[v[1].length - 1])\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<any>}\n   */\n  entries () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => [v[0], v[1].content.getContent()[v[1].length - 1]])\n  }\n\n  /**\n   * Executes a provided function on once on every key-value pair.\n   *\n   * @param {function(T,string,YMap<T>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    /**\n     * @type {Object<string,T>}\n     */\n    const map = {}\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        f(item.content.getContent()[item.length - 1], key, this)\n      }\n    })\n    return map\n  }\n\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return this.entries()\n  }\n\n  /**\n   * Remove a specified element from this YMap.\n   *\n   * @param {string} key The key of the element to remove.\n   */\n  delete (key) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, key)\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).delete(key)\n    }\n  }\n\n  /**\n   * Adds or updates an element with a specified key and value.\n   *\n   * @param {string} key The key of the element to add to this YMap\n   * @param {T} value The value of the element to add\n   */\n  set (key, value) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, key, value)\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).set(key, value)\n    }\n    return value\n  }\n\n  /**\n   * Returns a specified element from this YMap.\n   *\n   * @param {string} key\n   * @return {T|undefined}\n   */\n  get (key) {\n    return /** @type {any} */ (typeMapGet(this, key))\n  }\n\n  /**\n   * Returns a boolean indicating whether the specified key exists or not.\n   *\n   * @param {string} key The key to test.\n   * @return {boolean}\n   */\n  has (key) {\n    return typeMapHas(this, key)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YMapRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n *\n * @private\n * @function\n */\nexport const readYMap = decoder => new YMap()\n","\n/**\n * @module YText\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  getItemCleanStart,\n  getState,\n  isVisible,\n  createID,\n  YTextRefID,\n  callTypeObservers,\n  transact,\n  ContentEmbed,\n  GC,\n  ContentFormat,\n  ContentString,\n  splitSnapshotAffectedStructs,\n  iterateDeletedStructs,\n  iterateStructs,\n  findMarker,\n  typeMapDelete,\n  typeMapSet,\n  typeMapGet,\n  typeMapGetAll,\n  updateMarkerChanges,\n  ArraySearchMarker, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, ID, Doc, Item, Snapshot, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as object from 'lib0/object.js'\nimport * as map from 'lib0/map.js'\nimport * as error from 'lib0/error.js'\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nconst equalAttrs = (a, b) => a === b || (typeof a === 'object' && typeof b === 'object' && a && b && object.equalFlat(a, b))\n\nexport class ItemTextListPosition {\n  /**\n   * @param {Item|null} left\n   * @param {Item|null} right\n   * @param {number} index\n   * @param {Map<string,any>} currentAttributes\n   */\n  constructor (left, right, index, currentAttributes) {\n    this.left = left\n    this.right = right\n    this.index = index\n    this.currentAttributes = currentAttributes\n  }\n\n  /**\n   * Only call this if you know that this.right is defined\n   */\n  forward () {\n    if (this.right === null) {\n      error.unexpectedCase()\n    }\n    switch (this.right.content.constructor) {\n      case ContentEmbed:\n      case ContentString:\n        if (!this.right.deleted) {\n          this.index += this.right.length\n        }\n        break\n      case ContentFormat:\n        if (!this.right.deleted) {\n          updateCurrentAttributes(this.currentAttributes, /** @type {ContentFormat} */ (this.right.content))\n        }\n        break\n    }\n    this.left = this.right\n    this.right = this.right.right\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} pos\n * @param {number} count steps to move forward\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findNextPosition = (transaction, pos, count) => {\n  while (pos.right !== null && count > 0) {\n    switch (pos.right.content.constructor) {\n      case ContentEmbed:\n      case ContentString:\n        if (!pos.right.deleted) {\n          if (count < pos.right.length) {\n            // split right\n            getItemCleanStart(transaction, createID(pos.right.id.client, pos.right.id.clock + count))\n          }\n          pos.index += pos.right.length\n          count -= pos.right.length\n        }\n        break\n      case ContentFormat:\n        if (!pos.right.deleted) {\n          updateCurrentAttributes(pos.currentAttributes, /** @type {ContentFormat} */ (pos.right.content))\n        }\n        break\n    }\n    pos.left = pos.right\n    pos.right = pos.right.right\n    // pos.forward() - we don't forward because that would halve the performance because we already do the checks above\n  }\n  return pos\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findPosition = (transaction, parent, index) => {\n  const currentAttributes = new Map()\n  const marker = findMarker(parent, index)\n  if (marker) {\n    const pos = new ItemTextListPosition(marker.p.left, marker.p, marker.index, currentAttributes)\n    return findNextPosition(transaction, pos, index - marker.index)\n  } else {\n    const pos = new ItemTextListPosition(null, parent._start, 0, currentAttributes)\n    return findNextPosition(transaction, pos, index)\n  }\n}\n\n/**\n * Negate applied formats\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Map<string,any>} negatedAttributes\n *\n * @private\n * @function\n */\nconst insertNegatedAttributes = (transaction, parent, currPos, negatedAttributes) => {\n  // check if we really need to remove attributes\n  while (\n    currPos.right !== null && (\n      currPos.right.deleted === true || (\n        currPos.right.content.constructor === ContentFormat &&\n        equalAttrs(negatedAttributes.get(/** @type {ContentFormat} */ (currPos.right.content).key), /** @type {ContentFormat} */ (currPos.right.content).value)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      negatedAttributes.delete(/** @type {ContentFormat} */ (currPos.right.content).key)\n    }\n    currPos.forward()\n  }\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  let nextFormat = currPos.left\n  const right = currPos.right\n  negatedAttributes.forEach((val, key) => {\n    nextFormat = new Item(createID(ownClientId, getState(doc.store, ownClientId)), nextFormat, nextFormat && nextFormat.lastId, right, right && right.id, parent, null, new ContentFormat(key, val))\n    nextFormat.integrate(transaction, 0)\n    currPos.right = nextFormat\n  })\n}\n\n/**\n * @param {Map<string,any>} currentAttributes\n * @param {ContentFormat} format\n *\n * @private\n * @function\n */\nconst updateCurrentAttributes = (currentAttributes, format) => {\n  const { key, value } = format\n  if (value === null) {\n    currentAttributes.delete(key)\n  } else {\n    currentAttributes.set(key, value)\n  }\n}\n\n/**\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst minimizeAttributeChanges = (currPos, attributes) => {\n  // go right while attributes[right.key] === right.value (or right is deleted)\n  while (true) {\n    if (currPos.right === null) {\n      break\n    } else if (currPos.right.deleted || (currPos.right.content.constructor === ContentFormat && equalAttrs(attributes[(/** @type {ContentFormat} */ (currPos.right.content)).key] || null, /** @type {ContentFormat} */ (currPos.right.content).value))) {\n      //\n    } else {\n      break\n    }\n    currPos.forward()\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n * @return {Map<string,any>}\n *\n * @private\n * @function\n **/\nconst insertAttributes = (transaction, parent, currPos, attributes) => {\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  const negatedAttributes = new Map()\n  // insert format-start items\n  for (const key in attributes) {\n    const val = attributes[key]\n    const currentVal = currPos.currentAttributes.get(key) || null\n    if (!equalAttrs(currentVal, val)) {\n      // save negated attribute (set null if currentVal undefined)\n      negatedAttributes.set(key, currentVal)\n      const { left, right } = currPos\n      currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val))\n      currPos.right.integrate(transaction, 0)\n      currPos.forward()\n    }\n  }\n  return negatedAttributes\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {string|object} text\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n **/\nconst insertText = (transaction, parent, currPos, text, attributes) => {\n  currPos.currentAttributes.forEach((val, key) => {\n    if (attributes[key] === undefined) {\n      attributes[key] = null\n    }\n  })\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  minimizeAttributeChanges(currPos, attributes)\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes)\n  // insert content\n  const content = text.constructor === String ? new ContentString(/** @type {string} */ (text)) : new ContentEmbed(text)\n  let { left, right, index } = currPos\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, content.getLength())\n  }\n  right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, content)\n  right.integrate(transaction, 0)\n  currPos.right = right\n  currPos.index = index\n  currPos.forward()\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst formatText = (transaction, parent, currPos, length, attributes) => {\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  minimizeAttributeChanges(currPos, attributes)\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes)\n  // iterate until first non-format or null is found\n  // delete all formats with attributes[format.key] != null\n  while (length > 0 && currPos.right !== null) {\n    if (!currPos.right.deleted) {\n      switch (currPos.right.content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (currPos.right.content)\n          const attr = attributes[key]\n          if (attr !== undefined) {\n            if (equalAttrs(attr, value)) {\n              negatedAttributes.delete(key)\n            } else {\n              negatedAttributes.set(key, value)\n            }\n            currPos.right.delete(transaction)\n          }\n          break\n        }\n        case ContentEmbed:\n        case ContentString:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length))\n          }\n          length -= currPos.right.length\n          break\n      }\n    }\n    currPos.forward()\n  }\n  // Quill just assumes that the editor starts with a newline and that it always\n  // ends with a newline. We only insert that newline when a new newline is\n  // inserted - i.e when length is bigger than type.length\n  if (length > 0) {\n    let newlines = ''\n    for (; length > 0; length--) {\n      newlines += '\\n'\n    }\n    currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), currPos.left, currPos.left && currPos.left.lastId, currPos.right, currPos.right && currPos.right.id, parent, null, new ContentString(newlines))\n    currPos.right.integrate(transaction, 0)\n    currPos.forward()\n  }\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes)\n}\n\n/**\n * Call this function after string content has been deleted in order to\n * clean up formatting Items.\n *\n * @param {Transaction} transaction\n * @param {Item} start\n * @param {Item|null} end exclusive end, automatically iterates to the next Content Item\n * @param {Map<string,any>} startAttributes\n * @param {Map<string,any>} endAttributes This attribute is modified!\n * @return {number} The amount of formatting Items deleted.\n *\n * @function\n */\nconst cleanupFormattingGap = (transaction, start, end, startAttributes, endAttributes) => {\n  while (end && end.content.constructor !== ContentString && end.content.constructor !== ContentEmbed) {\n    if (!end.deleted && end.content.constructor === ContentFormat) {\n      updateCurrentAttributes(endAttributes, /** @type {ContentFormat} */ (end.content))\n    }\n    end = end.right\n  }\n  let cleanups = 0\n  while (start !== end) {\n    if (!start.deleted) {\n      const content = start.content\n      switch (content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (content)\n          if ((endAttributes.get(key) || null) !== value || (startAttributes.get(key) || null) === value) {\n            // Either this format is overwritten or it is not necessary because the attribute already existed.\n            start.delete(transaction)\n            cleanups++\n          }\n          break\n        }\n      }\n    }\n    start = /** @type {Item} */ (start.right)\n  }\n  return cleanups\n}\n\n/**\n * @param {Transaction} transaction\n * @param {Item | null} item\n */\nconst cleanupContextlessFormattingGap = (transaction, item) => {\n  // iterate until item.right is null or content\n  while (item && item.right && (item.right.deleted || (item.right.content.constructor !== ContentString && item.right.content.constructor !== ContentEmbed))) {\n    item = item.right\n  }\n  const attrs = new Set()\n  // iterate back until a content item is found\n  while (item && (item.deleted || (item.content.constructor !== ContentString && item.content.constructor !== ContentEmbed))) {\n    if (!item.deleted && item.content.constructor === ContentFormat) {\n      const key = /** @type {ContentFormat} */ (item.content).key\n      if (attrs.has(key)) {\n        item.delete(transaction)\n      } else {\n        attrs.add(key)\n      }\n    }\n    item = item.left\n  }\n}\n\n/**\n * This function is experimental and subject to change / be removed.\n *\n * Ideally, we don't need this function at all. Formatting attributes should be cleaned up\n * automatically after each change. This function iterates twice over the complete YText type\n * and removes unnecessary formatting attributes. This is also helpful for testing.\n *\n * This function won't be exported anymore as soon as there is confidence that the YText type works as intended.\n *\n * @param {YText} type\n * @return {number} How many formatting attributes have been cleaned up.\n */\nexport const cleanupYTextFormatting = type => {\n  let res = 0\n  transact(/** @type {Doc} */ (type.doc), transaction => {\n    let start = /** @type {Item} */ (type._start)\n    let end = type._start\n    let startAttributes = map.create()\n    const currentAttributes = map.copy(startAttributes)\n    while (end) {\n      if (end.deleted === false) {\n        switch (end.content.constructor) {\n          case ContentFormat:\n            updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (end.content))\n            break\n          case ContentEmbed:\n          case ContentString:\n            res += cleanupFormattingGap(transaction, start, end, startAttributes, currentAttributes)\n            startAttributes = map.copy(currentAttributes)\n            start = end\n            break\n        }\n      }\n      end = end.right\n    }\n  })\n  return res\n}\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst deleteText = (transaction, currPos, length) => {\n  const startLength = length\n  const startAttrs = map.copy(currPos.currentAttributes)\n  const start = currPos.right\n  while (length > 0 && currPos.right !== null) {\n    if (currPos.right.deleted === false) {\n      switch (currPos.right.content.constructor) {\n        case ContentEmbed:\n        case ContentString:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length))\n          }\n          length -= currPos.right.length\n          currPos.right.delete(transaction)\n          break\n      }\n    }\n    currPos.forward()\n  }\n  if (start) {\n    cleanupFormattingGap(transaction, start, currPos.right, startAttrs, map.copy(currPos.currentAttributes))\n  }\n  const parent = /** @type {AbstractType<any>} */ (/** @type {Item} */ (currPos.left || currPos.right).parent)\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, -startLength + length)\n  }\n  return currPos\n}\n\n/**\n * The Quill Delta format represents changes on a text document with\n * formatting information. For mor information visit {@link https://quilljs.com/docs/delta/|Quill Delta}\n *\n * @example\n *   {\n *     ops: [\n *       { insert: 'Gandalf', attributes: { bold: true } },\n *       { insert: ' the ' },\n *       { insert: 'Grey', attributes: { color: '#cccccc' } }\n *     ]\n *   }\n *\n */\n\n/**\n  * Attributes that can be assigned to a selection of text.\n  *\n  * @example\n  *   {\n  *     bold: true,\n  *     font-size: '40px'\n  *   }\n  *\n  * @typedef {Object} TextAttributes\n  */\n\n/**\n * Event that describes the changes on a YText type.\n */\nexport class YTextEvent extends YEvent {\n  /**\n   * @param {YText} ytext\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed\n   */\n  constructor (ytext, transaction, subs) {\n    super(ytext, transaction)\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.keysChanged = new Set()\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true\n      } else {\n        this.keysChanged.add(sub)\n      }\n    })\n  }\n\n  /**\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    if (this._changes === null) {\n      /**\n       * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n       */\n      const changes = {\n        keys: this.keys,\n        delta: this.delta,\n        added: new Set(),\n        deleted: new Set()\n      }\n      this._changes = changes\n    }\n    return /** @type {any} */ (this._changes)\n  }\n\n  /**\n   * Compute the changes in the delta format.\n   * A {@link https://quilljs.com/docs/delta/|Quill Delta}) that represents the changes on the document.\n   *\n   * @type {Array<{insert?:string, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n   *\n   * @public\n   */\n  get delta () {\n    if (this._delta === null) {\n      const y = /** @type {Doc} */ (this.target.doc)\n      /**\n       * @type {Array<{insert?:string, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n       */\n      const delta = []\n      transact(y, transaction => {\n        const currentAttributes = new Map() // saves all current attributes for insert\n        const oldAttributes = new Map()\n        let item = this.target._start\n        /**\n         * @type {string?}\n         */\n        let action = null\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {} // counts added or removed new attributes for retain\n        /**\n         * @type {string|object}\n         */\n        let insert = ''\n        let retain = 0\n        let deleteLen = 0\n        const addOp = () => {\n          if (action !== null) {\n            /**\n             * @type {any}\n             */\n            let op\n            switch (action) {\n              case 'delete':\n                op = { delete: deleteLen }\n                deleteLen = 0\n                break\n              case 'insert':\n                op = { insert }\n                if (currentAttributes.size > 0) {\n                  op.attributes = {}\n                  currentAttributes.forEach((value, key) => {\n                    if (value !== null) {\n                      op.attributes[key] = value\n                    }\n                  })\n                }\n                insert = ''\n                break\n              case 'retain':\n                op = { retain }\n                if (Object.keys(attributes).length > 0) {\n                  op.attributes = {}\n                  for (const key in attributes) {\n                    op.attributes[key] = attributes[key]\n                  }\n                }\n                retain = 0\n                break\n            }\n            delta.push(op)\n            action = null\n          }\n        }\n        while (item !== null) {\n          switch (item.content.constructor) {\n            case ContentEmbed:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  addOp()\n                  action = 'insert'\n                  insert = /** @type {ContentEmbed} */ (item.content).embed\n                  addOp()\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp()\n                  action = 'delete'\n                }\n                deleteLen += 1\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp()\n                  action = 'retain'\n                }\n                retain += 1\n              }\n              break\n            case ContentString:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  if (action !== 'insert') {\n                    addOp()\n                    action = 'insert'\n                  }\n                  insert += /** @type {ContentString} */ (item.content).str\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp()\n                  action = 'delete'\n                }\n                deleteLen += item.length\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp()\n                  action = 'retain'\n                }\n                retain += item.length\n              }\n              break\n            case ContentFormat: {\n              const { key, value } = /** @type {ContentFormat} */ (item.content)\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  const curVal = currentAttributes.get(key) || null\n                  if (!equalAttrs(curVal, value)) {\n                    if (action === 'retain') {\n                      addOp()\n                    }\n                    if (equalAttrs(value, (oldAttributes.get(key) || null))) {\n                      delete attributes[key]\n                    } else {\n                      attributes[key] = value\n                    }\n                  } else {\n                    item.delete(transaction)\n                  }\n                }\n              } else if (this.deletes(item)) {\n                oldAttributes.set(key, value)\n                const curVal = currentAttributes.get(key) || null\n                if (!equalAttrs(curVal, value)) {\n                  if (action === 'retain') {\n                    addOp()\n                  }\n                  attributes[key] = curVal\n                }\n              } else if (!item.deleted) {\n                oldAttributes.set(key, value)\n                const attr = attributes[key]\n                if (attr !== undefined) {\n                  if (!equalAttrs(attr, value)) {\n                    if (action === 'retain') {\n                      addOp()\n                    }\n                    if (value === null) {\n                      attributes[key] = value\n                    } else {\n                      delete attributes[key]\n                    }\n                  } else {\n                    item.delete(transaction)\n                  }\n                }\n              }\n              if (!item.deleted) {\n                if (action === 'insert') {\n                  addOp()\n                }\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (item.content))\n              }\n              break\n            }\n          }\n          item = item.right\n        }\n        addOp()\n        while (delta.length > 0) {\n          const lastOp = delta[delta.length - 1]\n          if (lastOp.retain !== undefined && lastOp.attributes === undefined) {\n            // retain delta's if they don't assign attributes\n            delta.pop()\n          } else {\n            break\n          }\n        }\n      })\n      this._delta = delta\n    }\n    return /** @type {any} */ (this._delta)\n  }\n}\n\n/**\n * Type that represents text with formatting information.\n *\n * This type replaces y-richtext as this implementation is able to handle\n * block formats (format information on a paragraph), embeds (complex elements\n * like pictures and videos), and text formats (**bold**, *italic*).\n *\n * @extends AbstractType<YTextEvent>\n */\nexport class YText extends AbstractType {\n  /**\n   * @param {String} [string] The initial value of the YText.\n   */\n  constructor (string) {\n    super()\n    /**\n     * Array of pending operations on this type\n     * @type {Array<function():void>?}\n     */\n    this._pending = string !== undefined ? [() => this.insert(0, string)] : []\n    /**\n     * @type {Array<ArraySearchMarker>}\n     */\n    this._searchMarker = []\n  }\n\n  /**\n   * Number of characters of this text type.\n   *\n   * @type {number}\n   */\n  get length () {\n    return this._length\n  }\n\n  /**\n   * @param {Doc} y\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    try {\n      /** @type {Array<function>} */ (this._pending).forEach(f => f())\n    } catch (e) {\n      console.error(e)\n    }\n    this._pending = null\n  }\n\n  _copy () {\n    return new YText()\n  }\n\n  /**\n   * @return {YText}\n   */\n  clone () {\n    const text = new YText()\n    text.applyDelta(this.toDelta())\n    return text\n  }\n\n  /**\n   * Creates YTextEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs)\n    const event = new YTextEvent(this, transaction, parentSubs)\n    const doc = transaction.doc\n    callTypeObservers(this, transaction, event)\n    // If a remote change happened, we try to cleanup potential formatting duplicates.\n    if (!transaction.local) {\n      // check if another formatting item was inserted\n      let foundFormattingItem = false\n      for (const [client, afterClock] of transaction.afterState.entries()) {\n        const clock = transaction.beforeState.get(client) || 0\n        if (afterClock === clock) {\n          continue\n        }\n        iterateStructs(transaction, /** @type {Array<Item|GC>} */ (doc.store.clients.get(client)), clock, afterClock, item => {\n          if (!item.deleted && /** @type {Item} */ (item).content.constructor === ContentFormat) {\n            foundFormattingItem = true\n          }\n        })\n        if (foundFormattingItem) {\n          break\n        }\n      }\n      if (!foundFormattingItem) {\n        iterateDeletedStructs(transaction, transaction.deleteSet, item => {\n          if (item instanceof GC || foundFormattingItem) {\n            return\n          }\n          if (item.parent === this && item.content.constructor === ContentFormat) {\n            foundFormattingItem = true\n          }\n        })\n      }\n      transact(doc, (t) => {\n        if (foundFormattingItem) {\n          // If a formatting item was inserted, we simply clean the whole type.\n          // We need to compute currentAttributes for the current position anyway.\n          cleanupYTextFormatting(this)\n        } else {\n          // If no formatting attribute was inserted, we can make due with contextless\n          // formatting cleanups.\n          // Contextless: it is not necessary to compute currentAttributes for the affected position.\n          iterateDeletedStructs(t, t.deleteSet, item => {\n            if (item instanceof GC) {\n              return\n            }\n            if (item.parent === this) {\n              cleanupContextlessFormattingGap(t, item)\n            }\n          })\n        }\n      })\n    }\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @public\n   */\n  toString () {\n    let str = ''\n    /**\n     * @type {Item|null}\n     */\n    let n = this._start\n    while (n !== null) {\n      if (!n.deleted && n.countable && n.content.constructor === ContentString) {\n        str += /** @type {ContentString} */ (n.content).str\n      }\n      n = n.right\n    }\n    return str\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @return {string}\n   * @public\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Apply a {@link Delta} on this shared YText type.\n   *\n   * @param {any} delta The changes to apply on this element.\n   * @param {object}  [opts]\n   * @param {boolean} [opts.sanitize] Sanitize input delta. Removes ending newlines if set to true.\n   *\n   *\n   * @public\n   */\n  applyDelta (delta, { sanitize = true } = {}) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const currPos = new ItemTextListPosition(null, this._start, 0, new Map())\n        for (let i = 0; i < delta.length; i++) {\n          const op = delta[i]\n          if (op.insert !== undefined) {\n            // Quill assumes that the content starts with an empty paragraph.\n            // Yjs/Y.Text assumes that it starts empty. We always hide that\n            // there is a newline at the end of the content.\n            // If we omit this step, clients will see a different number of\n            // paragraphs, but nothing bad will happen.\n            const ins = (!sanitize && typeof op.insert === 'string' && i === delta.length - 1 && currPos.right === null && op.insert.slice(-1) === '\\n') ? op.insert.slice(0, -1) : op.insert\n            if (typeof ins !== 'string' || ins.length > 0) {\n              insertText(transaction, this, currPos, ins, op.attributes || {})\n            }\n          } else if (op.retain !== undefined) {\n            formatText(transaction, this, currPos, op.retain, op.attributes || {})\n          } else if (op.delete !== undefined) {\n            deleteText(transaction, currPos, op.delete)\n          }\n        }\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.applyDelta(delta))\n    }\n  }\n\n  /**\n   * Returns the Delta representation of this YText type.\n   *\n   * @param {Snapshot} [snapshot]\n   * @param {Snapshot} [prevSnapshot]\n   * @param {function('removed' | 'added', ID):any} [computeYChange]\n   * @return {any} The Delta representation of this type.\n   *\n   * @public\n   */\n  toDelta (snapshot, prevSnapshot, computeYChange) {\n    /**\n     * @type{Array<any>}\n     */\n    const ops = []\n    const currentAttributes = new Map()\n    const doc = /** @type {Doc} */ (this.doc)\n    let str = ''\n    let n = this._start\n    function packStr () {\n      if (str.length > 0) {\n        // pack str with attributes to ops\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {}\n        let addAttributes = false\n        currentAttributes.forEach((value, key) => {\n          addAttributes = true\n          attributes[key] = value\n        })\n        /**\n         * @type {Object<string,any>}\n         */\n        const op = { insert: str }\n        if (addAttributes) {\n          op.attributes = attributes\n        }\n        ops.push(op)\n        str = ''\n      }\n    }\n    // snapshots are merged again after the transaction, so we need to keep the\n    // transalive until we are done\n    transact(doc, transaction => {\n      if (snapshot) {\n        splitSnapshotAffectedStructs(transaction, snapshot)\n      }\n      if (prevSnapshot) {\n        splitSnapshotAffectedStructs(transaction, prevSnapshot)\n      }\n      while (n !== null) {\n        if (isVisible(n, snapshot) || (prevSnapshot !== undefined && isVisible(n, prevSnapshot))) {\n          switch (n.content.constructor) {\n            case ContentString: {\n              const cur = currentAttributes.get('ychange')\n              if (snapshot !== undefined && !isVisible(n, snapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.state !== 'removed') {\n                  packStr()\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('removed', n.id) : { type: 'removed' })\n                }\n              } else if (prevSnapshot !== undefined && !isVisible(n, prevSnapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.state !== 'added') {\n                  packStr()\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('added', n.id) : { type: 'added' })\n                }\n              } else if (cur !== undefined) {\n                packStr()\n                currentAttributes.delete('ychange')\n              }\n              str += /** @type {ContentString} */ (n.content).str\n              break\n            }\n            case ContentEmbed: {\n              packStr()\n              /**\n               * @type {Object<string,any>}\n               */\n              const op = {\n                insert: /** @type {ContentEmbed} */ (n.content).embed\n              }\n              if (currentAttributes.size > 0) {\n                const attrs = /** @type {Object<string,any>} */ ({})\n                op.attributes = attrs\n                currentAttributes.forEach((value, key) => {\n                  attrs[key] = value\n                })\n              }\n              ops.push(op)\n              break\n            }\n            case ContentFormat:\n              if (isVisible(n, snapshot)) {\n                packStr()\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (n.content))\n              }\n              break\n          }\n        }\n        n = n.right\n      }\n      packStr()\n    }, splitSnapshotAffectedStructs)\n    return ops\n  }\n\n  /**\n   * Insert text at a given index.\n   *\n   * @param {number} index The index at which to start inserting.\n   * @param {String} text The text to insert at the specified position.\n   * @param {TextAttributes} [attributes] Optionally define some formatting\n   *                                    information to apply on the inserted\n   *                                    Text.\n   * @public\n   */\n  insert (index, text, attributes) {\n    if (text.length <= 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index)\n        if (!attributes) {\n          attributes = {}\n          // @ts-ignore\n          pos.currentAttributes.forEach((v, k) => { attributes[k] = v })\n        }\n        insertText(transaction, this, pos, text, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insert(index, text, attributes))\n    }\n  }\n\n  /**\n   * Inserts an embed at a index.\n   *\n   * @param {number} index The index to insert the embed at.\n   * @param {Object} embed The Object that represents the embed.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    embed\n   *\n   * @public\n   */\n  insertEmbed (index, embed, attributes = {}) {\n    if (embed.constructor !== Object) {\n      throw new Error('Embed must be an Object')\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index)\n        insertText(transaction, this, pos, embed, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insertEmbed(index, embed, attributes))\n    }\n  }\n\n  /**\n   * Deletes text starting from an index.\n   *\n   * @param {number} index Index at which to start deleting.\n   * @param {number} length The number of characters to remove. Defaults to 1.\n   *\n   * @public\n   */\n  delete (index, length) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        deleteText(transaction, findPosition(transaction, this, index), length)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.delete(index, length))\n    }\n  }\n\n  /**\n   * Assigns properties to a range of text.\n   *\n   * @param {number} index The position where to start formatting.\n   * @param {number} length The amount of characters to assign properties to.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    text.\n   *\n   * @public\n   */\n  format (index, length, attributes) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index)\n        if (pos.right === null) {\n          return\n        }\n        formatText(transaction, this, pos, length, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.format(index, length, attributes))\n    }\n  }\n\n  /**\n   * Removes an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.removeAttribute(attributeName))\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {any} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.setAttribute(attributeName, attributeValue))\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {any} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {Snapshot} [snapshot]\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes (snapshot) {\n    return typeMapGetAll(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YTextRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YText}\n *\n * @private\n * @function\n */\nexport const readYText = decoder => new YText()\n","/**\n * @module YXml\n */\n\nimport {\n  YXmlEvent,\n  YXmlElement,\n  AbstractType,\n  typeListMap,\n  typeListForEach,\n  typeListInsertGenerics,\n  typeListInsertGenericsAfter,\n  typeListDelete,\n  typeListToArray,\n  YXmlFragmentRefID,\n  callTypeObservers,\n  transact,\n  typeListGet,\n  typeListSlice,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, ContentType, Transaction, Item, YXmlText, YXmlHook, Snapshot // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error.js'\n\n/**\n * Define the elements to which a set of CSS queries apply.\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors|CSS_Selectors}\n *\n * @example\n *   query = '.classSelector'\n *   query = 'nodeSelector'\n *   query = '#idSelector'\n *\n * @typedef {string} CSS_Selector\n */\n\n/**\n * Dom filter function.\n *\n * @callback domFilter\n * @param {string} nodeName The nodeName of the element\n * @param {Map} attributes The map of attributes.\n * @return {boolean} Whether to include the Dom node in the YXmlElement.\n */\n\n/**\n * Represents a subset of the nodes of a YXmlElement / YXmlFragment and a\n * position within them.\n *\n * Can be created with {@link YXmlFragment#createTreeWalker}\n *\n * @public\n * @implements {Iterable<YXmlElement|YXmlText|YXmlElement|YXmlHook>}\n */\nexport class YXmlTreeWalker {\n  /**\n   * @param {YXmlFragment | YXmlElement} root\n   * @param {function(AbstractType<any>):boolean} [f]\n   */\n  constructor (root, f = () => true) {\n    this._filter = f\n    this._root = root\n    /**\n     * @type {Item}\n     */\n    this._currentNode = /** @type {Item} */ (root._start)\n    this._firstCall = true\n  }\n\n  [Symbol.iterator] () {\n    return this\n  }\n\n  /**\n   * Get the next node.\n   *\n   * @return {IteratorResult<YXmlElement|YXmlText|YXmlHook>} The next node.\n   *\n   * @public\n   */\n  next () {\n    /**\n     * @type {Item|null}\n     */\n    let n = this._currentNode\n    let type = n && n.content && /** @type {any} */ (n.content).type\n    if (n !== null && (!this._firstCall || n.deleted || !this._filter(type))) { // if first call, we check if we can use the first item\n      do {\n        type = /** @type {any} */ (n.content).type\n        if (!n.deleted && (type.constructor === YXmlElement || type.constructor === YXmlFragment) && type._start !== null) {\n          // walk down in the tree\n          n = type._start\n        } else {\n          // walk right or up in the tree\n          while (n !== null) {\n            if (n.right !== null) {\n              n = n.right\n              break\n            } else if (n.parent === this._root) {\n              n = null\n            } else {\n              n = /** @type {AbstractType<any>} */ (n.parent)._item\n            }\n          }\n        }\n      } while (n !== null && (n.deleted || !this._filter(/** @type {ContentType} */ (n.content).type)))\n    }\n    this._firstCall = false\n    if (n === null) {\n      // @ts-ignore\n      return { value: undefined, done: true }\n    }\n    this._currentNode = n\n    return { value: /** @type {any} */ (n.content).type, done: false }\n  }\n}\n\n/**\n * Represents a list of {@link YXmlElement}.and {@link YXmlText} types.\n * A YxmlFragment is similar to a {@link YXmlElement}, but it does not have a\n * nodeName and it does not have attributes. Though it can be bound to a DOM\n * element - in this case the attributes and the nodeName are not shared.\n *\n * @public\n * @extends AbstractType<YXmlEvent>\n */\nexport class YXmlFragment extends AbstractType {\n  constructor () {\n    super()\n    /**\n     * @type {Array<any>|null}\n     */\n    this._prelimContent = []\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get firstChild () {\n    const first = this._first\n    return first ? first.content.getContent()[0] : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent))\n    this._prelimContent = null\n  }\n\n  _copy () {\n    return new YXmlFragment()\n  }\n\n  /**\n   * @return {YXmlFragment}\n   */\n  clone () {\n    const el = new YXmlFragment()\n    // @ts-ignore\n    el.insert(0, el.toArray().map(item => item instanceof AbstractType ? item.clone() : item))\n    return el\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Create a subtree of childNodes.\n   *\n   * @example\n   * const walker = elem.createTreeWalker(dom => dom.nodeName === 'div')\n   * for (let node in walker) {\n   *   // `node` is a div node\n   *   nop(node)\n   * }\n   *\n   * @param {function(AbstractType<any>):boolean} filter Function that is called on each child element and\n   *                          returns a Boolean indicating whether the child\n   *                          is to be included in the subtree.\n   * @return {YXmlTreeWalker} A subtree and a position within it.\n   *\n   * @public\n   */\n  createTreeWalker (filter) {\n    return new YXmlTreeWalker(this, filter)\n  }\n\n  /**\n   * Returns the first YXmlElement that matches the query.\n   * Similar to DOM's {@link querySelector}.\n   *\n   * Query support:\n   *   - tagname\n   * TODO:\n   *   - id\n   *   - attribute\n   *\n   * @param {CSS_Selector} query The query on the children.\n   * @return {YXmlElement|YXmlText|YXmlHook|null} The first element that matches the query or null.\n   *\n   * @public\n   */\n  querySelector (query) {\n    query = query.toUpperCase()\n    // @ts-ignore\n    const iterator = new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query)\n    const next = iterator.next()\n    if (next.done) {\n      return null\n    } else {\n      return next.value\n    }\n  }\n\n  /**\n   * Returns all YXmlElements that match the query.\n   * Similar to Dom's {@link querySelectorAll}.\n   *\n   * @todo Does not yet support all queries. Currently only query by tagName.\n   *\n   * @param {CSS_Selector} query The query on the children\n   * @return {Array<YXmlElement|YXmlText|YXmlHook|null>} The elements that match this query.\n   *\n   * @public\n   */\n  querySelectorAll (query) {\n    query = query.toUpperCase()\n    // @ts-ignore\n    return Array.from(new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query))\n  }\n\n  /**\n   * Creates YXmlEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YXmlEvent(this, parentSubs, transaction))\n  }\n\n  /**\n   * Get the string representation of all the children of this YXmlFragment.\n   *\n   * @return {string} The string representation of all children.\n   */\n  toString () {\n    return typeListMap(this, xml => xml.toString()).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const fragment = _document.createDocumentFragment()\n    if (binding !== undefined) {\n      binding._createAssociation(fragment, this)\n    }\n    typeListForEach(this, xmlType => {\n      fragment.insertBefore(xmlType.toDOM(_document, hooks, binding), null)\n    })\n    return fragment\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {number} index The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, content)\n      })\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {null|Item|YXmlElement|YXmlText} ref The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insertAfter (ref, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const refItem = (ref && ref instanceof AbstractType) ? ref._item : ref\n        typeListInsertGenericsAfter(transaction, this, refItem, content)\n      })\n    } else {\n      const pc = /** @type {Array<any>} */ (this._prelimContent)\n      const index = ref === null ? 0 : pc.findIndex(el => el === ref) + 1\n      if (index === 0 && ref !== null) {\n        throw error.create('Reference item not found')\n      }\n      pc.splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} [length=1] The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length)\n      })\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, length)\n    }\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<YXmlElement|YXmlText|YXmlHook>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to append.\n   */\n  push (content) {\n    this.insert(this.length, content)\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content)\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {YXmlElement|YXmlText}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<YXmlElement|YXmlText>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlFragmentRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlFragment}\n *\n * @private\n * @function\n */\nexport const readYXmlFragment = decoder => new YXmlFragment()\n","\nimport {\n  YXmlFragment,\n  transact,\n  typeMapDelete,\n  typeMapSet,\n  typeMapGet,\n  typeMapGetAll,\n  typeListForEach,\n  YXmlElementRefID,\n  YXmlText, ContentType, AbstractType, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Snapshot, Doc, Item // eslint-disable-line\n} from '../internals.js'\n\n/**\n * An YXmlElement imitates the behavior of a\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}.\n *\n * * An YXmlElement has attributes (key value pairs)\n * * An YXmlElement has childElements that must inherit from YXmlElement\n */\nexport class YXmlElement extends YXmlFragment {\n  constructor (nodeName = 'UNDEFINED') {\n    super()\n    this.nodeName = nodeName\n    /**\n     * @type {Map<string, any>|null}\n     */\n    this._prelimAttrs = new Map()\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;(/** @type {Map<string, any>} */ (this._prelimAttrs)).forEach((value, key) => {\n      this.setAttribute(key, value)\n    })\n    this._prelimAttrs = null\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   *\n   * @return {YXmlElement}\n   */\n  _copy () {\n    return new YXmlElement(this.nodeName)\n  }\n\n  /**\n   * @return {YXmlElement}\n   */\n  clone () {\n    const el = new YXmlElement(this.nodeName)\n    const attrs = this.getAttributes()\n    for (const key in attrs) {\n      el.setAttribute(key, attrs[key])\n    }\n    // @ts-ignore\n    el.insert(0, el.toArray().map(item => item instanceof AbstractType ? item.clone() : item))\n    return el\n  }\n\n  /**\n   * Returns the XML serialization of this YXmlElement.\n   * The attributes are ordered by attribute-name, so you can easily use this\n   * method to compare YXmlElements\n   *\n   * @return {string} The string representation of this type.\n   *\n   * @public\n   */\n  toString () {\n    const attrs = this.getAttributes()\n    const stringBuilder = []\n    const keys = []\n    for (const key in attrs) {\n      keys.push(key)\n    }\n    keys.sort()\n    const keysLen = keys.length\n    for (let i = 0; i < keysLen; i++) {\n      const key = keys[i]\n      stringBuilder.push(key + '=\"' + attrs[key] + '\"')\n    }\n    const nodeName = this.nodeName.toLocaleLowerCase()\n    const attrsString = stringBuilder.length > 0 ? ' ' + stringBuilder.join(' ') : ''\n    return `<${nodeName}${attrsString}>${super.toString()}</${nodeName}>`\n  }\n\n  /**\n   * Removes an attribute from this YXmlElement.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName)\n      })\n    } else {\n      /** @type {Map<string,any>} */ (this._prelimAttrs).delete(attributeName)\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {String} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue)\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimAttrs).set(attributeName, attributeValue)\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {String} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @param {Snapshot} [snapshot]\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes (snapshot) {\n    return typeMapGetAll(this)\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const dom = _document.createElement(this.nodeName)\n    const attrs = this.getAttributes()\n    for (const key in attrs) {\n      dom.setAttribute(key, attrs[key])\n    }\n    typeListForEach(this, yxml => {\n      dom.appendChild(yxml.toDOM(_document, hooks, binding))\n    })\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlElementRefID)\n    encoder.writeKey(this.nodeName)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlElement}\n *\n * @function\n */\nexport const readYXmlElement = decoder => new YXmlElement(decoder.readKey())\n","\nimport {\n  YEvent,\n  YXmlText, YXmlElement, YXmlFragment, Transaction // eslint-disable-line\n} from '../internals.js'\n\n/**\n * An Event that describes changes on a YXml Element or Yxml Fragment\n */\nexport class YXmlEvent extends YEvent {\n  /**\n   * @param {YXmlElement|YXmlText|YXmlFragment} target The target on which the event is created.\n   * @param {Set<string|null>} subs The set of changed attributes. `null` is included if the\n   *                   child list changed.\n   * @param {Transaction} transaction The transaction instance with wich the\n   *                                  change was created.\n   */\n  constructor (target, subs, transaction) {\n    super(target, transaction)\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.attributesChanged = new Set()\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true\n      } else {\n        this.attributesChanged.add(sub)\n      }\n    })\n  }\n}\n","\nimport {\n  YMap,\n  YXmlHookRefID,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2 // eslint-disable-line\n} from '../internals.js'\n\n/**\n * You can manage binding to a custom type with YXmlHook.\n *\n * @extends {YMap<any>}\n */\nexport class YXmlHook extends YMap {\n  /**\n   * @param {string} hookName nodeName of the Dom Node.\n   */\n  constructor (hookName) {\n    super()\n    /**\n     * @type {string}\n     */\n    this.hookName = hookName\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   */\n  _copy () {\n    return new YXmlHook(this.hookName)\n  }\n\n  /**\n   * @return {YXmlHook}\n   */\n  clone () {\n    const el = new YXmlHook(this.hookName)\n    this.forEach((value, key) => {\n      el.set(key, value)\n    })\n    return el\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object.<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type\n   * @return {Element} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const hook = hooks[this.hookName]\n    let dom\n    if (hook !== undefined) {\n      dom = hook.createDom(this)\n    } else {\n      dom = document.createElement(this.hookName)\n    }\n    dom.setAttribute('data-yjs-hook', this.hookName)\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlHookRefID)\n    encoder.writeKey(this.hookName)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlHook}\n *\n * @private\n * @function\n */\nexport const readYXmlHook = decoder =>\n  new YXmlHook(decoder.readKey())\n","\nimport {\n  YText,\n  YXmlTextRefID,\n  ContentType, YXmlElement, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, // eslint-disable-line\n} from '../internals.js'\n\n/**\n * Represents text in a Dom Element. In the future this type will also handle\n * simple formatting information like bold and italic.\n */\nexport class YXmlText extends YText {\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  _copy () {\n    return new YXmlText()\n  }\n\n  /**\n   * @return {YXmlText}\n   */\n  clone () {\n    const text = new YXmlText()\n    text.applyDelta(this.toDelta())\n    return text\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlText.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Text} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks, binding) {\n    const dom = _document.createTextNode(this.toString())\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  toString () {\n    // @ts-ignore\n    return this.toDelta().map(delta => {\n      const nestedNodes = []\n      for (const nodeName in delta.attributes) {\n        const attrs = []\n        for (const key in delta.attributes[nodeName]) {\n          attrs.push({ key, value: delta.attributes[nodeName][key] })\n        }\n        // sort attributes to get a unique order\n        attrs.sort((a, b) => a.key < b.key ? -1 : 1)\n        nestedNodes.push({ nodeName, attrs })\n      }\n      // sort node order to get a unique order\n      nestedNodes.sort((a, b) => a.nodeName < b.nodeName ? -1 : 1)\n      // now convert to dom string\n      let str = ''\n      for (let i = 0; i < nestedNodes.length; i++) {\n        const node = nestedNodes[i]\n        str += `<${node.nodeName}`\n        for (let j = 0; j < node.attrs.length; j++) {\n          const attr = node.attrs[j]\n          str += ` ${attr.key}=\"${attr.value}\"`\n        }\n        str += '>'\n      }\n      str += delta.insert\n      for (let i = nestedNodes.length - 1; i >= 0; i--) {\n        str += `</${nestedNodes[i].nodeName}>`\n      }\n      return str\n    }).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlTextRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlText}\n *\n * @private\n * @function\n */\nexport const readYXmlText = decoder => new YXmlText()\n","\nimport {\n  UpdateEncoderV1, UpdateEncoderV2, ID, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error.js'\n\nexport class AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {number} length\n   */\n  constructor (id, length) {\n    this.id = id\n    this.length = length\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get deleted () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Merge this struct with the item to the right.\n   * This method is already assuming that `this.id.clock + this.length === this.id.clock`.\n   * Also this method does *not* remove right from StructStore!\n   * @param {AbstractStruct} right\n   * @return {boolean} wether this merged with right\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   * @param {number} encodingRef\n   */\n  write (encoder, offset, encodingRef) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    throw error.methodUnimplemented()\n  }\n}\n","\nimport {\n  AbstractStruct,\n  addStruct,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\n\nexport const structGCRefNumber = 0\n\n/**\n * @private\n */\nexport class GC extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {GC} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset\n      this.length -= offset\n    }\n    addStruct(transaction.doc.store, this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structGCRefNumber)\n    encoder.writeLen(this.length - offset)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n","import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error.js'\n\nexport class ContentBinary {\n  /**\n   * @param {Uint8Array} content\n   */\n  constructor (content) {\n    this.content = content\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.content]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentBinary}\n   */\n  copy () {\n    return new ContentBinary(this.content)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentBinary}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentBinary} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeBuf(this.content)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 3\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentBinary}\n */\nexport const readContentBinary = decoder => new ContentBinary(decoder.readBuf())\n","\nimport {\n  addToDeleteSet,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nexport class ContentDeleted {\n  /**\n   * @param {number} len\n   */\n  constructor (len) {\n    this.len = len\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.len\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentDeleted}\n   */\n  copy () {\n    return new ContentDeleted(this.len)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDeleted}\n   */\n  splice (offset) {\n    const right = new ContentDeleted(this.len - offset)\n    this.len = offset\n    return right\n  }\n\n  /**\n   * @param {ContentDeleted} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.len += right.len\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    addToDeleteSet(transaction.deleteSet, item.id.client, item.id.clock, this.len)\n    item.markDeleted()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeLen(this.len - offset)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 1\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentDeleted}\n */\nexport const readContentDeleted = decoder => new ContentDeleted(decoder.readLen())\n","\nimport {\n  Doc, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error.js'\n\n/**\n * @private\n */\nexport class ContentDoc {\n  /**\n   * @param {Doc} doc\n   */\n  constructor (doc) {\n    if (doc._item) {\n      console.error('This document was already integrated as a sub-document. You should create a second instance instead with the same guid.')\n    }\n    /**\n     * @type {Doc}\n     */\n    this.doc = doc\n    /**\n     * @type {any}\n     */\n    const opts = {}\n    this.opts = opts\n    if (!doc.gc) {\n      opts.gc = false\n    }\n    if (doc.autoLoad) {\n      opts.autoLoad = true\n    }\n    if (doc.meta !== null) {\n      opts.meta = doc.meta\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.doc]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentDoc}\n   */\n  copy () {\n    return new ContentDoc(this.doc)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDoc}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentDoc} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    // this needs to be reflected in doc.destroy as well\n    this.doc._item = item\n    transaction.subdocsAdded.add(this.doc)\n    if (this.doc.shouldLoad) {\n      transaction.subdocsLoaded.add(this.doc)\n    }\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (transaction.subdocsAdded.has(this.doc)) {\n      transaction.subdocsAdded.delete(this.doc)\n    } else {\n      transaction.subdocsRemoved.add(this.doc)\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) { }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(this.doc.guid)\n    encoder.writeAny(this.opts)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 9\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentDoc}\n */\nexport const readContentDoc = decoder => new ContentDoc(new Doc({ guid: decoder.readString(), ...decoder.readAny() }))\n","\nimport {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error.js'\n\n/**\n * @private\n */\nexport class ContentEmbed {\n  /**\n   * @param {Object} embed\n   */\n  constructor (embed) {\n    this.embed = embed\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.embed]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentEmbed}\n   */\n  copy () {\n    return new ContentEmbed(this.embed)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentEmbed}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentEmbed} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeJSON(this.embed)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 5\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentEmbed}\n */\nexport const readContentEmbed = decoder => new ContentEmbed(decoder.readJSON())\n","\nimport {\n  AbstractType, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Item, StructStore, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error.js'\n\n/**\n * @private\n */\nexport class ContentFormat {\n  /**\n   * @param {string} key\n   * @param {Object} value\n   */\n  constructor (key, value) {\n    this.key = key\n    this.value = value\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentFormat}\n   */\n  copy () {\n    return new ContentFormat(this.key, this.value)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentFormat}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentFormat} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    // @todo searchmarker are currently unsupported for rich text documents\n    /** @type {AbstractType<any>} */ (item.parent)._searchMarker = null\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeKey(this.key)\n    encoder.writeJSON(this.value)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 6\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentFormat}\n */\nexport const readContentFormat = decoder => new ContentFormat(decoder.readString(), decoder.readJSON())\n","import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @private\n */\nexport class ContentJSON {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentJSON}\n   */\n  copy () {\n    return new ContentJSON(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentJSON}\n   */\n  splice (offset) {\n    const right = new ContentJSON(this.arr.slice(offset))\n    this.arr = this.arr.slice(0, offset)\n    return right\n  }\n\n  /**\n   * @param {ContentJSON} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr)\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length\n    encoder.writeLen(len - offset)\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i]\n      encoder.writeString(c === undefined ? 'undefined' : JSON.stringify(c))\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 2\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentJSON}\n */\nexport const readContentJSON = decoder => {\n  const len = decoder.readLen()\n  const cs = []\n  for (let i = 0; i < len; i++) {\n    const c = decoder.readString()\n    if (c === 'undefined') {\n      cs.push(undefined)\n    } else {\n      cs.push(JSON.parse(c))\n    }\n  }\n  return new ContentJSON(cs)\n}\n","import {\n  UpdateEncoderV1, UpdateEncoderV2, UpdateDecoderV1, UpdateDecoderV2, Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\nexport class ContentAny {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentAny}\n   */\n  copy () {\n    return new ContentAny(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentAny}\n   */\n  splice (offset) {\n    const right = new ContentAny(this.arr.slice(offset))\n    this.arr = this.arr.slice(0, offset)\n    return right\n  }\n\n  /**\n   * @param {ContentAny} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr)\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length\n    encoder.writeLen(len - offset)\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i]\n      encoder.writeAny(c)\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 8\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentAny}\n */\nexport const readContentAny = decoder => {\n  const len = decoder.readLen()\n  const cs = []\n  for (let i = 0; i < len; i++) {\n    cs.push(decoder.readAny())\n  }\n  return new ContentAny(cs)\n}\n","import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @private\n */\nexport class ContentString {\n  /**\n   * @param {string} str\n   */\n  constructor (str) {\n    /**\n     * @type {string}\n     */\n    this.str = str\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.str.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.str.split('')\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentString}\n   */\n  copy () {\n    return new ContentString(this.str)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentString}\n   */\n  splice (offset) {\n    const right = new ContentString(this.str.slice(offset))\n    this.str = this.str.slice(0, offset)\n\n    // Prevent encoding invalid documents because of splitting of surrogate pairs: https://github.com/yjs/yjs/issues/248\n    const firstCharCode = this.str.charCodeAt(offset - 1)\n    if (firstCharCode >= 0xD800 && firstCharCode <= 0xDBFF) {\n      // Last character of the left split is the start of a surrogate utf16/ucs2 pair.\n      // We don't support splitting of surrogate pairs because this may lead to invalid documents.\n      // Replace the invalid character with a unicode replacement character (� / U+FFFD)\n      this.str = this.str.slice(0, offset - 1) + '�'\n      // replace right as well\n      right.str = '�' + right.str.slice(1)\n    }\n    return right\n  }\n\n  /**\n   * @param {ContentString} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.str += right.str\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(offset === 0 ? this.str : this.str.slice(offset))\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 4\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentString}\n */\nexport const readContentString = decoder => new ContentString(decoder.readString())\n","\nimport {\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, Item, YEvent, AbstractType // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error.js'\n\n/**\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractType<any>>}\n * @private\n */\nexport const typeRefs = [\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText\n]\n\nexport const YArrayRefID = 0\nexport const YMapRefID = 1\nexport const YTextRefID = 2\nexport const YXmlElementRefID = 3\nexport const YXmlFragmentRefID = 4\nexport const YXmlHookRefID = 5\nexport const YXmlTextRefID = 6\n\n/**\n * @private\n */\nexport class ContentType {\n  /**\n   * @param {AbstractType<YEvent>} type\n   */\n  constructor (type) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.type]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentType}\n   */\n  copy () {\n    return new ContentType(this.type._copy())\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentType}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentType} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    this.type._integrate(transaction.doc, item)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    let item = this.type._start\n    while (item !== null) {\n      if (!item.deleted) {\n        item.delete(transaction)\n      } else {\n        // Whis will be gc'd later and we want to merge it if possible\n        // We try to merge all deleted items after each transaction,\n        // but we have no knowledge about that this needs to be merged\n        // since it is not in transaction.ds. Hence we add it to transaction._mergeStructs\n        transaction._mergeStructs.push(item)\n      }\n      item = item.right\n    }\n    this.type._map.forEach(item => {\n      if (!item.deleted) {\n        item.delete(transaction)\n      } else {\n        // same as above\n        transaction._mergeStructs.push(item)\n      }\n    })\n    transaction.changed.delete(this.type)\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {\n    let item = this.type._start\n    while (item !== null) {\n      item.gc(store, true)\n      item = item.right\n    }\n    this.type._start = null\n    this.type._map.forEach(/** @param {Item | null} item */ (item) => {\n      while (item !== null) {\n        item.gc(store, true)\n        item = item.left\n      }\n    })\n    this.type._map = new Map()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    this.type._write(encoder)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 7\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentType}\n */\nexport const readContentType = decoder => new ContentType(typeRefs[decoder.readTypeRef()](decoder))\n","\nimport {\n  GC,\n  getState,\n  AbstractStruct,\n  replaceStruct,\n  addStruct,\n  addToDeleteSet,\n  findRootTypeKey,\n  compareIDs,\n  getItem,\n  getItemCleanEnd,\n  getItemCleanStart,\n  readContentDeleted,\n  readContentBinary,\n  readContentJSON,\n  readContentAny,\n  readContentString,\n  readContentEmbed,\n  readContentDoc,\n  createID,\n  readContentFormat,\n  readContentType,\n  addChangedTypeToTransaction,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, ContentType, ContentDeleted, StructStore, ID, AbstractType, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error.js'\nimport * as binary from 'lib0/binary.js'\n\n/**\n * @todo This should return several items\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {{item:Item, diff:number}}\n */\nexport const followRedone = (store, id) => {\n  /**\n   * @type {ID|null}\n   */\n  let nextID = id\n  let diff = 0\n  let item\n  do {\n    if (diff > 0) {\n      nextID = createID(nextID.client, nextID.clock + diff)\n    }\n    item = getItem(store, nextID)\n    diff = nextID.clock - item.id.clock\n    nextID = item.redone\n  } while (nextID !== null && item instanceof Item)\n  return {\n    item, diff\n  }\n}\n\n/**\n * Make sure that neither item nor any of its parents is ever deleted.\n *\n * This property does not persist when storing it into a database or when\n * sending it to other peers\n *\n * @param {Item|null} item\n * @param {boolean} keep\n */\nexport const keepItem = (item, keep) => {\n  while (item !== null && item.keep !== keep) {\n    item.keep = keep\n    item = /** @type {AbstractType<any>} */ (item.parent)._item\n  }\n}\n\n/**\n * Split leftItem into two items\n * @param {Transaction} transaction\n * @param {Item} leftItem\n * @param {number} diff\n * @return {Item}\n *\n * @function\n * @private\n */\nexport const splitItem = (transaction, leftItem, diff) => {\n  // create rightItem\n  const { client, clock } = leftItem.id\n  const rightItem = new Item(\n    createID(client, clock + diff),\n    leftItem,\n    createID(client, clock + diff - 1),\n    leftItem.right,\n    leftItem.rightOrigin,\n    leftItem.parent,\n    leftItem.parentSub,\n    leftItem.content.splice(diff)\n  )\n  if (leftItem.deleted) {\n    rightItem.markDeleted()\n  }\n  if (leftItem.keep) {\n    rightItem.keep = true\n  }\n  if (leftItem.redone !== null) {\n    rightItem.redone = createID(leftItem.redone.client, leftItem.redone.clock + diff)\n  }\n  // update left (do not set leftItem.rightOrigin as it will lead to problems when syncing)\n  leftItem.right = rightItem\n  // update right\n  if (rightItem.right !== null) {\n    rightItem.right.left = rightItem\n  }\n  // right is more specific.\n  transaction._mergeStructs.push(rightItem)\n  // update parent._map\n  if (rightItem.parentSub !== null && rightItem.right === null) {\n    /** @type {AbstractType<any>} */ (rightItem.parent)._map.set(rightItem.parentSub, rightItem)\n  }\n  leftItem.length = diff\n  return rightItem\n}\n\n/**\n * Redoes the effect of this operation.\n *\n * @param {Transaction} transaction The Yjs instance.\n * @param {Item} item\n * @param {Set<Item>} redoitems\n *\n * @return {Item|null}\n *\n * @private\n */\nexport const redoItem = (transaction, item, redoitems) => {\n  const doc = transaction.doc\n  const store = doc.store\n  const ownClientID = doc.clientID\n  const redone = item.redone\n  if (redone !== null) {\n    return getItemCleanStart(transaction, redone)\n  }\n  let parentItem = /** @type {AbstractType<any>} */ (item.parent)._item\n  /**\n   * @type {Item|null}\n   */\n  let left\n  /**\n   * @type {Item|null}\n   */\n  let right\n  if (item.parentSub === null) {\n    // Is an array item. Insert at the old position\n    left = item.left\n    right = item\n  } else {\n    // Is a map item. Insert as current value\n    left = item\n    while (left.right !== null) {\n      left = left.right\n      if (left.id.client !== ownClientID) {\n        // It is not possible to redo this item because it conflicts with a\n        // change from another client\n        return null\n      }\n    }\n    if (left.right !== null) {\n      left = /** @type {Item} */ (/** @type {AbstractType<any>} */ (item.parent)._map.get(item.parentSub))\n    }\n    right = null\n  }\n  // make sure that parent is redone\n  if (parentItem !== null && parentItem.deleted === true && parentItem.redone === null) {\n    // try to undo parent if it will be undone anyway\n    if (!redoitems.has(parentItem) || redoItem(transaction, parentItem, redoitems) === null) {\n      return null\n    }\n  }\n  if (parentItem !== null && parentItem.redone !== null) {\n    while (parentItem.redone !== null) {\n      parentItem = getItemCleanStart(transaction, parentItem.redone)\n    }\n    // find next cloned_redo items\n    while (left !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let leftTrace = left\n      // trace redone until parent matches\n      while (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item !== parentItem) {\n        leftTrace = leftTrace.redone === null ? null : getItemCleanStart(transaction, leftTrace.redone)\n      }\n      if (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item === parentItem) {\n        left = leftTrace\n        break\n      }\n      left = left.left\n    }\n    while (right !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let rightTrace = right\n      // trace redone until parent matches\n      while (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item !== parentItem) {\n        rightTrace = rightTrace.redone === null ? null : getItemCleanStart(transaction, rightTrace.redone)\n      }\n      if (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item === parentItem) {\n        right = rightTrace\n        break\n      }\n      right = right.right\n    }\n  }\n  const nextClock = getState(store, ownClientID)\n  const nextId = createID(ownClientID, nextClock)\n  const redoneItem = new Item(\n    nextId,\n    left, left && left.lastId,\n    right, right && right.id,\n    parentItem === null ? item.parent : /** @type {ContentType} */ (parentItem.content).type,\n    item.parentSub,\n    item.content.copy()\n  )\n  item.redone = nextId\n  keepItem(redoneItem, true)\n  redoneItem.integrate(transaction, 0)\n  return redoneItem\n}\n\n/**\n * Abstract class that represents any content.\n */\nexport class Item extends AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {Item | null} left\n   * @param {ID | null} origin\n   * @param {Item | null} right\n   * @param {ID | null} rightOrigin\n   * @param {AbstractType<any>|ID|null} parent Is a type if integrated, is null if it is possible to copy parent from left or right, is ID before integration to search for it.\n   * @param {string | null} parentSub\n   * @param {AbstractContent} content\n   */\n  constructor (id, left, origin, right, rightOrigin, parent, parentSub, content) {\n    super(id, content.getLength())\n    /**\n     * The item that was originally to the left of this item.\n     * @type {ID | null}\n     */\n    this.origin = origin\n    /**\n     * The item that is currently to the left of this item.\n     * @type {Item | null}\n     */\n    this.left = left\n    /**\n     * The item that is currently to the right of this item.\n     * @type {Item | null}\n     */\n    this.right = right\n    /**\n     * The item that was originally to the right of this item.\n     * @type {ID | null}\n     */\n    this.rightOrigin = rightOrigin\n    /**\n     * @type {AbstractType<any>|ID|null}\n     */\n    this.parent = parent\n    /**\n     * If the parent refers to this item with some kind of key (e.g. YMap, the\n     * key is specified here. The key is then used to refer to the list in which\n     * to insert this item. If `parentSub = null` type._start is the list in\n     * which to insert to. Otherwise it is `parent._map`.\n     * @type {String | null}\n     */\n    this.parentSub = parentSub\n    /**\n     * If this type's effect is reundone this type refers to the type that undid\n     * this operation.\n     * @type {ID | null}\n     */\n    this.redone = null\n    /**\n     * @type {AbstractContent}\n     */\n    this.content = content\n    /**\n     * bit1: keep\n     * bit2: countable\n     * bit3: deleted\n     * bit4: mark - mark node as fast-search-marker\n     * @type {number} byte\n     */\n    this.info = this.content.isCountable() ? binary.BIT2 : 0\n  }\n\n  /**\n   * This is used to mark the item as an indexed fast-search marker\n   *\n   * @type {boolean}\n   */\n  set marker (isMarked) {\n    if (((this.info & binary.BIT4) > 0) !== isMarked) {\n      this.info ^= binary.BIT4\n    }\n  }\n\n  get marker () {\n    return (this.info & binary.BIT4) > 0\n  }\n\n  /**\n   * If true, do not garbage collect this Item.\n   */\n  get keep () {\n    return (this.info & binary.BIT1) > 0\n  }\n\n  set keep (doKeep) {\n    if (this.keep !== doKeep) {\n      this.info ^= binary.BIT1\n    }\n  }\n\n  get countable () {\n    return (this.info & binary.BIT2) > 0\n  }\n\n  /**\n   * Whether this item was deleted or not.\n   * @type {Boolean}\n   */\n  get deleted () {\n    return (this.info & binary.BIT3) > 0\n  }\n\n  set deleted (doDelete) {\n    if (this.deleted !== doDelete) {\n      this.info ^= binary.BIT3\n    }\n  }\n\n  markDeleted () {\n    this.info |= binary.BIT3\n  }\n\n  /**\n   * Return the creator clientID of the missing op or define missing items and return null.\n   *\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    if (this.origin && this.origin.client !== this.id.client && this.origin.clock >= getState(store, this.origin.client)) {\n      return this.origin.client\n    }\n    if (this.rightOrigin && this.rightOrigin.client !== this.id.client && this.rightOrigin.clock >= getState(store, this.rightOrigin.client)) {\n      return this.rightOrigin.client\n    }\n    if (this.parent && this.parent.constructor === ID && this.id.client !== this.parent.client && this.parent.clock >= getState(store, this.parent.client)) {\n      return this.parent.client\n    }\n\n    // We have all missing ids, now find the items\n\n    if (this.origin) {\n      this.left = getItemCleanEnd(transaction, store, this.origin)\n      this.origin = this.left.lastId\n    }\n    if (this.rightOrigin) {\n      this.right = getItemCleanStart(transaction, this.rightOrigin)\n      this.rightOrigin = this.right.id\n    }\n    if ((this.left && this.left.constructor === GC) || (this.right && this.right.constructor === GC)) {\n      this.parent = null\n    }\n    // only set parent if this shouldn't be garbage collected\n    if (!this.parent) {\n      if (this.left && this.left.constructor === Item) {\n        this.parent = this.left.parent\n        this.parentSub = this.left.parentSub\n      }\n      if (this.right && this.right.constructor === Item) {\n        this.parent = this.right.parent\n        this.parentSub = this.right.parentSub\n      }\n    } else if (this.parent.constructor === ID) {\n      const parentItem = getItem(store, this.parent)\n      if (parentItem.constructor === GC) {\n        this.parent = null\n      } else {\n        this.parent = /** @type {ContentType} */ (parentItem.content).type\n      }\n    }\n    return null\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset\n      this.left = getItemCleanEnd(transaction, transaction.doc.store, createID(this.id.client, this.id.clock - 1))\n      this.origin = this.left.lastId\n      this.content = this.content.splice(offset)\n      this.length -= offset\n    }\n\n    if (this.parent) {\n      if ((!this.left && (!this.right || this.right.left !== null)) || (this.left && this.left.right !== this.right)) {\n        /**\n         * @type {Item|null}\n         */\n        let left = this.left\n\n        /**\n         * @type {Item|null}\n         */\n        let o\n        // set o to the first conflicting item\n        if (left !== null) {\n          o = left.right\n        } else if (this.parentSub !== null) {\n          o = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null\n          while (o !== null && o.left !== null) {\n            o = o.left\n          }\n        } else {\n          o = /** @type {AbstractType<any>} */ (this.parent)._start\n        }\n        // TODO: use something like DeleteSet here (a tree implementation would be best)\n        // @todo use global set definitions\n        /**\n         * @type {Set<Item>}\n         */\n        const conflictingItems = new Set()\n        /**\n         * @type {Set<Item>}\n         */\n        const itemsBeforeOrigin = new Set()\n        // Let c in conflictingItems, b in itemsBeforeOrigin\n        // ***{origin}bbbb{this}{c,b}{c,b}{o}***\n        // Note that conflictingItems is a subset of itemsBeforeOrigin\n        while (o !== null && o !== this.right) {\n          itemsBeforeOrigin.add(o)\n          conflictingItems.add(o)\n          if (compareIDs(this.origin, o.origin)) {\n            // case 1\n            if (o.id.client < this.id.client) {\n              left = o\n              conflictingItems.clear()\n            } else if (compareIDs(this.rightOrigin, o.rightOrigin)) {\n              // this and o are conflicting and point to the same integration points. The id decides which item comes first.\n              // Since this is to the left of o, we can break here\n              break\n            } // else, o might be integrated before an item that this conflicts with. If so, we will find it in the next iterations\n          } else if (o.origin !== null && itemsBeforeOrigin.has(getItem(transaction.doc.store, o.origin))) { // use getItem instead of getItemCleanEnd because we don't want / need to split items.\n            // case 2\n            if (!conflictingItems.has(getItem(transaction.doc.store, o.origin))) {\n              left = o\n              conflictingItems.clear()\n            }\n          } else {\n            break\n          }\n          o = o.right\n        }\n        this.left = left\n      }\n      // reconnect left/right + update parent map/start if necessary\n      if (this.left !== null) {\n        const right = this.left.right\n        this.right = right\n        this.left.right = this\n      } else {\n        let r\n        if (this.parentSub !== null) {\n          r = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null\n          while (r !== null && r.left !== null) {\n            r = r.left\n          }\n        } else {\n          r = /** @type {AbstractType<any>} */ (this.parent)._start\n          ;/** @type {AbstractType<any>} */ (this.parent)._start = this\n        }\n        this.right = r\n      }\n      if (this.right !== null) {\n        this.right.left = this\n      } else if (this.parentSub !== null) {\n        // set as current parent value if right === null and this is parentSub\n        /** @type {AbstractType<any>} */ (this.parent)._map.set(this.parentSub, this)\n        if (this.left !== null) {\n          // this is the current attribute value of parent. delete right\n          this.left.delete(transaction)\n        }\n      }\n      // adjust length of parent\n      if (this.parentSub === null && this.countable && !this.deleted) {\n        /** @type {AbstractType<any>} */ (this.parent)._length += this.length\n      }\n      addStruct(transaction.doc.store, this)\n      this.content.integrate(transaction, this)\n      // add parent to transaction.changed\n      addChangedTypeToTransaction(transaction, /** @type {AbstractType<any>} */ (this.parent), this.parentSub)\n      if ((/** @type {AbstractType<any>} */ (this.parent)._item !== null && /** @type {AbstractType<any>} */ (this.parent)._item.deleted) || (this.parentSub !== null && this.right !== null)) {\n        // delete if parent is deleted or if this is not the current attribute value of parent\n        this.delete(transaction)\n      }\n    } else {\n      // parent is not defined. Integrate GC struct instead\n      new GC(this.id, this.length).integrate(transaction, 0)\n    }\n  }\n\n  /**\n   * Returns the next non-deleted item\n   */\n  get next () {\n    let n = this.right\n    while (n !== null && n.deleted) {\n      n = n.right\n    }\n    return n\n  }\n\n  /**\n   * Returns the previous non-deleted item\n   */\n  get prev () {\n    let n = this.left\n    while (n !== null && n.deleted) {\n      n = n.left\n    }\n    return n\n  }\n\n  /**\n   * Computes the last content address of this Item.\n   */\n  get lastId () {\n    // allocating ids is pretty costly because of the amount of ids created, so we try to reuse whenever possible\n    return this.length === 1 ? this.id : createID(this.id.client, this.id.clock + this.length - 1)\n  }\n\n  /**\n   * Try to merge two items\n   *\n   * @param {Item} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (\n      this.constructor === right.constructor &&\n      compareIDs(right.origin, this.lastId) &&\n      this.right === right &&\n      compareIDs(this.rightOrigin, right.rightOrigin) &&\n      this.id.client === right.id.client &&\n      this.id.clock + this.length === right.id.clock &&\n      this.deleted === right.deleted &&\n      this.redone === null &&\n      right.redone === null &&\n      this.content.constructor === right.content.constructor &&\n      this.content.mergeWith(right.content)\n    ) {\n      if (right.keep) {\n        this.keep = true\n      }\n      this.right = right.right\n      if (this.right !== null) {\n        this.right.left = this\n      }\n      this.length += right.length\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Mark this Item as deleted.\n   *\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (!this.deleted) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent)\n      // adjust the length of parent\n      if (this.countable && this.parentSub === null) {\n        parent._length -= this.length\n      }\n      this.markDeleted()\n      addToDeleteSet(transaction.deleteSet, this.id.client, this.id.clock, this.length)\n      addChangedTypeToTransaction(transaction, parent, this.parentSub)\n      this.content.delete(transaction)\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   * @param {boolean} parentGCd\n   */\n  gc (store, parentGCd) {\n    if (!this.deleted) {\n      throw error.unexpectedCase()\n    }\n    this.content.gc(store)\n    if (parentGCd) {\n      replaceStruct(store, this, new GC(this.id, this.length))\n    } else {\n      this.content = new ContentDeleted(this.length)\n    }\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const origin = offset > 0 ? createID(this.id.client, this.id.clock + offset - 1) : this.origin\n    const rightOrigin = this.rightOrigin\n    const parentSub = this.parentSub\n    const info = (this.content.getRef() & binary.BITS5) |\n      (origin === null ? 0 : binary.BIT8) | // origin is defined\n      (rightOrigin === null ? 0 : binary.BIT7) | // right origin is defined\n      (parentSub === null ? 0 : binary.BIT6) // parentSub is non-null\n    encoder.writeInfo(info)\n    if (origin !== null) {\n      encoder.writeLeftID(origin)\n    }\n    if (rightOrigin !== null) {\n      encoder.writeRightID(rightOrigin)\n    }\n    if (origin === null && rightOrigin === null) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent)\n      if (parent._item !== undefined) {\n        const parentItem = parent._item\n        if (parentItem === null) {\n          // parent type on y._map\n          // find the correct key\n          const ykey = findRootTypeKey(parent)\n          encoder.writeParentInfo(true) // write parentYKey\n          encoder.writeString(ykey)\n        } else {\n          encoder.writeParentInfo(false) // write parent id\n          encoder.writeLeftID(parentItem.id)\n        }\n      } else if (parent.constructor === String) { // this edge case was added by differential updates\n        encoder.writeParentInfo(true) // write parentYKey\n        encoder.writeString(parent)\n      } else if (parent.constructor === ID) {\n        encoder.writeParentInfo(false) // write parent id\n        encoder.writeLeftID(parent)\n      } else {\n        error.unexpectedCase()\n      }\n      if (parentSub !== null) {\n        encoder.writeString(parentSub)\n      }\n    }\n    this.content.write(encoder, offset)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @param {number} info\n */\nexport const readItemContent = (decoder, info) => contentRefs[info & binary.BITS5](decoder)\n\n/**\n * A lookup map for reading Item content.\n *\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractContent>}\n */\nexport const contentRefs = [\n  () => { error.unexpectedCase() }, // GC is not ItemContent\n  readContentDeleted, // 1\n  readContentJSON, // 2\n  readContentBinary, // 3\n  readContentString, // 4\n  readContentEmbed, // 5\n  readContentFormat, // 6\n  readContentType, // 7\n  readContentAny, // 8\n  readContentDoc, // 9\n  () => { error.unexpectedCase() } // 10 - Skip is not ItemContent\n]\n\n/**\n * Do not implement this class!\n */\nexport class AbstractContent {\n  /**\n   * @return {number}\n   */\n  getLength () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Should return false if this Item is some kind of meta information\n   * (e.g. format information).\n   *\n   * * Whether this Item should be addressable via `yarray.get(i)`\n   * * Whether this Item should be counted when computing yarray.length\n   *\n   * @return {boolean}\n   */\n  isCountable () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {AbstractContent}\n   */\n  copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {number} offset\n   * @return {AbstractContent}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {AbstractContent} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    throw error.methodUnimplemented()\n  }\n}\n","/**\n * Utility helpers to work with promises.\n *\n * @module promise\n */\n\nimport * as time from './time.js'\n\n/**\n * @template T\n * @callback PromiseResolve\n * @param {T|PromiseLike<T>} [result]\n */\n\n/**\n * @template T\n * @param {function(PromiseResolve<T>,function(Error):void):any} f\n * @return {Promise<T>}\n */\nexport const create = f => /** @type {Promise<T>} */ (new Promise(f))\n\n/**\n * @param {function(function():void,function(Error):void):void} f\n * @return {Promise<void>}\n */\nexport const createEmpty = f => new Promise(f)\n\n/**\n * `Promise.all` wait for all promises in the array to resolve and return the result\n * @template T\n * @param {Array<Promise<T>>} arrp\n * @return {Promise<Array<T>>}\n */\nexport const all = arrp => Promise.all(arrp)\n\n/**\n * @param {Error} [reason]\n * @return {Promise<never>}\n */\nexport const reject = reason => Promise.reject(reason)\n\n/**\n * @template T\n * @param {T|void} res\n * @return {Promise<T|void>}\n */\nexport const resolve = res => Promise.resolve(res)\n\n/**\n * @todo Next version, reorder parameters: check, [timeout, [intervalResolution]]\n *\n * @param {number} timeout\n * @param {function():boolean} check\n * @param {number} [intervalResolution]\n * @return {Promise<void>}\n */\nexport const until = (timeout, check, intervalResolution = 10) => create((resolve, reject) => {\n  const startTime = time.getUnixTime()\n  const hasTimeout = timeout > 0\n  const untilInterval = () => {\n    if (check()) {\n      clearInterval(intervalHandle)\n      resolve()\n    } else if (hasTimeout) {\n      /* istanbul ignore else */\n      if (time.getUnixTime() - startTime > timeout) {\n        clearInterval(intervalHandle)\n        reject(new Error('Timeout'))\n      }\n    }\n  }\n  const intervalHandle = setInterval(untilInterval, intervalResolution)\n})\n\n/**\n * @param {number} timeout\n * @return {Promise<undefined>}\n */\nexport const wait = timeout => create((resolve, reject) => setTimeout(resolve, timeout))\n\n/**\n * Checks if an object is a promise using ducktyping.\n *\n * Promises are often polyfilled, so it makes sense to add some additional guarantees if the user of this\n * library has some insane environment where global Promise objects are overwritten.\n *\n * @param {any} p\n * @return {boolean}\n */\nexport const isPromise = p => p instanceof Promise || (p && p.then && p.catch && p.finally)\n","/* eslint-env browser */\n\n/**\n * Helpers to work with IndexedDB.\n *\n * @module idb\n */\n\nimport * as promise from './promise.js'\nimport * as error from './error.js'\n\n/**\n * IDB Request to Promise transformer\n *\n * @param {IDBRequest} request\n * @return {Promise<any>}\n */\n/* istanbul ignore next */\nexport const rtop = request => promise.create((resolve, reject) => {\n  /* istanbul ignore next */\n  // @ts-ignore\n  request.onerror = event => reject(new Error(event.target.error))\n  /* istanbul ignore next */\n  // @ts-ignore\n  request.onblocked = () => location.reload()\n  // @ts-ignore\n  request.onsuccess = event => resolve(event.target.result)\n})\n\n/**\n * @param {string} name\n * @param {function(IDBDatabase):any} initDB Called when the database is first created\n * @return {Promise<IDBDatabase>}\n */\n/* istanbul ignore next */\nexport const openDB = (name, initDB) => promise.create((resolve, reject) => {\n  const request = indexedDB.open(name)\n  /**\n   * @param {any} event\n   */\n  request.onupgradeneeded = event => initDB(event.target.result)\n  /* istanbul ignore next */\n  /**\n   * @param {any} event\n   */\n  request.onerror = event => reject(error.create(event.target.error))\n  /* istanbul ignore next */\n  request.onblocked = () => location.reload()\n  /**\n   * @param {any} event\n   */\n  request.onsuccess = event => {\n    /**\n     * @type {IDBDatabase}\n     */\n    const db = event.target.result\n    /* istanbul ignore next */\n    db.onversionchange = () => { db.close() }\n    /* istanbul ignore if */\n    if (typeof addEventListener !== 'undefined') {\n      addEventListener('unload', () => db.close())\n    }\n    resolve(db)\n  }\n})\n\n/**\n * @param {string} name\n */\n/* istanbul ignore next */\nexport const deleteDB = name => rtop(indexedDB.deleteDatabase(name))\n\n/**\n * @param {IDBDatabase} db\n * @param {Array<Array<string>|Array<string|IDBObjectStoreParameters|undefined>>} definitions\n */\n/* istanbul ignore next */\nexport const createStores = (db, definitions) => definitions.forEach(d =>\n  // @ts-ignore\n  db.createObjectStore.apply(db, d)\n)\n\n/**\n * @param {IDBDatabase} db\n * @param {Array<string>} stores\n * @param {\"readwrite\"|\"readonly\"} [access]\n * @return {Array<IDBObjectStore>}\n */\nexport const transact = (db, stores, access = 'readwrite') => {\n  const transaction = db.transaction(stores, access)\n  return stores.map(store => getStore(transaction, store))\n}\n\n/**\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange} [range]\n * @return {Promise<number>}\n */\n/* istanbul ignore next */\nexport const count = (store, range) =>\n  rtop(store.count(range))\n\n/**\n * @param {IDBObjectStore} store\n * @param {String | number | ArrayBuffer | Date | Array<any> } key\n * @return {Promise<String | number | ArrayBuffer | Date | Array<any>>}\n */\n/* istanbul ignore next */\nexport const get = (store, key) =>\n  rtop(store.get(key))\n\n/**\n * @param {IDBObjectStore} store\n * @param {String | number | ArrayBuffer | Date | IDBKeyRange | Array<any> } key\n */\n/* istanbul ignore next */\nexport const del = (store, key) =>\n  rtop(store.delete(key))\n\n/**\n * @param {IDBObjectStore} store\n * @param {String | number | ArrayBuffer | Date | boolean} item\n * @param {String | number | ArrayBuffer | Date | Array<any>} [key]\n */\n/* istanbul ignore next */\nexport const put = (store, item, key) =>\n  rtop(store.put(item, key))\n\n/**\n * @param {IDBObjectStore} store\n * @param {String | number | ArrayBuffer | Date | boolean}  item\n * @param {String | number | ArrayBuffer | Date | Array<any>}  key\n * @return {Promise<any>}\n */\n/* istanbul ignore next */\nexport const add = (store, item, key) =>\n  rtop(store.add(item, key))\n\n/**\n * @param {IDBObjectStore} store\n * @param {String | number | ArrayBuffer | Date}  item\n * @return {Promise<number>} Returns the generated key\n */\n/* istanbul ignore next */\nexport const addAutoKey = (store, item) =>\n  rtop(store.add(item))\n\n/**\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange} [range]\n * @return {Promise<Array<any>>}\n */\n/* istanbul ignore next */\nexport const getAll = (store, range) =>\n  rtop(store.getAll(range))\n\n/**\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange} [range]\n * @return {Promise<Array<any>>}\n */\n/* istanbul ignore next */\nexport const getAllKeys = (store, range) =>\n  rtop(store.getAllKeys(range))\n\n/**\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange|null} query\n * @param {'next'|'prev'|'nextunique'|'prevunique'} direction\n * @return {Promise<any>}\n */\nexport const queryFirst = (store, query, direction) => {\n  /**\n   * @type {any}\n   */\n  let first = null\n  return iterateKeys(store, query, key => {\n    first = key\n    return false\n  }, direction).then(() => first)\n}\n\n/**\n * @param {IDBObjectStore} store\n * @return {Promise<any>}\n */\nexport const getLastKey = store => queryFirst(store, null, 'prev')\n\n/**\n * @param {IDBObjectStore} store\n * @return {Promise<any>}\n */\nexport const getFirstKey = store => queryFirst(store, null, 'prev')\n\n/**\n * @typedef KeyValuePair\n * @type {Object}\n * @property {any} k key\n * @property {any} v Value\n */\n\n/**\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange} [range]\n * @return {Promise<Array<KeyValuePair>>}\n */\n/* istanbul ignore next */\nexport const getAllKeysValues = (store, range) =>\n  // @ts-ignore\n  promise.all([getAllKeys(store, range), getAll(store, range)]).then(([ks, vs]) => ks.map((k, i) => ({ k, v: vs[i] })))\n\n/**\n * @param {any} request\n * @param {function(IDBCursorWithValue):void|boolean} f\n * @return {Promise<void>}\n */\n/* istanbul ignore next */\nconst iterateOnRequest = (request, f) => promise.create((resolve, reject) => {\n  /* istanbul ignore next */\n  request.onerror = reject\n  /**\n   * @param {any} event\n   */\n  request.onsuccess = event => {\n    const cursor = event.target.result\n    if (cursor === null || f(cursor) === false) {\n      return resolve()\n    }\n    cursor.continue()\n  }\n})\n\n/**\n * Iterate on keys and values\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange|null} keyrange\n * @param {function(any,any):void|boolean} f Callback that receives (value, key)\n * @param {'next'|'prev'|'nextunique'|'prevunique'} direction\n */\n/* istanbul ignore next */\nexport const iterate = (store, keyrange, f, direction = 'next') =>\n  iterateOnRequest(store.openCursor(keyrange, direction), cursor => f(cursor.value, cursor.key))\n\n/**\n * Iterate on the keys (no values)\n *\n * @param {IDBObjectStore} store\n * @param {IDBKeyRange|null} keyrange\n * @param {function(any):void|boolean} f callback that receives the key\n * @param {'next'|'prev'|'nextunique'|'prevunique'} direction\n */\n/* istanbul ignore next */\nexport const iterateKeys = (store, keyrange, f, direction = 'next') =>\n  iterateOnRequest(store.openKeyCursor(keyrange, direction), cursor => f(cursor.key))\n\n/**\n * Open store from transaction\n * @param {IDBTransaction} t\n * @param {String} store\n * @returns {IDBObjectStore}\n */\n/* istanbul ignore next */\nexport const getStore = (t, store) => t.objectStore(store)\n\n/**\n * @param {any} lower\n * @param {any} upper\n * @param {boolean} lowerOpen\n * @param {boolean} upperOpen\n */\n/* istanbul ignore next */\nexport const createIDBKeyRangeBound = (lower, upper, lowerOpen, upperOpen) => IDBKeyRange.bound(lower, upper, lowerOpen, upperOpen)\n\n/**\n * @param {any} upper\n * @param {boolean} upperOpen\n */\n/* istanbul ignore next */\nexport const createIDBKeyRangeUpperBound = (upper, upperOpen) => IDBKeyRange.upperBound(upper, upperOpen)\n\n/**\n * @param {any} lower\n * @param {boolean} lowerOpen\n */\n/* istanbul ignore next */\nexport const createIDBKeyRangeLowerBound = (lower, lowerOpen) => IDBKeyRange.lowerBound(lower, lowerOpen)\n","/**\n * Mutual exclude for JavaScript.\n *\n * @module mutex\n */\n\n/**\n * @callback mutex\n * @param {function():void} cb Only executed when this mutex is not in the current stack\n * @param {function():void} [elseCb] Executed when this mutex is in the current stack\n */\n\n/**\n * Creates a mutual exclude function with the following property:\n *\n * ```js\n * const mutex = createMutex()\n * mutex(() => {\n *   // This function is immediately executed\n *   mutex(() => {\n *     // This function is not executed, as the mutex is already active.\n *   })\n * })\n * ```\n *\n * @return {mutex} A mutual exclude function\n * @public\n */\nexport const createMutex = () => {\n  let token = true\n  return (f, g) => {\n    if (token) {\n      token = false\n      try {\n        f()\n      } finally {\n        token = true\n      }\n    } else if (g !== undefined) {\n      g()\n    }\n  }\n}\n","import * as Y from 'yjs'\nimport * as idb from 'lib0/indexeddb.js'\nimport * as mutex from 'lib0/mutex.js'\nimport { Observable } from 'lib0/observable.js'\n\nconst customStoreName = 'custom'\nconst updatesStoreName = 'updates'\n\nexport const PREFERRED_TRIM_SIZE = 500\n\n/**\n * @param {IndexeddbPersistence} idbPersistence\n */\nexport const fetchUpdates = idbPersistence => {\n  const [updatesStore] = idb.transact(/** @type {IDBDatabase} */ (idbPersistence.db), [updatesStoreName]) // , 'readonly')\n  return idb.getAll(updatesStore, idb.createIDBKeyRangeLowerBound(idbPersistence._dbref, false)).then(updates =>\n    idbPersistence._mux(() =>\n      idbPersistence.doc.transact(() =>\n        updates.forEach(val => Y.applyUpdate(idbPersistence.doc, val))\n      )\n    )\n  )\n    .then(() => idb.getLastKey(updatesStore).then(lastKey => { idbPersistence._dbref = lastKey + 1 }))\n    .then(() => idb.count(updatesStore).then(cnt => { idbPersistence._dbsize = cnt }))\n    .then(() => updatesStore)\n}\n\n/**\n * @param {IndexeddbPersistence} idbPersistence\n * @param {boolean} forceStore\n */\nexport const storeState = (idbPersistence, forceStore = true) =>\n  fetchUpdates(idbPersistence)\n    .then(updatesStore => {\n      if (forceStore || idbPersistence._dbsize >= PREFERRED_TRIM_SIZE) {\n        idb.addAutoKey(updatesStore, Y.encodeStateAsUpdate(idbPersistence.doc))\n          .then(() => idb.del(updatesStore, idb.createIDBKeyRangeUpperBound(idbPersistence._dbref, true)))\n          .then(() => idb.count(updatesStore).then(cnt => { idbPersistence._dbsize = cnt }))\n      }\n    })\n\n/**\n * @param {string} name\n */\nexport const clearDocument = name => idb.deleteDB(name)\n\n/**\n * @extends Observable<string>\n */\nexport class IndexeddbPersistence extends Observable {\n  /**\n   * @param {string} name\n   * @param {Y.Doc} doc\n   */\n  constructor (name, doc) {\n    super()\n    this.doc = doc\n    this.name = name\n    this._mux = mutex.createMutex()\n    this._dbref = 0\n    this._dbsize = 0\n    /**\n     * @type {IDBDatabase|null}\n     */\n    this.db = null\n    this.synced = false\n    this._db = idb.openDB(name, db =>\n      idb.createStores(db, [\n        ['updates', { autoIncrement: true }],\n        ['custom']\n      ])\n    )\n    /**\n     * @type {Promise<IndexeddbPersistence>}\n     */\n    this.whenSynced = this._db.then(db => {\n      this.db = db\n      const currState = Y.encodeStateAsUpdate(doc)\n      return fetchUpdates(this).then(updatesStore => idb.addAutoKey(updatesStore, currState)).then(() => {\n        this.emit('synced', [this])\n        this.synced = true\n        return this\n      })\n    })\n    /**\n     * Timeout in ms untill data is merged and persisted in idb.\n     */\n    this._storeTimeout = 1000\n    /**\n     * @type {any}\n     */\n    this._storeTimeoutId = null\n    /**\n     * @param {Uint8Array} update\n     */\n    this._storeUpdate = update =>\n      this._mux(() => {\n        if (this.db) {\n          const [updatesStore] = idb.transact(/** @type {IDBDatabase} */ (this.db), [updatesStoreName])\n          idb.addAutoKey(updatesStore, update)\n          if (++this._dbsize >= PREFERRED_TRIM_SIZE) {\n            // debounce store call\n            if (this._storeTimeoutId !== null) {\n              clearTimeout(this._storeTimeoutId)\n            }\n            this._storeTimeoutId = setTimeout(() => {\n              storeState(this, false)\n              this._storeTimeoutId = null\n            }, this._storeTimeout)\n          }\n        }\n      })\n    doc.on('update', this._storeUpdate)\n    this.destroy = this.destroy.bind(this)\n    doc.on('destroy', this.destroy)\n  }\n\n  destroy () {\n    if (this._storeTimeoutId) {\n      clearTimeout(this._storeTimeoutId)\n    }\n    this.doc.off('update', this._storeUpdate)\n    this.doc.off('destroy', this.destroy)\n    return this._db.then(db => {\n      db.close()\n    })\n  }\n\n  /**\n   * Destroys this instance and removes all data from indexeddb.\n   *\n   * @return {Promise<void>}\n   */\n  clearData () {\n    return this.destroy().then(() => {\n      idb.deleteDB(this.name)\n    })\n  }\n\n  /**\n   * @param {String | number | ArrayBuffer | Date} key\n   * @return {Promise<String | number | ArrayBuffer | Date | any>}\n   */\n  get (key) {\n    return this._db.then(db => {\n      const [custom] = idb.transact(db, [customStoreName], 'readonly')\n      return idb.get(custom, key)\n    })\n  }\n\n  /**\n   * @param {String | number | ArrayBuffer | Date} key\n   * @param {String | number | ArrayBuffer | Date} value\n   * @return {Promise<String | number | ArrayBuffer | Date>}\n   */\n  set (key, value) {\n    return this._db.then(db => {\n      const [custom] = idb.transact(db, [customStoreName])\n      return idb.put(custom, value, key)\n    })\n  }\n\n  /**\n   * @param {String | number | ArrayBuffer | Date} key\n   * @return {Promise<undefined>}\n   */\n  del (key) {\n    return this._db.then(db => {\n      const [custom] = idb.transact(db, [customStoreName])\n      return idb.del(custom, key)\n    })\n  }\n}\n","/* eslint-env browser */\n\n/**\n * Tiny websocket connection handler.\n *\n * Implements exponential backoff reconnects, ping/pong, and a nice event system using [lib0/observable].\n *\n * @module websocket\n */\n\nimport { Observable } from './observable.js'\nimport * as time from './time.js'\nimport * as math from './math.js'\n\nconst reconnectTimeoutBase = 1200\nconst maxReconnectTimeout = 2500\n// @todo - this should depend on awareness.outdatedTime\nconst messageReconnectTimeout = 30000\n\n/**\n * @param {WebsocketClient} wsclient\n */\nconst setupWS = (wsclient) => {\n  if (wsclient.shouldConnect && wsclient.ws === null) {\n    const websocket = new WebSocket(wsclient.url)\n    const binaryType = wsclient.binaryType\n    /**\n     * @type {any}\n     */\n    let pingTimeout = null\n    if (binaryType) {\n      websocket.binaryType = binaryType\n    }\n    wsclient.ws = websocket\n    wsclient.connecting = true\n    wsclient.connected = false\n    websocket.onmessage = event => {\n      wsclient.lastMessageReceived = time.getUnixTime()\n      const data = event.data\n      const message = typeof data === 'string' ? JSON.parse(data) : data\n      if (message && message.type === 'pong') {\n        clearTimeout(pingTimeout)\n        pingTimeout = setTimeout(sendPing, messageReconnectTimeout / 2)\n      }\n      wsclient.emit('message', [message, wsclient])\n    }\n    /**\n     * @param {any} error\n     */\n    const onclose = error => {\n      if (wsclient.ws !== null) {\n        wsclient.ws = null\n        wsclient.connecting = false\n        if (wsclient.connected) {\n          wsclient.connected = false\n          wsclient.emit('disconnect', [{ type: 'disconnect', error }, wsclient])\n        } else {\n          wsclient.unsuccessfulReconnects++\n        }\n        // Start with no reconnect timeout and increase timeout by\n        // log10(wsUnsuccessfulReconnects).\n        // The idea is to increase reconnect timeout slowly and have no reconnect\n        // timeout at the beginning (log(1) = 0)\n        setTimeout(setupWS, math.min(math.log10(wsclient.unsuccessfulReconnects + 1) * reconnectTimeoutBase, maxReconnectTimeout), wsclient)\n      }\n      clearTimeout(pingTimeout)\n    }\n    const sendPing = () => {\n      if (wsclient.ws === websocket) {\n        wsclient.send({\n          type: 'ping'\n        })\n      }\n    }\n    websocket.onclose = () => onclose(null)\n    websocket.onerror = error => onclose(error)\n    websocket.onopen = () => {\n      wsclient.lastMessageReceived = time.getUnixTime()\n      wsclient.connecting = false\n      wsclient.connected = true\n      wsclient.unsuccessfulReconnects = 0\n      wsclient.emit('connect', [{ type: 'connect' }, wsclient])\n      // set ping\n      pingTimeout = setTimeout(sendPing, messageReconnectTimeout / 2)\n    }\n  }\n}\n\n/**\n * @extends Observable<string>\n */\nexport class WebsocketClient extends Observable {\n  /**\n   * @param {string} url\n   * @param {object} [opts]\n   * @param {'arraybuffer' | 'blob' | null} [opts.binaryType] Set `ws.binaryType`\n   */\n  constructor (url, { binaryType } = {}) {\n    super()\n    this.url = url\n    /**\n     * @type {WebSocket?}\n     */\n    this.ws = null\n    this.binaryType = binaryType || null\n    this.connected = false\n    this.connecting = false\n    this.unsuccessfulReconnects = 0\n    this.lastMessageReceived = 0\n    /**\n     * Whether to connect to other peers or not\n     * @type {boolean}\n     */\n    this.shouldConnect = true\n    this._checkInterval = setInterval(() => {\n      if (this.connected && messageReconnectTimeout < time.getUnixTime() - this.lastMessageReceived) {\n        // no message received in a long time - not even your own awareness\n        // updates (which are updated every 15 seconds)\n        /** @type {WebSocket} */ (this.ws).close()\n      }\n    }, messageReconnectTimeout / 2)\n    setupWS(this)\n  }\n\n  /**\n   * @param {any} message\n   */\n  send (message) {\n    if (this.ws) {\n      this.ws.send(JSON.stringify(message))\n    }\n  }\n\n  destroy () {\n    clearInterval(this._checkInterval)\n    this.disconnect()\n    super.destroy()\n  }\n\n  disconnect () {\n    this.shouldConnect = false\n    if (this.ws !== null) {\n      this.ws.close()\n    }\n  }\n\n  connect () {\n    this.shouldConnect = true\n    if (!this.connected && this.ws === null) {\n      setupWS(this)\n    }\n  }\n}\n","/* eslint-env browser */\n\n/**\n * Helpers for cross-tab communication using broadcastchannel with LocalStorage fallback.\n *\n * ```js\n * // In browser window A:\n * broadcastchannel.subscribe('my events', data => console.log(data))\n * broadcastchannel.publish('my events', 'Hello world!') // => A: 'Hello world!' fires synchronously in same tab\n *\n * // In browser window B:\n * broadcastchannel.publish('my events', 'hello from tab B') // => A: 'hello from tab B'\n * ```\n *\n * @module broadcastchannel\n */\n\n// @todo before next major: use Uint8Array instead as buffer object\n\nimport * as map from './map.js'\nimport * as buffer from './buffer.js'\nimport * as storage from './storage.js'\n\n/**\n * @typedef {Object} Channel\n * @property {Set<Function>} Channel.subs\n * @property {any} Channel.bc\n */\n\n/**\n * @type {Map<string, Channel>}\n */\nconst channels = new Map()\n\nclass LocalStoragePolyfill {\n  /**\n   * @param {string} room\n   */\n  constructor (room) {\n    this.room = room\n    /**\n     * @type {null|function({data:ArrayBuffer}):void}\n     */\n    this.onmessage = null\n    storage.onChange(e => e.key === room && this.onmessage !== null && this.onmessage({ data: buffer.fromBase64(e.newValue || '') }))\n  }\n\n  /**\n   * @param {ArrayBuffer} buf\n   */\n  postMessage (buf) {\n    storage.varStorage.setItem(this.room, buffer.toBase64(buffer.createUint8ArrayFromArrayBuffer(buf)))\n  }\n}\n\n// Use BroadcastChannel or Polyfill\nconst BC = typeof BroadcastChannel === 'undefined' ? LocalStoragePolyfill : BroadcastChannel\n\n/**\n * @param {string} room\n * @return {Channel}\n */\nconst getChannel = room =>\n  map.setIfUndefined(channels, room, () => {\n    const subs = new Set()\n    const bc = new BC(room)\n    /**\n     * @param {{data:ArrayBuffer}} e\n     */\n    bc.onmessage = e => subs.forEach(sub => sub(e.data))\n    return {\n      bc, subs\n    }\n  })\n\n/**\n * Subscribe to global `publish` events.\n *\n * @function\n * @param {string} room\n * @param {function(any):any} f\n */\nexport const subscribe = (room, f) => getChannel(room).subs.add(f)\n\n/**\n * Unsubscribe from `publish` global events.\n *\n * @function\n * @param {string} room\n * @param {function(any):any} f\n */\nexport const unsubscribe = (room, f) => getChannel(room).subs.delete(f)\n\n/**\n * Publish data to all subscribers (including subscribers on this tab)\n *\n * @function\n * @param {string} room\n * @param {any} data\n */\nexport const publish = (room, data) => {\n  const c = getChannel(room)\n  c.bc.postMessage(data)\n  c.subs.forEach(sub => sub(data))\n}\n","(function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var t;t=\"undefined\"==typeof window?\"undefined\"==typeof global?\"undefined\"==typeof self?this:self:global:window,t.SimplePeer=e()}})(function(){var t=Math.floor,n=Math.abs,r=Math.pow;return function(){function d(s,e,n){function t(o,i){if(!e[o]){if(!s[o]){var l=\"function\"==typeof require&&require;if(!i&&l)return l(o,!0);if(r)return r(o,!0);var c=new Error(\"Cannot find module '\"+o+\"'\");throw c.code=\"MODULE_NOT_FOUND\",c}var a=e[o]={exports:{}};s[o][0].call(a.exports,function(e){var r=s[o][1][e];return t(r||e)},a,a.exports,d,s,e,n)}return e[o].exports}for(var r=\"function\"==typeof require&&require,a=0;a<n.length;a++)t(n[a]);return t}return d}()({1:[function(e,t,n){'use strict';function r(e){var t=e.length;if(0<t%4)throw new Error(\"Invalid string. Length must be a multiple of 4\");var n=e.indexOf(\"=\");-1===n&&(n=t);var r=n===t?0:4-n%4;return[n,r]}function a(e,t,n){return 3*(t+n)/4-n}function o(e){var t,n,o=r(e),d=o[0],s=o[1],l=new p(a(e,d,s)),c=0,f=0<s?d-4:d;for(n=0;n<f;n+=4)t=u[e.charCodeAt(n)]<<18|u[e.charCodeAt(n+1)]<<12|u[e.charCodeAt(n+2)]<<6|u[e.charCodeAt(n+3)],l[c++]=255&t>>16,l[c++]=255&t>>8,l[c++]=255&t;return 2===s&&(t=u[e.charCodeAt(n)]<<2|u[e.charCodeAt(n+1)]>>4,l[c++]=255&t),1===s&&(t=u[e.charCodeAt(n)]<<10|u[e.charCodeAt(n+1)]<<4|u[e.charCodeAt(n+2)]>>2,l[c++]=255&t>>8,l[c++]=255&t),l}function d(e){return c[63&e>>18]+c[63&e>>12]+c[63&e>>6]+c[63&e]}function s(e,t,n){for(var r,a=[],o=t;o<n;o+=3)r=(16711680&e[o]<<16)+(65280&e[o+1]<<8)+(255&e[o+2]),a.push(d(r));return a.join(\"\")}function l(e){for(var t,n=e.length,r=n%3,a=[],o=16383,d=0,l=n-r;d<l;d+=o)a.push(s(e,d,d+o>l?l:d+o));return 1===r?(t=e[n-1],a.push(c[t>>2]+c[63&t<<4]+\"==\")):2===r&&(t=(e[n-2]<<8)+e[n-1],a.push(c[t>>10]+c[63&t>>4]+c[63&t<<2]+\"=\")),a.join(\"\")}n.byteLength=function(e){var t=r(e),n=t[0],a=t[1];return 3*(n+a)/4-a},n.toByteArray=o,n.fromByteArray=l;for(var c=[],u=[],p=\"undefined\"==typeof Uint8Array?Array:Uint8Array,f=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",g=0,_=f.length;g<_;++g)c[g]=f[g],u[f.charCodeAt(g)]=g;u[45]=62,u[95]=63},{}],2:[function(){},{}],3:[function(e,t,n){(function(){(function(){/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */'use strict';var t=String.fromCharCode,o=Math.min;function d(e){if(2147483647<e)throw new RangeError(\"The value \\\"\"+e+\"\\\" is invalid for option \\\"size\\\"\");var t=new Uint8Array(e);return t.__proto__=s.prototype,t}function s(e,t,n){if(\"number\"==typeof e){if(\"string\"==typeof t)throw new TypeError(\"The \\\"string\\\" argument must be of type string. Received type number\");return p(e)}return l(e,t,n)}function l(e,t,n){if(\"string\"==typeof e)return f(e,t);if(ArrayBuffer.isView(e))return g(e);if(null==e)throw TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \"+typeof e);if(K(e,ArrayBuffer)||e&&K(e.buffer,ArrayBuffer))return _(e,t,n);if(\"number\"==typeof e)throw new TypeError(\"The \\\"value\\\" argument must not be of type number. Received type number\");var r=e.valueOf&&e.valueOf();if(null!=r&&r!==e)return s.from(r,t,n);var a=h(e);if(a)return a;if(\"undefined\"!=typeof Symbol&&null!=Symbol.toPrimitive&&\"function\"==typeof e[Symbol.toPrimitive])return s.from(e[Symbol.toPrimitive](\"string\"),t,n);throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \"+typeof e)}function c(e){if(\"number\"!=typeof e)throw new TypeError(\"\\\"size\\\" argument must be of type number\");else if(0>e)throw new RangeError(\"The value \\\"\"+e+\"\\\" is invalid for option \\\"size\\\"\")}function u(e,t,n){return c(e),0>=e?d(e):void 0===t?d(e):\"string\"==typeof n?d(e).fill(t,n):d(e).fill(t)}function p(e){return c(e),d(0>e?0:0|m(e))}function f(e,t){if((\"string\"!=typeof t||\"\"===t)&&(t=\"utf8\"),!s.isEncoding(t))throw new TypeError(\"Unknown encoding: \"+t);var n=0|b(e,t),r=d(n),a=r.write(e,t);return a!==n&&(r=r.slice(0,a)),r}function g(e){for(var t=0>e.length?0:0|m(e.length),n=d(t),r=0;r<t;r+=1)n[r]=255&e[r];return n}function _(e,t,n){if(0>t||e.byteLength<t)throw new RangeError(\"\\\"offset\\\" is outside of buffer bounds\");if(e.byteLength<t+(n||0))throw new RangeError(\"\\\"length\\\" is outside of buffer bounds\");var r;return r=void 0===t&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,t):new Uint8Array(e,t,n),r.__proto__=s.prototype,r}function h(e){if(s.isBuffer(e)){var t=0|m(e.length),n=d(t);return 0===n.length?n:(e.copy(n,0,0,t),n)}return void 0===e.length?\"Buffer\"===e.type&&Array.isArray(e.data)?g(e.data):void 0:\"number\"!=typeof e.length||X(e.length)?d(0):g(e)}function m(e){if(e>=2147483647)throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\"+2147483647 .toString(16)+\" bytes\");return 0|e}function b(e,t){if(s.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||K(e,ArrayBuffer))return e.byteLength;if(\"string\"!=typeof e)throw new TypeError(\"The \\\"string\\\" argument must be one of type string, Buffer, or ArrayBuffer. Received type \"+typeof e);var n=e.length,r=2<arguments.length&&!0===arguments[2];if(!r&&0===n)return 0;for(var a=!1;;)switch(t){case\"ascii\":case\"latin1\":case\"binary\":return n;case\"utf8\":case\"utf-8\":return H(e).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return 2*n;case\"hex\":return n>>>1;case\"base64\":return z(e).length;default:if(a)return r?-1:H(e).length;t=(\"\"+t).toLowerCase(),a=!0;}}function y(e,t,n){var r=!1;if((void 0===t||0>t)&&(t=0),t>this.length)return\"\";if((void 0===n||n>this.length)&&(n=this.length),0>=n)return\"\";if(n>>>=0,t>>>=0,n<=t)return\"\";for(e||(e=\"utf8\");;)switch(e){case\"hex\":return P(this,t,n);case\"utf8\":case\"utf-8\":return x(this,t,n);case\"ascii\":return D(this,t,n);case\"latin1\":case\"binary\":return I(this,t,n);case\"base64\":return A(this,t,n);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return M(this,t,n);default:if(r)throw new TypeError(\"Unknown encoding: \"+e);e=(e+\"\").toLowerCase(),r=!0;}}function C(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function R(e,t,n,r,a){if(0===e.length)return-1;if(\"string\"==typeof n?(r=n,n=0):2147483647<n?n=2147483647:-2147483648>n&&(n=-2147483648),n=+n,X(n)&&(n=a?0:e.length-1),0>n&&(n=e.length+n),n>=e.length){if(a)return-1;n=e.length-1}else if(0>n)if(a)n=0;else return-1;if(\"string\"==typeof t&&(t=s.from(t,r)),s.isBuffer(t))return 0===t.length?-1:E(e,t,n,r,a);if(\"number\"==typeof t)return t&=255,\"function\"==typeof Uint8Array.prototype.indexOf?a?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):E(e,[t],n,r,a);throw new TypeError(\"val must be string, number or Buffer\")}function E(e,t,n,r,a){function o(e,t){return 1===d?e[t]:e.readUInt16BE(t*d)}var d=1,s=e.length,l=t.length;if(void 0!==r&&(r=(r+\"\").toLowerCase(),\"ucs2\"===r||\"ucs-2\"===r||\"utf16le\"===r||\"utf-16le\"===r)){if(2>e.length||2>t.length)return-1;d=2,s/=2,l/=2,n/=2}var c;if(a){var u=-1;for(c=n;c<s;c++)if(o(e,c)!==o(t,-1===u?0:c-u))-1!==u&&(c-=c-u),u=-1;else if(-1===u&&(u=c),c-u+1===l)return u*d}else for(n+l>s&&(n=s-l),c=n;0<=c;c--){for(var p=!0,f=0;f<l;f++)if(o(e,c+f)!==o(t,f)){p=!1;break}if(p)return c}return-1}function w(e,t,n,r){n=+n||0;var a=e.length-n;r?(r=+r,r>a&&(r=a)):r=a;var o=t.length;r>o/2&&(r=o/2);for(var d,s=0;s<r;++s){if(d=parseInt(t.substr(2*s,2),16),X(d))return s;e[n+s]=d}return s}function S(e,t,n,r){return G(H(t,e.length-n),e,n,r)}function T(e,t,n,r){return G(Y(t),e,n,r)}function v(e,t,n,r){return T(e,t,n,r)}function k(e,t,n,r){return G(z(t),e,n,r)}function L(e,t,n,r){return G(V(t,e.length-n),e,n,r)}function A(e,t,n){return 0===t&&n===e.length?$.fromByteArray(e):$.fromByteArray(e.slice(t,n))}function x(e,t,n){n=o(e.length,n);for(var r=[],a=t;a<n;){var d=e[a],s=null,l=239<d?4:223<d?3:191<d?2:1;if(a+l<=n){var c,u,p,f;1===l?128>d&&(s=d):2===l?(c=e[a+1],128==(192&c)&&(f=(31&d)<<6|63&c,127<f&&(s=f))):3===l?(c=e[a+1],u=e[a+2],128==(192&c)&&128==(192&u)&&(f=(15&d)<<12|(63&c)<<6|63&u,2047<f&&(55296>f||57343<f)&&(s=f))):4===l?(c=e[a+1],u=e[a+2],p=e[a+3],128==(192&c)&&128==(192&u)&&128==(192&p)&&(f=(15&d)<<18|(63&c)<<12|(63&u)<<6|63&p,65535<f&&1114112>f&&(s=f))):void 0}null===s?(s=65533,l=1):65535<s&&(s-=65536,r.push(55296|1023&s>>>10),s=56320|1023&s),r.push(s),a+=l}return N(r)}function N(e){var n=e.length;if(n<=4096)return t.apply(String,e);for(var r=\"\",a=0;a<n;)r+=t.apply(String,e.slice(a,a+=4096));return r}function D(e,n,r){var a=\"\";r=o(e.length,r);for(var d=n;d<r;++d)a+=t(127&e[d]);return a}function I(e,n,r){var a=\"\";r=o(e.length,r);for(var d=n;d<r;++d)a+=t(e[d]);return a}function P(e,t,n){var r=e.length;(!t||0>t)&&(t=0),(!n||0>n||n>r)&&(n=r);for(var a=\"\",o=t;o<n;++o)a+=W(e[o]);return a}function M(e,n,r){for(var a=e.slice(n,r),o=\"\",d=0;d<a.length;d+=2)o+=t(a[d]+256*a[d+1]);return o}function O(e,t,n){if(0!=e%1||0>e)throw new RangeError(\"offset is not uint\");if(e+t>n)throw new RangeError(\"Trying to access beyond buffer length\")}function F(e,t,n,r,a,o){if(!s.isBuffer(e))throw new TypeError(\"\\\"buffer\\\" argument must be a Buffer instance\");if(t>a||t<o)throw new RangeError(\"\\\"value\\\" argument is out of bounds\");if(n+r>e.length)throw new RangeError(\"Index out of range\")}function B(e,t,n,r){if(n+r>e.length)throw new RangeError(\"Index out of range\");if(0>n)throw new RangeError(\"Index out of range\")}function U(e,t,n,r,a){return t=+t,n>>>=0,a||B(e,t,n,4,34028234663852886e22,-34028234663852886e22),J.write(e,t,n,r,23,4),n+4}function j(e,t,n,r,a){return t=+t,n>>>=0,a||B(e,t,n,8,17976931348623157e292,-17976931348623157e292),J.write(e,t,n,r,52,8),n+8}function q(e){if(e=e.split(\"=\")[0],e=e.trim().replace(Q,\"\"),2>e.length)return\"\";for(;0!=e.length%4;)e+=\"=\";return e}function W(e){return 16>e?\"0\"+e.toString(16):e.toString(16)}function H(e,t){t=t||1/0;for(var n,r=e.length,a=null,o=[],d=0;d<r;++d){if(n=e.charCodeAt(d),55295<n&&57344>n){if(!a){if(56319<n){-1<(t-=3)&&o.push(239,191,189);continue}else if(d+1===r){-1<(t-=3)&&o.push(239,191,189);continue}a=n;continue}if(56320>n){-1<(t-=3)&&o.push(239,191,189),a=n;continue}n=(a-55296<<10|n-56320)+65536}else a&&-1<(t-=3)&&o.push(239,191,189);if(a=null,128>n){if(0>(t-=1))break;o.push(n)}else if(2048>n){if(0>(t-=2))break;o.push(192|n>>6,128|63&n)}else if(65536>n){if(0>(t-=3))break;o.push(224|n>>12,128|63&n>>6,128|63&n)}else if(1114112>n){if(0>(t-=4))break;o.push(240|n>>18,128|63&n>>12,128|63&n>>6,128|63&n)}else throw new Error(\"Invalid code point\")}return o}function Y(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}function V(e,t){for(var n,r,a,o=[],d=0;d<e.length&&!(0>(t-=2));++d)n=e.charCodeAt(d),r=n>>8,a=n%256,o.push(a),o.push(r);return o}function z(e){return $.toByteArray(q(e))}function G(e,t,n,r){for(var a=0;a<r&&!(a+n>=t.length||a>=e.length);++a)t[a+n]=e[a];return a}function K(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function X(e){return e!==e}var $=e(\"base64-js\"),J=e(\"ieee754\");n.Buffer=s,n.SlowBuffer=function(e){return+e!=e&&(e=0),s.alloc(+e)},n.INSPECT_MAX_BYTES=50;n.kMaxLength=2147483647,s.TYPED_ARRAY_SUPPORT=function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()}catch(t){return!1}}(),s.TYPED_ARRAY_SUPPORT||\"undefined\"==typeof console||\"function\"!=typeof console.error||console.error(\"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\"),Object.defineProperty(s.prototype,\"parent\",{enumerable:!0,get:function(){return s.isBuffer(this)?this.buffer:void 0}}),Object.defineProperty(s.prototype,\"offset\",{enumerable:!0,get:function(){return s.isBuffer(this)?this.byteOffset:void 0}}),\"undefined\"!=typeof Symbol&&null!=Symbol.species&&s[Symbol.species]===s&&Object.defineProperty(s,Symbol.species,{value:null,configurable:!0,enumerable:!1,writable:!1}),s.poolSize=8192,s.from=function(e,t,n){return l(e,t,n)},s.prototype.__proto__=Uint8Array.prototype,s.__proto__=Uint8Array,s.alloc=function(e,t,n){return u(e,t,n)},s.allocUnsafe=function(e){return p(e)},s.allocUnsafeSlow=function(e){return p(e)},s.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==s.prototype},s.compare=function(e,t){if(K(e,Uint8Array)&&(e=s.from(e,e.offset,e.byteLength)),K(t,Uint8Array)&&(t=s.from(t,t.offset,t.byteLength)),!s.isBuffer(e)||!s.isBuffer(t))throw new TypeError(\"The \\\"buf1\\\", \\\"buf2\\\" arguments must be one of type Buffer or Uint8Array\");if(e===t)return 0;for(var n=e.length,r=t.length,d=0,l=o(n,r);d<l;++d)if(e[d]!==t[d]){n=e[d],r=t[d];break}return n<r?-1:r<n?1:0},s.isEncoding=function(e){switch((e+\"\").toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return!0;default:return!1;}},s.concat=function(e,t){if(!Array.isArray(e))throw new TypeError(\"\\\"list\\\" argument must be an Array of Buffers\");if(0===e.length)return s.alloc(0);var n;if(t===void 0)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var r=s.allocUnsafe(t),a=0;for(n=0;n<e.length;++n){var o=e[n];if(K(o,Uint8Array)&&(o=s.from(o)),!s.isBuffer(o))throw new TypeError(\"\\\"list\\\" argument must be an Array of Buffers\");o.copy(r,a),a+=o.length}return r},s.byteLength=b,s.prototype._isBuffer=!0,s.prototype.swap16=function(){var e=this.length;if(0!=e%2)throw new RangeError(\"Buffer size must be a multiple of 16-bits\");for(var t=0;t<e;t+=2)C(this,t,t+1);return this},s.prototype.swap32=function(){var e=this.length;if(0!=e%4)throw new RangeError(\"Buffer size must be a multiple of 32-bits\");for(var t=0;t<e;t+=4)C(this,t,t+3),C(this,t+1,t+2);return this},s.prototype.swap64=function(){var e=this.length;if(0!=e%8)throw new RangeError(\"Buffer size must be a multiple of 64-bits\");for(var t=0;t<e;t+=8)C(this,t,t+7),C(this,t+1,t+6),C(this,t+2,t+5),C(this,t+3,t+4);return this},s.prototype.toString=function(){var e=this.length;return 0===e?\"\":0===arguments.length?x(this,0,e):y.apply(this,arguments)},s.prototype.toLocaleString=s.prototype.toString,s.prototype.equals=function(e){if(!s.isBuffer(e))throw new TypeError(\"Argument must be a Buffer\");return this===e||0===s.compare(this,e)},s.prototype.inspect=function(){var e=\"\",t=n.INSPECT_MAX_BYTES;return e=this.toString(\"hex\",0,t).replace(/(.{2})/g,\"$1 \").trim(),this.length>t&&(e+=\" ... \"),\"<Buffer \"+e+\">\"},s.prototype.compare=function(e,t,n,r,a){if(K(e,Uint8Array)&&(e=s.from(e,e.offset,e.byteLength)),!s.isBuffer(e))throw new TypeError(\"The \\\"target\\\" argument must be one of type Buffer or Uint8Array. Received type \"+typeof e);if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===a&&(a=this.length),0>t||n>e.length||0>r||a>this.length)throw new RangeError(\"out of range index\");if(r>=a&&t>=n)return 0;if(r>=a)return-1;if(t>=n)return 1;if(t>>>=0,n>>>=0,r>>>=0,a>>>=0,this===e)return 0;for(var d=a-r,l=n-t,c=o(d,l),u=this.slice(r,a),p=e.slice(t,n),f=0;f<c;++f)if(u[f]!==p[f]){d=u[f],l=p[f];break}return d<l?-1:l<d?1:0},s.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},s.prototype.indexOf=function(e,t,n){return R(this,e,t,n,!0)},s.prototype.lastIndexOf=function(e,t,n){return R(this,e,t,n,!1)},s.prototype.write=function(e,t,n,r){if(void 0===t)r=\"utf8\",n=this.length,t=0;else if(void 0===n&&\"string\"==typeof t)r=t,n=this.length,t=0;else if(isFinite(t))t>>>=0,isFinite(n)?(n>>>=0,void 0===r&&(r=\"utf8\")):(r=n,n=void 0);else throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");var a=this.length-t;if((void 0===n||n>a)&&(n=a),0<e.length&&(0>n||0>t)||t>this.length)throw new RangeError(\"Attempt to write outside buffer bounds\");r||(r=\"utf8\");for(var o=!1;;)switch(r){case\"hex\":return w(this,e,t,n);case\"utf8\":case\"utf-8\":return S(this,e,t,n);case\"ascii\":return T(this,e,t,n);case\"latin1\":case\"binary\":return v(this,e,t,n);case\"base64\":return k(this,e,t,n);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return L(this,e,t,n);default:if(o)throw new TypeError(\"Unknown encoding: \"+r);r=(\"\"+r).toLowerCase(),o=!0;}},s.prototype.toJSON=function(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};s.prototype.slice=function(e,t){var n=this.length;e=~~e,t=t===void 0?n:~~t,0>e?(e+=n,0>e&&(e=0)):e>n&&(e=n),0>t?(t+=n,0>t&&(t=0)):t>n&&(t=n),t<e&&(t=e);var r=this.subarray(e,t);return r.__proto__=s.prototype,r},s.prototype.readUIntLE=function(e,t,n){e>>>=0,t>>>=0,n||O(e,t,this.length);for(var r=this[e],a=1,o=0;++o<t&&(a*=256);)r+=this[e+o]*a;return r},s.prototype.readUIntBE=function(e,t,n){e>>>=0,t>>>=0,n||O(e,t,this.length);for(var r=this[e+--t],a=1;0<t&&(a*=256);)r+=this[e+--t]*a;return r},s.prototype.readUInt8=function(e,t){return e>>>=0,t||O(e,1,this.length),this[e]},s.prototype.readUInt16LE=function(e,t){return e>>>=0,t||O(e,2,this.length),this[e]|this[e+1]<<8},s.prototype.readUInt16BE=function(e,t){return e>>>=0,t||O(e,2,this.length),this[e]<<8|this[e+1]},s.prototype.readUInt32LE=function(e,t){return e>>>=0,t||O(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},s.prototype.readUInt32BE=function(e,t){return e>>>=0,t||O(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},s.prototype.readIntLE=function(e,t,n){e>>>=0,t>>>=0,n||O(e,t,this.length);for(var a=this[e],o=1,d=0;++d<t&&(o*=256);)a+=this[e+d]*o;return o*=128,a>=o&&(a-=r(2,8*t)),a},s.prototype.readIntBE=function(e,t,n){e>>>=0,t>>>=0,n||O(e,t,this.length);for(var a=t,o=1,d=this[e+--a];0<a&&(o*=256);)d+=this[e+--a]*o;return o*=128,d>=o&&(d-=r(2,8*t)),d},s.prototype.readInt8=function(e,t){return e>>>=0,t||O(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},s.prototype.readInt16LE=function(e,t){e>>>=0,t||O(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},s.prototype.readInt16BE=function(e,t){e>>>=0,t||O(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},s.prototype.readInt32LE=function(e,t){return e>>>=0,t||O(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},s.prototype.readInt32BE=function(e,t){return e>>>=0,t||O(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},s.prototype.readFloatLE=function(e,t){return e>>>=0,t||O(e,4,this.length),J.read(this,e,!0,23,4)},s.prototype.readFloatBE=function(e,t){return e>>>=0,t||O(e,4,this.length),J.read(this,e,!1,23,4)},s.prototype.readDoubleLE=function(e,t){return e>>>=0,t||O(e,8,this.length),J.read(this,e,!0,52,8)},s.prototype.readDoubleBE=function(e,t){return e>>>=0,t||O(e,8,this.length),J.read(this,e,!1,52,8)},s.prototype.writeUIntLE=function(e,t,n,a){if(e=+e,t>>>=0,n>>>=0,!a){var o=r(2,8*n)-1;F(this,e,t,n,o,0)}var d=1,s=0;for(this[t]=255&e;++s<n&&(d*=256);)this[t+s]=255&e/d;return t+n},s.prototype.writeUIntBE=function(e,t,n,a){if(e=+e,t>>>=0,n>>>=0,!a){var o=r(2,8*n)-1;F(this,e,t,n,o,0)}var d=n-1,s=1;for(this[t+d]=255&e;0<=--d&&(s*=256);)this[t+d]=255&e/s;return t+n},s.prototype.writeUInt8=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,1,255,0),this[t]=255&e,t+1},s.prototype.writeUInt16LE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},s.prototype.writeUInt16BE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},s.prototype.writeUInt32LE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},s.prototype.writeUInt32BE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},s.prototype.writeIntLE=function(e,t,n,a){if(e=+e,t>>>=0,!a){var o=r(2,8*n-1);F(this,e,t,n,o-1,-o)}var d=0,s=1,l=0;for(this[t]=255&e;++d<n&&(s*=256);)0>e&&0===l&&0!==this[t+d-1]&&(l=1),this[t+d]=255&(e/s>>0)-l;return t+n},s.prototype.writeIntBE=function(e,t,n,a){if(e=+e,t>>>=0,!a){var o=r(2,8*n-1);F(this,e,t,n,o-1,-o)}var d=n-1,s=1,l=0;for(this[t+d]=255&e;0<=--d&&(s*=256);)0>e&&0===l&&0!==this[t+d+1]&&(l=1),this[t+d]=255&(e/s>>0)-l;return t+n},s.prototype.writeInt8=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,1,127,-128),0>e&&(e=255+e+1),this[t]=255&e,t+1},s.prototype.writeInt16LE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},s.prototype.writeInt16BE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},s.prototype.writeInt32LE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},s.prototype.writeInt32BE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,4,2147483647,-2147483648),0>e&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},s.prototype.writeFloatLE=function(e,t,n){return U(this,e,t,!0,n)},s.prototype.writeFloatBE=function(e,t,n){return U(this,e,t,!1,n)},s.prototype.writeDoubleLE=function(e,t,n){return j(this,e,t,!0,n)},s.prototype.writeDoubleBE=function(e,t,n){return j(this,e,t,!1,n)},s.prototype.copy=function(e,t,n,r){if(!s.isBuffer(e))throw new TypeError(\"argument should be a Buffer\");if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),0<r&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(0>t)throw new RangeError(\"targetStart out of bounds\");if(0>n||n>=this.length)throw new RangeError(\"Index out of range\");if(0>r)throw new RangeError(\"sourceEnd out of bounds\");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var a=r-n;if(this===e&&\"function\"==typeof Uint8Array.prototype.copyWithin)this.copyWithin(t,n,r);else if(this===e&&n<t&&t<r)for(var o=a-1;0<=o;--o)e[o+t]=this[o+n];else Uint8Array.prototype.set.call(e,this.subarray(n,r),t);return a},s.prototype.fill=function(e,t,n,r){if(\"string\"==typeof e){if(\"string\"==typeof t?(r=t,t=0,n=this.length):\"string\"==typeof n&&(r=n,n=this.length),void 0!==r&&\"string\"!=typeof r)throw new TypeError(\"encoding must be a string\");if(\"string\"==typeof r&&!s.isEncoding(r))throw new TypeError(\"Unknown encoding: \"+r);if(1===e.length){var a=e.charCodeAt(0);(\"utf8\"===r&&128>a||\"latin1\"===r)&&(e=a)}}else\"number\"==typeof e&&(e&=255);if(0>t||this.length<t||this.length<n)throw new RangeError(\"Out of range index\");if(n<=t)return this;t>>>=0,n=n===void 0?this.length:n>>>0,e||(e=0);var o;if(\"number\"==typeof e)for(o=t;o<n;++o)this[o]=e;else{var d=s.isBuffer(e)?e:s.from(e,r),l=d.length;if(0===l)throw new TypeError(\"The value \\\"\"+e+\"\\\" is invalid for argument \\\"value\\\"\");for(o=0;o<n-t;++o)this[o+t]=d[o%l]}return this};var Q=/[^+/0-9A-Za-z-_]/g}).call(this)}).call(this,e(\"buffer\").Buffer)},{\"base64-js\":1,buffer:3,ieee754:9}],4:[function(e,t,n){(function(a){(function(){function r(){let e;try{e=n.storage.getItem(\"debug\")}catch(e){}return!e&&\"undefined\"!=typeof a&&\"env\"in a&&(e=a.env.DEBUG),e}n.formatArgs=function(e){if(e[0]=(this.useColors?\"%c\":\"\")+this.namespace+(this.useColors?\" %c\":\" \")+e[0]+(this.useColors?\"%c \":\" \")+\"+\"+t.exports.humanize(this.diff),!this.useColors)return;const n=\"color: \"+this.color;e.splice(1,0,n,\"color: inherit\");let r=0,a=0;e[0].replace(/%[a-zA-Z%]/g,e=>{\"%%\"===e||(r++,\"%c\"===e&&(a=r))}),e.splice(a,0,n)},n.save=function(e){try{e?n.storage.setItem(\"debug\",e):n.storage.removeItem(\"debug\")}catch(e){}},n.load=r,n.useColors=function(){return!!(\"undefined\"!=typeof window&&window.process&&(\"renderer\"===window.process.type||window.process.__nwjs))||!(\"undefined\"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/))&&(\"undefined\"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||\"undefined\"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||\"undefined\"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)&&31<=parseInt(RegExp.$1,10)||\"undefined\"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/))},n.storage=function(){try{return localStorage}catch(e){}}(),n.destroy=(()=>{let e=!1;return()=>{e||(e=!0,console.warn(\"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.\"))}})(),n.colors=[\"#0000CC\",\"#0000FF\",\"#0033CC\",\"#0033FF\",\"#0066CC\",\"#0066FF\",\"#0099CC\",\"#0099FF\",\"#00CC00\",\"#00CC33\",\"#00CC66\",\"#00CC99\",\"#00CCCC\",\"#00CCFF\",\"#3300CC\",\"#3300FF\",\"#3333CC\",\"#3333FF\",\"#3366CC\",\"#3366FF\",\"#3399CC\",\"#3399FF\",\"#33CC00\",\"#33CC33\",\"#33CC66\",\"#33CC99\",\"#33CCCC\",\"#33CCFF\",\"#6600CC\",\"#6600FF\",\"#6633CC\",\"#6633FF\",\"#66CC00\",\"#66CC33\",\"#9900CC\",\"#9900FF\",\"#9933CC\",\"#9933FF\",\"#99CC00\",\"#99CC33\",\"#CC0000\",\"#CC0033\",\"#CC0066\",\"#CC0099\",\"#CC00CC\",\"#CC00FF\",\"#CC3300\",\"#CC3333\",\"#CC3366\",\"#CC3399\",\"#CC33CC\",\"#CC33FF\",\"#CC6600\",\"#CC6633\",\"#CC9900\",\"#CC9933\",\"#CCCC00\",\"#CCCC33\",\"#FF0000\",\"#FF0033\",\"#FF0066\",\"#FF0099\",\"#FF00CC\",\"#FF00FF\",\"#FF3300\",\"#FF3333\",\"#FF3366\",\"#FF3399\",\"#FF33CC\",\"#FF33FF\",\"#FF6600\",\"#FF6633\",\"#FF9900\",\"#FF9933\",\"#FFCC00\",\"#FFCC33\"],n.log=console.debug||console.log||(()=>{}),t.exports=e(\"./common\")(n);const{formatters:o}=t.exports;o.j=function(e){try{return JSON.stringify(e)}catch(e){return\"[UnexpectedJSONParseError]: \"+e.message}}}).call(this)}).call(this,e(\"_process\"))},{\"./common\":5,_process:12}],5:[function(e,t){t.exports=function(t){function r(e){function t(...e){if(!t.enabled)return;const a=t,o=+new Date,i=o-(n||o);a.diff=i,a.prev=n,a.curr=o,n=o,e[0]=r.coerce(e[0]),\"string\"!=typeof e[0]&&e.unshift(\"%O\");let d=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,(t,n)=>{if(\"%%\"===t)return\"%\";d++;const o=r.formatters[n];if(\"function\"==typeof o){const n=e[d];t=o.call(a,n),e.splice(d,1),d--}return t}),r.formatArgs.call(a,e);const s=a.log||r.log;s.apply(a,e)}let n,o=null;return t.namespace=e,t.useColors=r.useColors(),t.color=r.selectColor(e),t.extend=a,t.destroy=r.destroy,Object.defineProperty(t,\"enabled\",{enumerable:!0,configurable:!1,get:()=>null===o?r.enabled(e):o,set:e=>{o=e}}),\"function\"==typeof r.init&&r.init(t),t}function a(e,t){const n=r(this.namespace+(\"undefined\"==typeof t?\":\":t)+e);return n.log=this.log,n}function o(e){return e.toString().substring(2,e.toString().length-2).replace(/\\.\\*\\?$/,\"*\")}return r.debug=r,r.default=r,r.coerce=function(e){return e instanceof Error?e.stack||e.message:e},r.disable=function(){const e=[...r.names.map(o),...r.skips.map(o).map(e=>\"-\"+e)].join(\",\");return r.enable(\"\"),e},r.enable=function(e){r.save(e),r.names=[],r.skips=[];let t;const n=(\"string\"==typeof e?e:\"\").split(/[\\s,]+/),a=n.length;for(t=0;t<a;t++)n[t]&&(e=n[t].replace(/\\*/g,\".*?\"),\"-\"===e[0]?r.skips.push(new RegExp(\"^\"+e.substr(1)+\"$\")):r.names.push(new RegExp(\"^\"+e+\"$\")))},r.enabled=function(e){if(\"*\"===e[e.length-1])return!0;let t,n;for(t=0,n=r.skips.length;t<n;t++)if(r.skips[t].test(e))return!1;for(t=0,n=r.names.length;t<n;t++)if(r.names[t].test(e))return!0;return!1},r.humanize=e(\"ms\"),r.destroy=function(){console.warn(\"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.\")},Object.keys(t).forEach(e=>{r[e]=t[e]}),r.names=[],r.skips=[],r.formatters={},r.selectColor=function(e){let t=0;for(let n=0;n<e.length;n++)t=(t<<5)-t+e.charCodeAt(n),t|=0;return r.colors[n(t)%r.colors.length]},r.enable(r.load()),r}},{ms:11}],6:[function(e,t){'use strict';function n(e,t){for(const n in t)Object.defineProperty(e,n,{value:t[n],enumerable:!0,configurable:!0});return e}t.exports=function(e,t,r){if(!e||\"string\"==typeof e)throw new TypeError(\"Please pass an Error to err-code\");r||(r={}),\"object\"==typeof t&&(r=t,t=\"\"),t&&(r.code=t);try{return n(e,r)}catch(t){r.message=e.message,r.stack=e.stack;const a=function(){};a.prototype=Object.create(Object.getPrototypeOf(e));const o=n(new a,r);return o}}},{}],7:[function(e,t){'use strict';function n(e){console&&console.warn&&console.warn(e)}function r(){r.init.call(this)}function a(e){if(\"function\"!=typeof e)throw new TypeError(\"The \\\"listener\\\" argument must be of type Function. Received type \"+typeof e)}function o(e){return void 0===e._maxListeners?r.defaultMaxListeners:e._maxListeners}function i(e,t,r,i){var d,s,l;if(a(r),s=e._events,void 0===s?(s=e._events=Object.create(null),e._eventsCount=0):(void 0!==s.newListener&&(e.emit(\"newListener\",t,r.listener?r.listener:r),s=e._events),l=s[t]),void 0===l)l=s[t]=r,++e._eventsCount;else if(\"function\"==typeof l?l=s[t]=i?[r,l]:[l,r]:i?l.unshift(r):l.push(r),d=o(e),0<d&&l.length>d&&!l.warned){l.warned=!0;var c=new Error(\"Possible EventEmitter memory leak detected. \"+l.length+\" \"+(t+\" listeners added. Use emitter.setMaxListeners() to increase limit\"));c.name=\"MaxListenersExceededWarning\",c.emitter=e,c.type=t,c.count=l.length,n(c)}return e}function d(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function s(e,t,n){var r={fired:!1,wrapFn:void 0,target:e,type:t,listener:n},a=d.bind(r);return a.listener=n,r.wrapFn=a,a}function l(e,t,n){var r=e._events;if(r===void 0)return[];var a=r[t];return void 0===a?[]:\"function\"==typeof a?n?[a.listener||a]:[a]:n?f(a):u(a,a.length)}function c(e){var t=this._events;if(t!==void 0){var n=t[e];if(\"function\"==typeof n)return 1;if(void 0!==n)return n.length}return 0}function u(e,t){for(var n=Array(t),r=0;r<t;++r)n[r]=e[r];return n}function p(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}function f(e){for(var t=Array(e.length),n=0;n<t.length;++n)t[n]=e[n].listener||e[n];return t}function g(e,t,n){\"function\"==typeof e.on&&_(e,\"error\",t,n)}function _(e,t,n,r){if(\"function\"==typeof e.on)r.once?e.once(t,n):e.on(t,n);else if(\"function\"==typeof e.addEventListener)e.addEventListener(t,function a(o){r.once&&e.removeEventListener(t,a),n(o)});else throw new TypeError(\"The \\\"emitter\\\" argument must be of type EventEmitter. Received type \"+typeof e)}var h,m=\"object\"==typeof Reflect?Reflect:null,b=m&&\"function\"==typeof m.apply?m.apply:function(e,t,n){return Function.prototype.apply.call(e,t,n)};h=m&&\"function\"==typeof m.ownKeys?m.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var y=Number.isNaN||function(e){return e!==e};t.exports=r,t.exports.once=function(e,t){return new Promise(function(n,r){function a(n){e.removeListener(t,o),r(n)}function o(){\"function\"==typeof e.removeListener&&e.removeListener(\"error\",a),n([].slice.call(arguments))}_(e,t,o,{once:!0}),\"error\"!==t&&g(e,a,{once:!0})})},r.EventEmitter=r,r.prototype._events=void 0,r.prototype._eventsCount=0,r.prototype._maxListeners=void 0;var C=10;Object.defineProperty(r,\"defaultMaxListeners\",{enumerable:!0,get:function(){return C},set:function(e){if(\"number\"!=typeof e||0>e||y(e))throw new RangeError(\"The value of \\\"defaultMaxListeners\\\" is out of range. It must be a non-negative number. Received \"+e+\".\");C=e}}),r.init=function(){(this._events===void 0||this._events===Object.getPrototypeOf(this)._events)&&(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},r.prototype.setMaxListeners=function(e){if(\"number\"!=typeof e||0>e||y(e))throw new RangeError(\"The value of \\\"n\\\" is out of range. It must be a non-negative number. Received \"+e+\".\");return this._maxListeners=e,this},r.prototype.getMaxListeners=function(){return o(this)},r.prototype.emit=function(e){for(var t=[],n=1;n<arguments.length;n++)t.push(arguments[n]);var r=\"error\"===e,a=this._events;if(a!==void 0)r=r&&a.error===void 0;else if(!r)return!1;if(r){var o;if(0<t.length&&(o=t[0]),o instanceof Error)throw o;var d=new Error(\"Unhandled error.\"+(o?\" (\"+o.message+\")\":\"\"));throw d.context=o,d}var s=a[e];if(s===void 0)return!1;if(\"function\"==typeof s)b(s,this,t);else for(var l=s.length,c=u(s,l),n=0;n<l;++n)b(c[n],this,t);return!0},r.prototype.addListener=function(e,t){return i(this,e,t,!1)},r.prototype.on=r.prototype.addListener,r.prototype.prependListener=function(e,t){return i(this,e,t,!0)},r.prototype.once=function(e,t){return a(t),this.on(e,s(this,e,t)),this},r.prototype.prependOnceListener=function(e,t){return a(t),this.prependListener(e,s(this,e,t)),this},r.prototype.removeListener=function(e,t){var n,r,o,d,s;if(a(t),r=this._events,void 0===r)return this;if(n=r[e],void 0===n)return this;if(n===t||n.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete r[e],r.removeListener&&this.emit(\"removeListener\",e,n.listener||t));else if(\"function\"!=typeof n){for(o=-1,d=n.length-1;0<=d;d--)if(n[d]===t||n[d].listener===t){s=n[d].listener,o=d;break}if(0>o)return this;0===o?n.shift():p(n,o),1===n.length&&(r[e]=n[0]),void 0!==r.removeListener&&this.emit(\"removeListener\",e,s||t)}return this},r.prototype.off=r.prototype.removeListener,r.prototype.removeAllListeners=function(e){var t,n,r;if(n=this._events,void 0===n)return this;if(void 0===n.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==n[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete n[e]),this;if(0===arguments.length){var a,o=Object.keys(n);for(r=0;r<o.length;++r)a=o[r],\"removeListener\"!==a&&this.removeAllListeners(a);return this.removeAllListeners(\"removeListener\"),this._events=Object.create(null),this._eventsCount=0,this}if(t=n[e],\"function\"==typeof t)this.removeListener(e,t);else if(void 0!==t)for(r=t.length-1;0<=r;r--)this.removeListener(e,t[r]);return this},r.prototype.listeners=function(e){return l(this,e,!0)},r.prototype.rawListeners=function(e){return l(this,e,!1)},r.listenerCount=function(e,t){return\"function\"==typeof e.listenerCount?e.listenerCount(t):c.call(e,t)},r.prototype.listenerCount=c,r.prototype.eventNames=function(){return 0<this._eventsCount?h(this._events):[]}},{}],8:[function(e,t){t.exports=function(){if(\"undefined\"==typeof globalThis)return null;var e={RTCPeerConnection:globalThis.RTCPeerConnection||globalThis.mozRTCPeerConnection||globalThis.webkitRTCPeerConnection,RTCSessionDescription:globalThis.RTCSessionDescription||globalThis.mozRTCSessionDescription||globalThis.webkitRTCSessionDescription,RTCIceCandidate:globalThis.RTCIceCandidate||globalThis.mozRTCIceCandidate||globalThis.webkitRTCIceCandidate};return e.RTCPeerConnection?e:null}},{}],9:[function(e,a,o){/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */o.read=function(t,n,a,o,l){var c,u,p=8*l-o-1,f=(1<<p)-1,g=f>>1,_=-7,h=a?l-1:0,b=a?-1:1,d=t[n+h];for(h+=b,c=d&(1<<-_)-1,d>>=-_,_+=p;0<_;c=256*c+t[n+h],h+=b,_-=8);for(u=c&(1<<-_)-1,c>>=-_,_+=o;0<_;u=256*u+t[n+h],h+=b,_-=8);if(0===c)c=1-g;else{if(c===f)return u?NaN:(d?-1:1)*(1/0);u+=r(2,o),c-=g}return(d?-1:1)*u*r(2,c-o)},o.write=function(a,o,l,u,p,f){var h,b,y,g=Math.LN2,_=Math.log,C=8*f-p-1,R=(1<<C)-1,E=R>>1,w=23===p?r(2,-24)-r(2,-77):0,S=u?0:f-1,T=u?1:-1,d=0>o||0===o&&0>1/o?1:0;for(o=n(o),isNaN(o)||o===1/0?(b=isNaN(o)?1:0,h=R):(h=t(_(o)/g),1>o*(y=r(2,-h))&&(h--,y*=2),o+=1<=h+E?w/y:w*r(2,1-E),2<=o*y&&(h++,y/=2),h+E>=R?(b=0,h=R):1<=h+E?(b=(o*y-1)*r(2,p),h+=E):(b=o*r(2,E-1)*r(2,p),h=0));8<=p;a[l+S]=255&b,S+=T,b/=256,p-=8);for(h=h<<p|b,C+=p;0<C;a[l+S]=255&h,S+=T,h/=256,C-=8);a[l+S-T]|=128*d}},{}],10:[function(e,t){t.exports=\"function\"==typeof Object.create?function(e,t){t&&(e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}))}:function(e,t){if(t){e.super_=t;var n=function(){};n.prototype=t.prototype,e.prototype=new n,e.prototype.constructor=e}}},{}],11:[function(e,t){var r=Math.round;function a(e){if(e+=\"\",!(100<e.length)){var t=/^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(t){var r=parseFloat(t[1]),n=(t[2]||\"ms\").toLowerCase();return\"years\"===n||\"year\"===n||\"yrs\"===n||\"yr\"===n||\"y\"===n?31557600000*r:\"weeks\"===n||\"week\"===n||\"w\"===n?604800000*r:\"days\"===n||\"day\"===n||\"d\"===n?86400000*r:\"hours\"===n||\"hour\"===n||\"hrs\"===n||\"hr\"===n||\"h\"===n?3600000*r:\"minutes\"===n||\"minute\"===n||\"mins\"===n||\"min\"===n||\"m\"===n?60000*r:\"seconds\"===n||\"second\"===n||\"secs\"===n||\"sec\"===n||\"s\"===n?1000*r:\"milliseconds\"===n||\"millisecond\"===n||\"msecs\"===n||\"msec\"===n||\"ms\"===n?r:void 0}}}function o(e){var t=n(e);return 86400000<=t?r(e/86400000)+\"d\":3600000<=t?r(e/3600000)+\"h\":60000<=t?r(e/60000)+\"m\":1000<=t?r(e/1000)+\"s\":e+\"ms\"}function i(e){var t=n(e);return 86400000<=t?s(e,t,86400000,\"day\"):3600000<=t?s(e,t,3600000,\"hour\"):60000<=t?s(e,t,60000,\"minute\"):1000<=t?s(e,t,1000,\"second\"):e+\" ms\"}function s(e,t,a,n){return r(e/a)+\" \"+n+(t>=1.5*a?\"s\":\"\")}var l=24*(60*60000);t.exports=function(e,t){t=t||{};var n=typeof e;if(\"string\"==n&&0<e.length)return a(e);if(\"number\"===n&&isFinite(e))return t.long?i(e):o(e);throw new Error(\"val is not a non-empty string or a valid number. val=\"+JSON.stringify(e))}},{}],12:[function(e,t){function n(){throw new Error(\"setTimeout has not been defined\")}function r(){throw new Error(\"clearTimeout has not been defined\")}function a(t){if(c===setTimeout)return setTimeout(t,0);if((c===n||!c)&&setTimeout)return c=setTimeout,setTimeout(t,0);try{return c(t,0)}catch(n){try{return c.call(null,t,0)}catch(n){return c.call(this,t,0)}}}function o(t){if(u===clearTimeout)return clearTimeout(t);if((u===r||!u)&&clearTimeout)return u=clearTimeout,clearTimeout(t);try{return u(t)}catch(n){try{return u.call(null,t)}catch(n){return u.call(this,t)}}}function i(){_&&f&&(_=!1,f.length?g=f.concat(g):h=-1,g.length&&d())}function d(){if(!_){var e=a(i);_=!0;for(var t=g.length;t;){for(f=g,g=[];++h<t;)f&&f[h].run();h=-1,t=g.length}f=null,_=!1,o(e)}}function s(e,t){this.fun=e,this.array=t}function l(){}var c,u,p=t.exports={};(function(){try{c=\"function\"==typeof setTimeout?setTimeout:n}catch(t){c=n}try{u=\"function\"==typeof clearTimeout?clearTimeout:r}catch(t){u=r}})();var f,g=[],_=!1,h=-1;p.nextTick=function(e){var t=Array(arguments.length-1);if(1<arguments.length)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];g.push(new s(e,t)),1!==g.length||_||a(d)},s.prototype.run=function(){this.fun.apply(null,this.array)},p.title=\"browser\",p.browser=!0,p.env={},p.argv=[],p.version=\"\",p.versions={},p.on=l,p.addListener=l,p.once=l,p.off=l,p.removeListener=l,p.removeAllListeners=l,p.emit=l,p.prependListener=l,p.prependOnceListener=l,p.listeners=function(){return[]},p.binding=function(){throw new Error(\"process.binding is not supported\")},p.cwd=function(){return\"/\"},p.chdir=function(){throw new Error(\"process.chdir is not supported\")},p.umask=function(){return 0}},{}],13:[function(e,t){(function(e){(function(){/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */let n;t.exports=\"function\"==typeof queueMicrotask?queueMicrotask.bind(\"undefined\"==typeof window?e:window):e=>(n||(n=Promise.resolve())).then(e).catch(e=>setTimeout(()=>{throw e},0))}).call(this)}).call(this,\"undefined\"==typeof global?\"undefined\"==typeof self?\"undefined\"==typeof window?{}:window:self:global)},{}],14:[function(e,t){(function(n,r){(function(){'use strict';var a=e(\"safe-buffer\").Buffer,o=r.crypto||r.msCrypto;t.exports=o&&o.getRandomValues?function(e,t){if(e>4294967295)throw new RangeError(\"requested too many random bytes\");var r=a.allocUnsafe(e);if(0<e)if(65536<e)for(var i=0;i<e;i+=65536)o.getRandomValues(r.slice(i,i+65536));else o.getRandomValues(r);return\"function\"==typeof t?n.nextTick(function(){t(null,r)}):r}:function(){throw new Error(\"Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11\")}}).call(this)}).call(this,e(\"_process\"),\"undefined\"==typeof global?\"undefined\"==typeof self?\"undefined\"==typeof window?{}:window:self:global)},{_process:12,\"safe-buffer\":30}],15:[function(e,t){'use strict';function n(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}function r(e,t,r){function a(e,n,r){return\"string\"==typeof t?t:t(e,n,r)}r||(r=Error);var o=function(e){function t(t,n,r){return e.call(this,a(t,n,r))||this}return n(t,e),t}(r);o.prototype.name=r.name,o.prototype.code=e,s[e]=o}function a(e,t){if(Array.isArray(e)){var n=e.length;return e=e.map(function(e){return e+\"\"}),2<n?\"one of \".concat(t,\" \").concat(e.slice(0,n-1).join(\", \"),\", or \")+e[n-1]:2===n?\"one of \".concat(t,\" \").concat(e[0],\" or \").concat(e[1]):\"of \".concat(t,\" \").concat(e[0])}return\"of \".concat(t,\" \").concat(e+\"\")}function o(e,t,n){return e.substr(!n||0>n?0:+n,t.length)===t}function i(e,t,n){return(void 0===n||n>e.length)&&(n=e.length),e.substring(n-t.length,n)===t}function d(e,t,n){return\"number\"!=typeof n&&(n=0),!(n+t.length>e.length)&&-1!==e.indexOf(t,n)}var s={};r(\"ERR_INVALID_OPT_VALUE\",function(e,t){return\"The value \\\"\"+t+\"\\\" is invalid for option \\\"\"+e+\"\\\"\"},TypeError),r(\"ERR_INVALID_ARG_TYPE\",function(e,t,n){var r;\"string\"==typeof t&&o(t,\"not \")?(r=\"must not be\",t=t.replace(/^not /,\"\")):r=\"must be\";var s;if(i(e,\" argument\"))s=\"The \".concat(e,\" \").concat(r,\" \").concat(a(t,\"type\"));else{var l=d(e,\".\")?\"property\":\"argument\";s=\"The \\\"\".concat(e,\"\\\" \").concat(l,\" \").concat(r,\" \").concat(a(t,\"type\"))}return s+=\". Received type \".concat(typeof n),s},TypeError),r(\"ERR_STREAM_PUSH_AFTER_EOF\",\"stream.push() after EOF\"),r(\"ERR_METHOD_NOT_IMPLEMENTED\",function(e){return\"The \"+e+\" method is not implemented\"}),r(\"ERR_STREAM_PREMATURE_CLOSE\",\"Premature close\"),r(\"ERR_STREAM_DESTROYED\",function(e){return\"Cannot call \"+e+\" after a stream was destroyed\"}),r(\"ERR_MULTIPLE_CALLBACK\",\"Callback called multiple times\"),r(\"ERR_STREAM_CANNOT_PIPE\",\"Cannot pipe, not readable\"),r(\"ERR_STREAM_WRITE_AFTER_END\",\"write after end\"),r(\"ERR_STREAM_NULL_VALUES\",\"May not write null values to stream\",TypeError),r(\"ERR_UNKNOWN_ENCODING\",function(e){return\"Unknown encoding: \"+e},TypeError),r(\"ERR_STREAM_UNSHIFT_AFTER_END_EVENT\",\"stream.unshift() after end event\"),t.exports.codes=s},{}],16:[function(e,t){(function(n){(function(){'use strict';function r(e){return this instanceof r?void(d.call(this,e),s.call(this,e),this.allowHalfOpen=!0,e&&(!1===e.readable&&(this.readable=!1),!1===e.writable&&(this.writable=!1),!1===e.allowHalfOpen&&(this.allowHalfOpen=!1,this.once(\"end\",a)))):new r(e)}function a(){this._writableState.ended||n.nextTick(o,this)}function o(e){e.end()}var i=Object.keys||function(e){var t=[];for(var n in e)t.push(n);return t};t.exports=r;var d=e(\"./_stream_readable\"),s=e(\"./_stream_writable\");e(\"inherits\")(r,d);for(var l,c=i(s.prototype),u=0;u<c.length;u++)l=c[u],r.prototype[l]||(r.prototype[l]=s.prototype[l]);Object.defineProperty(r.prototype,\"writableHighWaterMark\",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),Object.defineProperty(r.prototype,\"writableBuffer\",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(r.prototype,\"writableLength\",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(r.prototype,\"destroyed\",{enumerable:!1,get:function(){return void 0!==this._readableState&&void 0!==this._writableState&&this._readableState.destroyed&&this._writableState.destroyed},set:function(e){void 0===this._readableState||void 0===this._writableState||(this._readableState.destroyed=e,this._writableState.destroyed=e)}})}).call(this)}).call(this,e(\"_process\"))},{\"./_stream_readable\":18,\"./_stream_writable\":20,_process:12,inherits:10}],17:[function(e,t){'use strict';function n(e){return this instanceof n?void r.call(this,e):new n(e)}t.exports=n;var r=e(\"./_stream_transform\");e(\"inherits\")(n,r),n.prototype._transform=function(e,t,n){n(null,e)}},{\"./_stream_transform\":19,inherits:10}],18:[function(e,t){(function(n,r){(function(){'use strict';function a(e){return P.from(e)}function o(e){return P.isBuffer(e)||e instanceof M}function i(e,t,n){return\"function\"==typeof e.prependListener?e.prependListener(t,n):void(e._events&&e._events[t]?Array.isArray(e._events[t])?e._events[t].unshift(n):e._events[t]=[n,e._events[t]]:e.on(t,n))}function d(t,n,r){A=A||e(\"./_stream_duplex\"),t=t||{},\"boolean\"!=typeof r&&(r=n instanceof A),this.objectMode=!!t.objectMode,r&&(this.objectMode=this.objectMode||!!t.readableObjectMode),this.highWaterMark=H(this,t,\"readableHighWaterMark\",r),this.buffer=new j,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.paused=!0,this.emitClose=!1!==t.emitClose,this.autoDestroy=!!t.autoDestroy,this.destroyed=!1,this.defaultEncoding=t.defaultEncoding||\"utf8\",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,t.encoding&&(!F&&(F=e(\"string_decoder/\").StringDecoder),this.decoder=new F(t.encoding),this.encoding=t.encoding)}function s(t){if(A=A||e(\"./_stream_duplex\"),!(this instanceof s))return new s(t);var n=this instanceof A;this._readableState=new d(t,this,n),this.readable=!0,t&&(\"function\"==typeof t.read&&(this._read=t.read),\"function\"==typeof t.destroy&&(this._destroy=t.destroy)),I.call(this)}function l(e,t,n,r,o){x(\"readableAddChunk\",t);var i=e._readableState;if(null===t)i.reading=!1,g(e,i);else{var d;if(o||(d=u(i,t)),d)X(e,d);else if(!(i.objectMode||t&&0<t.length))r||(i.reading=!1,m(e,i));else if(\"string\"==typeof t||i.objectMode||Object.getPrototypeOf(t)===P.prototype||(t=a(t)),r)i.endEmitted?X(e,new K):c(e,i,t,!0);else if(i.ended)X(e,new z);else{if(i.destroyed)return!1;i.reading=!1,i.decoder&&!n?(t=i.decoder.write(t),i.objectMode||0!==t.length?c(e,i,t,!1):m(e,i)):c(e,i,t,!1)}}return!i.ended&&(i.length<i.highWaterMark||0===i.length)}function c(e,t,n,r){t.flowing&&0===t.length&&!t.sync?(t.awaitDrain=0,e.emit(\"data\",n)):(t.length+=t.objectMode?1:n.length,r?t.buffer.unshift(n):t.buffer.push(n),t.needReadable&&_(e)),m(e,t)}function u(e,t){var n;return o(t)||\"string\"==typeof t||void 0===t||e.objectMode||(n=new V(\"chunk\",[\"string\",\"Buffer\",\"Uint8Array\"],t)),n}function p(e){return 1073741824<=e?e=1073741824:(e--,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,e|=e>>>16,e++),e}function f(e,t){return 0>=e||0===t.length&&t.ended?0:t.objectMode?1:e===e?(e>t.highWaterMark&&(t.highWaterMark=p(e)),e<=t.length?e:t.ended?t.length:(t.needReadable=!0,0)):t.flowing&&t.length?t.buffer.head.data.length:t.length}function g(e,t){if(x(\"onEofChunk\"),!t.ended){if(t.decoder){var n=t.decoder.end();n&&n.length&&(t.buffer.push(n),t.length+=t.objectMode?1:n.length)}t.ended=!0,t.sync?_(e):(t.needReadable=!1,!t.emittedReadable&&(t.emittedReadable=!0,h(e)))}}function _(e){var t=e._readableState;x(\"emitReadable\",t.needReadable,t.emittedReadable),t.needReadable=!1,t.emittedReadable||(x(\"emitReadable\",t.flowing),t.emittedReadable=!0,n.nextTick(h,e))}function h(e){var t=e._readableState;x(\"emitReadable_\",t.destroyed,t.length,t.ended),!t.destroyed&&(t.length||t.ended)&&(e.emit(\"readable\"),t.emittedReadable=!1),t.needReadable=!t.flowing&&!t.ended&&t.length<=t.highWaterMark,S(e)}function m(e,t){t.readingMore||(t.readingMore=!0,n.nextTick(b,e,t))}function b(e,t){for(;!t.reading&&!t.ended&&(t.length<t.highWaterMark||t.flowing&&0===t.length);){var n=t.length;if(x(\"maybeReadMore read 0\"),e.read(0),n===t.length)break}t.readingMore=!1}function y(e){return function(){var t=e._readableState;x(\"pipeOnDrain\",t.awaitDrain),t.awaitDrain&&t.awaitDrain--,0===t.awaitDrain&&D(e,\"data\")&&(t.flowing=!0,S(e))}}function C(e){var t=e._readableState;t.readableListening=0<e.listenerCount(\"readable\"),t.resumeScheduled&&!t.paused?t.flowing=!0:0<e.listenerCount(\"data\")&&e.resume()}function R(e){x(\"readable nexttick read 0\"),e.read(0)}function E(e,t){t.resumeScheduled||(t.resumeScheduled=!0,n.nextTick(w,e,t))}function w(e,t){x(\"resume\",t.reading),t.reading||e.read(0),t.resumeScheduled=!1,e.emit(\"resume\"),S(e),t.flowing&&!t.reading&&e.read(0)}function S(e){var t=e._readableState;for(x(\"flow\",t.flowing);t.flowing&&null!==e.read(););}function T(e,t){if(0===t.length)return null;var n;return t.objectMode?n=t.buffer.shift():!e||e>=t.length?(n=t.decoder?t.buffer.join(\"\"):1===t.buffer.length?t.buffer.first():t.buffer.concat(t.length),t.buffer.clear()):n=t.buffer.consume(e,t.decoder),n}function v(e){var t=e._readableState;x(\"endReadable\",t.endEmitted),t.endEmitted||(t.ended=!0,n.nextTick(k,t,e))}function k(e,t){if(x(\"endReadableNT\",e.endEmitted,e.length),!e.endEmitted&&0===e.length&&(e.endEmitted=!0,t.readable=!1,t.emit(\"end\"),e.autoDestroy)){var n=t._writableState;(!n||n.autoDestroy&&n.finished)&&t.destroy()}}function L(e,t){for(var n=0,r=e.length;n<r;n++)if(e[n]===t)return n;return-1}t.exports=s;var A;s.ReadableState=d;var x,N=e(\"events\").EventEmitter,D=function(e,t){return e.listeners(t).length},I=e(\"./internal/streams/stream\"),P=e(\"buffer\").Buffer,M=r.Uint8Array||function(){},O=e(\"util\");x=O&&O.debuglog?O.debuglog(\"stream\"):function(){};var F,B,U,j=e(\"./internal/streams/buffer_list\"),q=e(\"./internal/streams/destroy\"),W=e(\"./internal/streams/state\"),H=W.getHighWaterMark,Y=e(\"../errors\").codes,V=Y.ERR_INVALID_ARG_TYPE,z=Y.ERR_STREAM_PUSH_AFTER_EOF,G=Y.ERR_METHOD_NOT_IMPLEMENTED,K=Y.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;e(\"inherits\")(s,I);var X=q.errorOrDestroy,$=[\"error\",\"close\",\"destroy\",\"pause\",\"resume\"];Object.defineProperty(s.prototype,\"destroyed\",{enumerable:!1,get:function(){return void 0!==this._readableState&&this._readableState.destroyed},set:function(e){this._readableState&&(this._readableState.destroyed=e)}}),s.prototype.destroy=q.destroy,s.prototype._undestroy=q.undestroy,s.prototype._destroy=function(e,t){t(e)},s.prototype.push=function(e,t){var n,r=this._readableState;return r.objectMode?n=!0:\"string\"==typeof e&&(t=t||r.defaultEncoding,t!==r.encoding&&(e=P.from(e,t),t=\"\"),n=!0),l(this,e,t,!1,n)},s.prototype.unshift=function(e){return l(this,e,null,!0,!1)},s.prototype.isPaused=function(){return!1===this._readableState.flowing},s.prototype.setEncoding=function(t){F||(F=e(\"string_decoder/\").StringDecoder);var n=new F(t);this._readableState.decoder=n,this._readableState.encoding=this._readableState.decoder.encoding;for(var r=this._readableState.buffer.head,a=\"\";null!==r;)a+=n.write(r.data),r=r.next;return this._readableState.buffer.clear(),\"\"!==a&&this._readableState.buffer.push(a),this._readableState.length=a.length,this};s.prototype.read=function(e){x(\"read\",e),e=parseInt(e,10);var t=this._readableState,r=e;if(0!==e&&(t.emittedReadable=!1),0===e&&t.needReadable&&((0===t.highWaterMark?0<t.length:t.length>=t.highWaterMark)||t.ended))return x(\"read: emitReadable\",t.length,t.ended),0===t.length&&t.ended?v(this):_(this),null;if(e=f(e,t),0===e&&t.ended)return 0===t.length&&v(this),null;var a=t.needReadable;x(\"need readable\",a),(0===t.length||t.length-e<t.highWaterMark)&&(a=!0,x(\"length less than watermark\",a)),t.ended||t.reading?(a=!1,x(\"reading or ended\",a)):a&&(x(\"do read\"),t.reading=!0,t.sync=!0,0===t.length&&(t.needReadable=!0),this._read(t.highWaterMark),t.sync=!1,!t.reading&&(e=f(r,t)));var o;return o=0<e?T(e,t):null,null===o?(t.needReadable=t.length<=t.highWaterMark,e=0):(t.length-=e,t.awaitDrain=0),0===t.length&&(!t.ended&&(t.needReadable=!0),r!==e&&t.ended&&v(this)),null!==o&&this.emit(\"data\",o),o},s.prototype._read=function(){X(this,new G(\"_read()\"))},s.prototype.pipe=function(e,t){function r(e,t){x(\"onunpipe\"),e===p&&t&&!1===t.hasUnpiped&&(t.hasUnpiped=!0,o())}function a(){x(\"onend\"),e.end()}function o(){x(\"cleanup\"),e.removeListener(\"close\",l),e.removeListener(\"finish\",c),e.removeListener(\"drain\",h),e.removeListener(\"error\",s),e.removeListener(\"unpipe\",r),p.removeListener(\"end\",a),p.removeListener(\"end\",u),p.removeListener(\"data\",d),m=!0,f.awaitDrain&&(!e._writableState||e._writableState.needDrain)&&h()}function d(t){x(\"ondata\");var n=e.write(t);x(\"dest.write\",n),!1===n&&((1===f.pipesCount&&f.pipes===e||1<f.pipesCount&&-1!==L(f.pipes,e))&&!m&&(x(\"false write response, pause\",f.awaitDrain),f.awaitDrain++),p.pause())}function s(t){x(\"onerror\",t),u(),e.removeListener(\"error\",s),0===D(e,\"error\")&&X(e,t)}function l(){e.removeListener(\"finish\",c),u()}function c(){x(\"onfinish\"),e.removeListener(\"close\",l),u()}function u(){x(\"unpipe\"),p.unpipe(e)}var p=this,f=this._readableState;switch(f.pipesCount){case 0:f.pipes=e;break;case 1:f.pipes=[f.pipes,e];break;default:f.pipes.push(e);}f.pipesCount+=1,x(\"pipe count=%d opts=%j\",f.pipesCount,t);var g=(!t||!1!==t.end)&&e!==n.stdout&&e!==n.stderr,_=g?a:u;f.endEmitted?n.nextTick(_):p.once(\"end\",_),e.on(\"unpipe\",r);var h=y(p);e.on(\"drain\",h);var m=!1;return p.on(\"data\",d),i(e,\"error\",s),e.once(\"close\",l),e.once(\"finish\",c),e.emit(\"pipe\",p),f.flowing||(x(\"pipe resume\"),p.resume()),e},s.prototype.unpipe=function(e){var t=this._readableState,n={hasUnpiped:!1};if(0===t.pipesCount)return this;if(1===t.pipesCount)return e&&e!==t.pipes?this:(e||(e=t.pipes),t.pipes=null,t.pipesCount=0,t.flowing=!1,e&&e.emit(\"unpipe\",this,n),this);if(!e){var r=t.pipes,a=t.pipesCount;t.pipes=null,t.pipesCount=0,t.flowing=!1;for(var o=0;o<a;o++)r[o].emit(\"unpipe\",this,{hasUnpiped:!1});return this}var d=L(t.pipes,e);return-1===d?this:(t.pipes.splice(d,1),t.pipesCount-=1,1===t.pipesCount&&(t.pipes=t.pipes[0]),e.emit(\"unpipe\",this,n),this)},s.prototype.on=function(e,t){var r=I.prototype.on.call(this,e,t),a=this._readableState;return\"data\"===e?(a.readableListening=0<this.listenerCount(\"readable\"),!1!==a.flowing&&this.resume()):\"readable\"==e&&!a.endEmitted&&!a.readableListening&&(a.readableListening=a.needReadable=!0,a.flowing=!1,a.emittedReadable=!1,x(\"on readable\",a.length,a.reading),a.length?_(this):!a.reading&&n.nextTick(R,this)),r},s.prototype.addListener=s.prototype.on,s.prototype.removeListener=function(e,t){var r=I.prototype.removeListener.call(this,e,t);return\"readable\"===e&&n.nextTick(C,this),r},s.prototype.removeAllListeners=function(e){var t=I.prototype.removeAllListeners.apply(this,arguments);return(\"readable\"===e||void 0===e)&&n.nextTick(C,this),t},s.prototype.resume=function(){var e=this._readableState;return e.flowing||(x(\"resume\"),e.flowing=!e.readableListening,E(this,e)),e.paused=!1,this},s.prototype.pause=function(){return x(\"call pause flowing=%j\",this._readableState.flowing),!1!==this._readableState.flowing&&(x(\"pause\"),this._readableState.flowing=!1,this.emit(\"pause\")),this._readableState.paused=!0,this},s.prototype.wrap=function(e){var t=this,r=this._readableState,a=!1;for(var o in e.on(\"end\",function(){if(x(\"wrapped end\"),r.decoder&&!r.ended){var e=r.decoder.end();e&&e.length&&t.push(e)}t.push(null)}),e.on(\"data\",function(n){if((x(\"wrapped data\"),r.decoder&&(n=r.decoder.write(n)),!(r.objectMode&&(null===n||void 0===n)))&&(r.objectMode||n&&n.length)){var o=t.push(n);o||(a=!0,e.pause())}}),e)void 0===this[o]&&\"function\"==typeof e[o]&&(this[o]=function(t){return function(){return e[t].apply(e,arguments)}}(o));for(var i=0;i<$.length;i++)e.on($[i],this.emit.bind(this,$[i]));return this._read=function(t){x(\"wrapped _read\",t),a&&(a=!1,e.resume())},this},\"function\"==typeof Symbol&&(s.prototype[Symbol.asyncIterator]=function(){return void 0===B&&(B=e(\"./internal/streams/async_iterator\")),B(this)}),Object.defineProperty(s.prototype,\"readableHighWaterMark\",{enumerable:!1,get:function(){return this._readableState.highWaterMark}}),Object.defineProperty(s.prototype,\"readableBuffer\",{enumerable:!1,get:function(){return this._readableState&&this._readableState.buffer}}),Object.defineProperty(s.prototype,\"readableFlowing\",{enumerable:!1,get:function(){return this._readableState.flowing},set:function(e){this._readableState&&(this._readableState.flowing=e)}}),s._fromList=T,Object.defineProperty(s.prototype,\"readableLength\",{enumerable:!1,get:function(){return this._readableState.length}}),\"function\"==typeof Symbol&&(s.from=function(t,n){return void 0===U&&(U=e(\"./internal/streams/from\")),U(s,t,n)})}).call(this)}).call(this,e(\"_process\"),\"undefined\"==typeof global?\"undefined\"==typeof self?\"undefined\"==typeof window?{}:window:self:global)},{\"../errors\":15,\"./_stream_duplex\":16,\"./internal/streams/async_iterator\":21,\"./internal/streams/buffer_list\":22,\"./internal/streams/destroy\":23,\"./internal/streams/from\":25,\"./internal/streams/state\":27,\"./internal/streams/stream\":28,_process:12,buffer:3,events:7,inherits:10,\"string_decoder/\":31,util:2}],19:[function(e,t){'use strict';function n(e,t){var n=this._transformState;n.transforming=!1;var r=n.writecb;if(null===r)return this.emit(\"error\",new s);n.writechunk=null,n.writecb=null,null!=t&&this.push(t),r(e);var a=this._readableState;a.reading=!1,(a.needReadable||a.length<a.highWaterMark)&&this._read(a.highWaterMark)}function r(e){return this instanceof r?void(u.call(this,e),this._transformState={afterTransform:n.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,e&&(\"function\"==typeof e.transform&&(this._transform=e.transform),\"function\"==typeof e.flush&&(this._flush=e.flush)),this.on(\"prefinish\",a)):new r(e)}function a(){var e=this;\"function\"!=typeof this._flush||this._readableState.destroyed?o(this,null,null):this._flush(function(t,n){o(e,t,n)})}function o(e,t,n){if(t)return e.emit(\"error\",t);if(null!=n&&e.push(n),e._writableState.length)throw new c;if(e._transformState.transforming)throw new l;return e.push(null)}t.exports=r;var i=e(\"../errors\").codes,d=i.ERR_METHOD_NOT_IMPLEMENTED,s=i.ERR_MULTIPLE_CALLBACK,l=i.ERR_TRANSFORM_ALREADY_TRANSFORMING,c=i.ERR_TRANSFORM_WITH_LENGTH_0,u=e(\"./_stream_duplex\");e(\"inherits\")(r,u),r.prototype.push=function(e,t){return this._transformState.needTransform=!1,u.prototype.push.call(this,e,t)},r.prototype._transform=function(e,t,n){n(new d(\"_transform()\"))},r.prototype._write=function(e,t,n){var r=this._transformState;if(r.writecb=n,r.writechunk=e,r.writeencoding=t,!r.transforming){var a=this._readableState;(r.needTransform||a.needReadable||a.length<a.highWaterMark)&&this._read(a.highWaterMark)}},r.prototype._read=function(){var e=this._transformState;null===e.writechunk||e.transforming?e.needTransform=!0:(e.transforming=!0,this._transform(e.writechunk,e.writeencoding,e.afterTransform))},r.prototype._destroy=function(e,t){u.prototype._destroy.call(this,e,function(e){t(e)})}},{\"../errors\":15,\"./_stream_duplex\":16,inherits:10}],20:[function(e,t){(function(n,r){(function(){'use strict';function a(e){var t=this;this.next=null,this.entry=null,this.finish=function(){v(t,e)}}function o(e){return x.from(e)}function i(e){return x.isBuffer(e)||e instanceof N}function d(){}function s(t,n,r){k=k||e(\"./_stream_duplex\"),t=t||{},\"boolean\"!=typeof r&&(r=n instanceof k),this.objectMode=!!t.objectMode,r&&(this.objectMode=this.objectMode||!!t.writableObjectMode),this.highWaterMark=P(this,t,\"writableHighWaterMark\",r),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var o=!1===t.decodeStrings;this.decodeStrings=!o,this.defaultEncoding=t.defaultEncoding||\"utf8\",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(e){m(n,e)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.emitClose=!1!==t.emitClose,this.autoDestroy=!!t.autoDestroy,this.bufferedRequestCount=0,this.corkedRequestsFree=new a(this)}function l(t){k=k||e(\"./_stream_duplex\");var n=this instanceof k;return n||V.call(l,this)?void(this._writableState=new s(t,this,n),this.writable=!0,t&&(\"function\"==typeof t.write&&(this._write=t.write),\"function\"==typeof t.writev&&(this._writev=t.writev),\"function\"==typeof t.destroy&&(this._destroy=t.destroy),\"function\"==typeof t.final&&(this._final=t.final)),A.call(this)):new l(t)}function c(e,t){var r=new W;Y(e,r),n.nextTick(t,r)}function u(e,t,r,a){var o;return null===r?o=new q:\"string\"!=typeof r&&!t.objectMode&&(o=new O(\"chunk\",[\"string\",\"Buffer\"],r)),!o||(Y(e,o),n.nextTick(a,o),!1)}function p(e,t,n){return e.objectMode||!1===e.decodeStrings||\"string\"!=typeof t||(t=x.from(t,n)),t}function f(e,t,n,r,a,o){if(!n){var i=p(t,r,a);r!==i&&(n=!0,a=\"buffer\",r=i)}var d=t.objectMode?1:r.length;t.length+=d;var s=t.length<t.highWaterMark;if(s||(t.needDrain=!0),t.writing||t.corked){var l=t.lastBufferedRequest;t.lastBufferedRequest={chunk:r,encoding:a,isBuf:n,callback:o,next:null},l?l.next=t.lastBufferedRequest:t.bufferedRequest=t.lastBufferedRequest,t.bufferedRequestCount+=1}else g(e,t,!1,d,r,a,o);return s}function g(e,t,n,r,a,o,i){t.writelen=r,t.writecb=i,t.writing=!0,t.sync=!0,t.destroyed?t.onwrite(new j(\"write\")):n?e._writev(a,t.onwrite):e._write(a,o,t.onwrite),t.sync=!1}function _(e,t,r,a,o){--t.pendingcb,r?(n.nextTick(o,a),n.nextTick(S,e,t),e._writableState.errorEmitted=!0,Y(e,a)):(o(a),e._writableState.errorEmitted=!0,Y(e,a),S(e,t))}function h(e){e.writing=!1,e.writecb=null,e.length-=e.writelen,e.writelen=0}function m(e,t){var r=e._writableState,a=r.sync,o=r.writecb;if(\"function\"!=typeof o)throw new B;if(h(r),t)_(e,r,a,t,o);else{var i=R(r)||e.destroyed;i||r.corked||r.bufferProcessing||!r.bufferedRequest||C(e,r),a?n.nextTick(b,e,r,i,o):b(e,r,i,o)}}function b(e,t,n,r){n||y(e,t),t.pendingcb--,r(),S(e,t)}function y(e,t){0===t.length&&t.needDrain&&(t.needDrain=!1,e.emit(\"drain\"))}function C(e,t){t.bufferProcessing=!0;var n=t.bufferedRequest;if(e._writev&&n&&n.next){var r=t.bufferedRequestCount,o=Array(r),i=t.corkedRequestsFree;i.entry=n;for(var d=0,s=!0;n;)o[d]=n,n.isBuf||(s=!1),n=n.next,d+=1;o.allBuffers=s,g(e,t,!0,t.length,o,\"\",i.finish),t.pendingcb++,t.lastBufferedRequest=null,i.next?(t.corkedRequestsFree=i.next,i.next=null):t.corkedRequestsFree=new a(t),t.bufferedRequestCount=0}else{for(;n;){var l=n.chunk,c=n.encoding,u=n.callback,p=t.objectMode?1:l.length;if(g(e,t,!1,p,l,c,u),n=n.next,t.bufferedRequestCount--,t.writing)break}null===n&&(t.lastBufferedRequest=null)}t.bufferedRequest=n,t.bufferProcessing=!1}function R(e){return e.ending&&0===e.length&&null===e.bufferedRequest&&!e.finished&&!e.writing}function E(e,t){e._final(function(n){t.pendingcb--,n&&Y(e,n),t.prefinished=!0,e.emit(\"prefinish\"),S(e,t)})}function w(e,t){t.prefinished||t.finalCalled||(\"function\"!=typeof e._final||t.destroyed?(t.prefinished=!0,e.emit(\"prefinish\")):(t.pendingcb++,t.finalCalled=!0,n.nextTick(E,e,t)))}function S(e,t){var n=R(t);if(n&&(w(e,t),0===t.pendingcb&&(t.finished=!0,e.emit(\"finish\"),t.autoDestroy))){var r=e._readableState;(!r||r.autoDestroy&&r.endEmitted)&&e.destroy()}return n}function T(e,t,r){t.ending=!0,S(e,t),r&&(t.finished?n.nextTick(r):e.once(\"finish\",r)),t.ended=!0,e.writable=!1}function v(e,t,n){var r=e.entry;for(e.entry=null;r;){var a=r.callback;t.pendingcb--,a(n),r=r.next}t.corkedRequestsFree.next=e}t.exports=l;var k;l.WritableState=s;var L={deprecate:e(\"util-deprecate\")},A=e(\"./internal/streams/stream\"),x=e(\"buffer\").Buffer,N=r.Uint8Array||function(){},D=e(\"./internal/streams/destroy\"),I=e(\"./internal/streams/state\"),P=I.getHighWaterMark,M=e(\"../errors\").codes,O=M.ERR_INVALID_ARG_TYPE,F=M.ERR_METHOD_NOT_IMPLEMENTED,B=M.ERR_MULTIPLE_CALLBACK,U=M.ERR_STREAM_CANNOT_PIPE,j=M.ERR_STREAM_DESTROYED,q=M.ERR_STREAM_NULL_VALUES,W=M.ERR_STREAM_WRITE_AFTER_END,H=M.ERR_UNKNOWN_ENCODING,Y=D.errorOrDestroy;e(\"inherits\")(l,A),s.prototype.getBuffer=function(){for(var e=this.bufferedRequest,t=[];e;)t.push(e),e=e.next;return t},function(){try{Object.defineProperty(s.prototype,\"buffer\",{get:L.deprecate(function(){return this.getBuffer()},\"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.\",\"DEP0003\")})}catch(e){}}();var V;\"function\"==typeof Symbol&&Symbol.hasInstance&&\"function\"==typeof Function.prototype[Symbol.hasInstance]?(V=Function.prototype[Symbol.hasInstance],Object.defineProperty(l,Symbol.hasInstance,{value:function(e){return!!V.call(this,e)||!(this!==l)&&e&&e._writableState instanceof s}})):V=function(e){return e instanceof this},l.prototype.pipe=function(){Y(this,new U)},l.prototype.write=function(e,t,n){var r=this._writableState,a=!1,s=!r.objectMode&&i(e);return s&&!x.isBuffer(e)&&(e=o(e)),\"function\"==typeof t&&(n=t,t=null),s?t=\"buffer\":!t&&(t=r.defaultEncoding),\"function\"!=typeof n&&(n=d),r.ending?c(this,n):(s||u(this,r,e,n))&&(r.pendingcb++,a=f(this,r,s,e,t,n)),a},l.prototype.cork=function(){this._writableState.corked++},l.prototype.uncork=function(){var e=this._writableState;e.corked&&(e.corked--,!e.writing&&!e.corked&&!e.bufferProcessing&&e.bufferedRequest&&C(this,e))},l.prototype.setDefaultEncoding=function(e){if(\"string\"==typeof e&&(e=e.toLowerCase()),!(-1<[\"hex\",\"utf8\",\"utf-8\",\"ascii\",\"binary\",\"base64\",\"ucs2\",\"ucs-2\",\"utf16le\",\"utf-16le\",\"raw\"].indexOf((e+\"\").toLowerCase())))throw new H(e);return this._writableState.defaultEncoding=e,this},Object.defineProperty(l.prototype,\"writableBuffer\",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(l.prototype,\"writableHighWaterMark\",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),l.prototype._write=function(e,t,n){n(new F(\"_write()\"))},l.prototype._writev=null,l.prototype.end=function(e,t,n){var r=this._writableState;return\"function\"==typeof e?(n=e,e=null,t=null):\"function\"==typeof t&&(n=t,t=null),null!==e&&void 0!==e&&this.write(e,t),r.corked&&(r.corked=1,this.uncork()),r.ending||T(this,r,n),this},Object.defineProperty(l.prototype,\"writableLength\",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(l.prototype,\"destroyed\",{enumerable:!1,get:function(){return void 0!==this._writableState&&this._writableState.destroyed},set:function(e){this._writableState&&(this._writableState.destroyed=e)}}),l.prototype.destroy=D.destroy,l.prototype._undestroy=D.undestroy,l.prototype._destroy=function(e,t){t(e)}}).call(this)}).call(this,e(\"_process\"),\"undefined\"==typeof global?\"undefined\"==typeof self?\"undefined\"==typeof window?{}:window:self:global)},{\"../errors\":15,\"./_stream_duplex\":16,\"./internal/streams/destroy\":23,\"./internal/streams/state\":27,\"./internal/streams/stream\":28,_process:12,buffer:3,inherits:10,\"util-deprecate\":32}],21:[function(e,t){(function(n){(function(){'use strict';function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){return{value:e,done:t}}function o(e){var t=e[c];if(null!==t){var n=e[h].read();null!==n&&(e[g]=null,e[c]=null,e[u]=null,t(a(n,!1)))}}function i(e){n.nextTick(o,e)}function d(e,t){return function(n,r){e.then(function(){return t[f]?void n(a(void 0,!0)):void t[_](n,r)},r)}}var s,l=e(\"./end-of-stream\"),c=Symbol(\"lastResolve\"),u=Symbol(\"lastReject\"),p=Symbol(\"error\"),f=Symbol(\"ended\"),g=Symbol(\"lastPromise\"),_=Symbol(\"handlePromise\"),h=Symbol(\"stream\"),m=Object.getPrototypeOf(function(){}),b=Object.setPrototypeOf((s={get stream(){return this[h]},next:function(){var e=this,t=this[p];if(null!==t)return Promise.reject(t);if(this[f])return Promise.resolve(a(void 0,!0));if(this[h].destroyed)return new Promise(function(t,r){n.nextTick(function(){e[p]?r(e[p]):t(a(void 0,!0))})});var r,o=this[g];if(o)r=new Promise(d(o,this));else{var i=this[h].read();if(null!==i)return Promise.resolve(a(i,!1));r=new Promise(this[_])}return this[g]=r,r}},r(s,Symbol.asyncIterator,function(){return this}),r(s,\"return\",function(){var e=this;return new Promise(function(t,n){e[h].destroy(null,function(e){return e?void n(e):void t(a(void 0,!0))})})}),s),m);t.exports=function(e){var t,n=Object.create(b,(t={},r(t,h,{value:e,writable:!0}),r(t,c,{value:null,writable:!0}),r(t,u,{value:null,writable:!0}),r(t,p,{value:null,writable:!0}),r(t,f,{value:e._readableState.endEmitted,writable:!0}),r(t,_,{value:function(e,t){var r=n[h].read();r?(n[g]=null,n[c]=null,n[u]=null,e(a(r,!1))):(n[c]=e,n[u]=t)},writable:!0}),t));return n[g]=null,l(e,function(e){if(e&&\"ERR_STREAM_PREMATURE_CLOSE\"!==e.code){var t=n[u];return null!==t&&(n[g]=null,n[c]=null,n[u]=null,t(e)),void(n[p]=e)}var r=n[c];null!==r&&(n[g]=null,n[c]=null,n[u]=null,r(a(void 0,!0))),n[f]=!0}),e.on(\"readable\",i.bind(null,n)),n}}).call(this)}).call(this,e(\"_process\"))},{\"./end-of-stream\":24,_process:12}],22:[function(e,t){'use strict';function n(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,r)}return n}function r(e){for(var t,r=1;r<arguments.length;r++)t=null==arguments[r]?{}:arguments[r],r%2?n(Object(t),!0).forEach(function(n){a(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))});return e}function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function i(e,t){for(var n,r=0;r<t.length;r++)n=t[r],n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}function d(e,t,n){return t&&i(e.prototype,t),n&&i(e,n),e}function s(e,t,n){u.prototype.copy.call(e,t,n)}var l=e(\"buffer\"),u=l.Buffer,p=e(\"util\"),f=p.inspect,g=f&&f.custom||\"inspect\";t.exports=function(){function e(){o(this,e),this.head=null,this.tail=null,this.length=0}return d(e,[{key:\"push\",value:function(e){var t={data:e,next:null};0<this.length?this.tail.next=t:this.head=t,this.tail=t,++this.length}},{key:\"unshift\",value:function(e){var t={data:e,next:this.head};0===this.length&&(this.tail=t),this.head=t,++this.length}},{key:\"shift\",value:function(){if(0!==this.length){var e=this.head.data;return this.head=1===this.length?this.tail=null:this.head.next,--this.length,e}}},{key:\"clear\",value:function(){this.head=this.tail=null,this.length=0}},{key:\"join\",value:function(e){if(0===this.length)return\"\";for(var t=this.head,n=\"\"+t.data;t=t.next;)n+=e+t.data;return n}},{key:\"concat\",value:function(e){if(0===this.length)return u.alloc(0);for(var t=u.allocUnsafe(e>>>0),n=this.head,r=0;n;)s(n.data,t,r),r+=n.data.length,n=n.next;return t}},{key:\"consume\",value:function(e,t){var n;return e<this.head.data.length?(n=this.head.data.slice(0,e),this.head.data=this.head.data.slice(e)):e===this.head.data.length?n=this.shift():n=t?this._getString(e):this._getBuffer(e),n}},{key:\"first\",value:function(){return this.head.data}},{key:\"_getString\",value:function(e){var t=this.head,r=1,a=t.data;for(e-=a.length;t=t.next;){var o=t.data,i=e>o.length?o.length:e;if(a+=i===o.length?o:o.slice(0,e),e-=i,0===e){i===o.length?(++r,this.head=t.next?t.next:this.tail=null):(this.head=t,t.data=o.slice(i));break}++r}return this.length-=r,a}},{key:\"_getBuffer\",value:function(e){var t=u.allocUnsafe(e),r=this.head,a=1;for(r.data.copy(t),e-=r.data.length;r=r.next;){var o=r.data,i=e>o.length?o.length:e;if(o.copy(t,t.length-e,0,i),e-=i,0===e){i===o.length?(++a,this.head=r.next?r.next:this.tail=null):(this.head=r,r.data=o.slice(i));break}++a}return this.length-=a,t}},{key:g,value:function(e,t){return f(this,r({},t,{depth:0,customInspect:!1}))}}]),e}()},{buffer:3,util:2}],23:[function(e,t){(function(e){(function(){'use strict';function n(e,t){a(e,t),r(e)}function r(e){e._writableState&&!e._writableState.emitClose||e._readableState&&!e._readableState.emitClose||e.emit(\"close\")}function a(e,t){e.emit(\"error\",t)}t.exports={destroy:function(t,o){var i=this,d=this._readableState&&this._readableState.destroyed,s=this._writableState&&this._writableState.destroyed;return d||s?(o?o(t):t&&(this._writableState?!this._writableState.errorEmitted&&(this._writableState.errorEmitted=!0,e.nextTick(a,this,t)):e.nextTick(a,this,t)),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(t||null,function(t){!o&&t?i._writableState?i._writableState.errorEmitted?e.nextTick(r,i):(i._writableState.errorEmitted=!0,e.nextTick(n,i,t)):e.nextTick(n,i,t):o?(e.nextTick(r,i),o(t)):e.nextTick(r,i)}),this)},undestroy:function(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finalCalled=!1,this._writableState.prefinished=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)},errorOrDestroy:function(e,t){var n=e._readableState,r=e._writableState;n&&n.autoDestroy||r&&r.autoDestroy?e.destroy(t):e.emit(\"error\",t)}}}).call(this)}).call(this,e(\"_process\"))},{_process:12}],24:[function(e,t){'use strict';function n(e){var t=!1;return function(){if(!t){t=!0;for(var n=arguments.length,r=Array(n),a=0;a<n;a++)r[a]=arguments[a];e.apply(this,r)}}}function r(){}function a(e){return e.setHeader&&\"function\"==typeof e.abort}function o(e,t,d){if(\"function\"==typeof t)return o(e,null,t);t||(t={}),d=n(d||r);var s=t.readable||!1!==t.readable&&e.readable,l=t.writable||!1!==t.writable&&e.writable,c=function(){e.writable||p()},u=e._writableState&&e._writableState.finished,p=function(){l=!1,u=!0,s||d.call(e)},f=e._readableState&&e._readableState.endEmitted,g=function(){s=!1,f=!0,l||d.call(e)},_=function(t){d.call(e,t)},h=function(){var t;return s&&!f?(e._readableState&&e._readableState.ended||(t=new i),d.call(e,t)):l&&!u?(e._writableState&&e._writableState.ended||(t=new i),d.call(e,t)):void 0},m=function(){e.req.on(\"finish\",p)};return a(e)?(e.on(\"complete\",p),e.on(\"abort\",h),e.req?m():e.on(\"request\",m)):l&&!e._writableState&&(e.on(\"end\",c),e.on(\"close\",c)),e.on(\"end\",g),e.on(\"finish\",p),!1!==t.error&&e.on(\"error\",_),e.on(\"close\",h),function(){e.removeListener(\"complete\",p),e.removeListener(\"abort\",h),e.removeListener(\"request\",m),e.req&&e.req.removeListener(\"finish\",p),e.removeListener(\"end\",c),e.removeListener(\"close\",c),e.removeListener(\"finish\",p),e.removeListener(\"end\",g),e.removeListener(\"error\",_),e.removeListener(\"close\",h)}}var i=e(\"../../../errors\").codes.ERR_STREAM_PREMATURE_CLOSE;t.exports=o},{\"../../../errors\":15}],25:[function(e,t){t.exports=function(){throw new Error(\"Readable.from is not available in the browser\")}},{}],26:[function(e,t){'use strict';function n(e){var t=!1;return function(){t||(t=!0,e.apply(void 0,arguments))}}function r(e){if(e)throw e}function a(e){return e.setHeader&&\"function\"==typeof e.abort}function o(t,r,o,i){i=n(i);var d=!1;t.on(\"close\",function(){d=!0}),l===void 0&&(l=e(\"./end-of-stream\")),l(t,{readable:r,writable:o},function(e){return e?i(e):void(d=!0,i())});var s=!1;return function(e){if(!d)return s?void 0:(s=!0,a(t)?t.abort():\"function\"==typeof t.destroy?t.destroy():void i(e||new p(\"pipe\")))}}function i(e){e()}function d(e,t){return e.pipe(t)}function s(e){return e.length?\"function\"==typeof e[e.length-1]?e.pop():r:r}var l,c=e(\"../../../errors\").codes,u=c.ERR_MISSING_ARGS,p=c.ERR_STREAM_DESTROYED;t.exports=function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];var r=s(t);if(Array.isArray(t[0])&&(t=t[0]),2>t.length)throw new u(\"streams\");var a,l=t.map(function(e,n){var d=n<t.length-1;return o(e,d,0<n,function(e){a||(a=e),e&&l.forEach(i),d||(l.forEach(i),r(a))})});return t.reduce(d)}},{\"../../../errors\":15,\"./end-of-stream\":24}],27:[function(e,n){'use strict';function r(e,t,n){return null==e.highWaterMark?t?e[n]:null:e.highWaterMark}var a=e(\"../../../errors\").codes.ERR_INVALID_OPT_VALUE;n.exports={getHighWaterMark:function(e,n,o,i){var d=r(n,i,o);if(null!=d){if(!(isFinite(d)&&t(d)===d)||0>d){var s=i?o:\"highWaterMark\";throw new a(s,d)}return t(d)}return e.objectMode?16:16384}}},{\"../../../errors\":15}],28:[function(e,t){t.exports=e(\"events\").EventEmitter},{events:7}],29:[function(e,t,n){n=t.exports=e(\"./lib/_stream_readable.js\"),n.Stream=n,n.Readable=n,n.Writable=e(\"./lib/_stream_writable.js\"),n.Duplex=e(\"./lib/_stream_duplex.js\"),n.Transform=e(\"./lib/_stream_transform.js\"),n.PassThrough=e(\"./lib/_stream_passthrough.js\"),n.finished=e(\"./lib/internal/streams/end-of-stream.js\"),n.pipeline=e(\"./lib/internal/streams/pipeline.js\")},{\"./lib/_stream_duplex.js\":16,\"./lib/_stream_passthrough.js\":17,\"./lib/_stream_readable.js\":18,\"./lib/_stream_transform.js\":19,\"./lib/_stream_writable.js\":20,\"./lib/internal/streams/end-of-stream.js\":24,\"./lib/internal/streams/pipeline.js\":26}],30:[function(e,t,n){function r(e,t){for(var n in e)t[n]=e[n]}function a(e,t,n){return i(e,t,n)}/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */var o=e(\"buffer\"),i=o.Buffer;i.from&&i.alloc&&i.allocUnsafe&&i.allocUnsafeSlow?t.exports=o:(r(o,n),n.Buffer=a),a.prototype=Object.create(i.prototype),r(i,a),a.from=function(e,t,n){if(\"number\"==typeof e)throw new TypeError(\"Argument must not be a number\");return i(e,t,n)},a.alloc=function(e,t,n){if(\"number\"!=typeof e)throw new TypeError(\"Argument must be a number\");var r=i(e);return void 0===t?r.fill(0):\"string\"==typeof n?r.fill(t,n):r.fill(t),r},a.allocUnsafe=function(e){if(\"number\"!=typeof e)throw new TypeError(\"Argument must be a number\");return i(e)},a.allocUnsafeSlow=function(e){if(\"number\"!=typeof e)throw new TypeError(\"Argument must be a number\");return o.SlowBuffer(e)}},{buffer:3}],31:[function(e,t,n){'use strict';function r(e){if(!e)return\"utf8\";for(var t;;)switch(e){case\"utf8\":case\"utf-8\":return\"utf8\";case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return\"utf16le\";case\"latin1\":case\"binary\":return\"latin1\";case\"base64\":case\"ascii\":case\"hex\":return e;default:if(t)return;e=(\"\"+e).toLowerCase(),t=!0;}}function a(e){var t=r(e);if(\"string\"!=typeof t&&(m.isEncoding===b||!b(e)))throw new Error(\"Unknown encoding: \"+e);return t||e}function o(e){this.encoding=a(e);var t;switch(this.encoding){case\"utf16le\":this.text=u,this.end=p,t=4;break;case\"utf8\":this.fillLast=c,t=4;break;case\"base64\":this.text=f,this.end=g,t=3;break;default:return this.write=_,void(this.end=h);}this.lastNeed=0,this.lastTotal=0,this.lastChar=m.allocUnsafe(t)}function d(e){if(127>=e)return 0;return 6==e>>5?2:14==e>>4?3:30==e>>3?4:2==e>>6?-1:-2}function s(e,t,n){var r=t.length-1;if(r<n)return 0;var a=d(t[r]);return 0<=a?(0<a&&(e.lastNeed=a-1),a):--r<n||-2===a?0:(a=d(t[r]),0<=a)?(0<a&&(e.lastNeed=a-2),a):--r<n||-2===a?0:(a=d(t[r]),0<=a?(0<a&&(2===a?a=0:e.lastNeed=a-3),a):0)}function l(e,t){if(128!=(192&t[0]))return e.lastNeed=0,\"\\uFFFD\";if(1<e.lastNeed&&1<t.length){if(128!=(192&t[1]))return e.lastNeed=1,\"\\uFFFD\";if(2<e.lastNeed&&2<t.length&&128!=(192&t[2]))return e.lastNeed=2,\"\\uFFFD\"}}function c(e){var t=this.lastTotal-this.lastNeed,n=l(this,e,t);return void 0===n?this.lastNeed<=e.length?(e.copy(this.lastChar,t,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):void(e.copy(this.lastChar,t,0,e.length),this.lastNeed-=e.length):n}function u(e,t){if(0==(e.length-t)%2){var n=e.toString(\"utf16le\",t);if(n){var r=n.charCodeAt(n.length-1);if(55296<=r&&56319>=r)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1],n.slice(0,-1)}return n}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=e[e.length-1],e.toString(\"utf16le\",t,e.length-1)}function p(e){var t=e&&e.length?this.write(e):\"\";if(this.lastNeed){var n=this.lastTotal-this.lastNeed;return t+this.lastChar.toString(\"utf16le\",0,n)}return t}function f(e,t){var r=(e.length-t)%3;return 0==r?e.toString(\"base64\",t):(this.lastNeed=3-r,this.lastTotal=3,1==r?this.lastChar[0]=e[e.length-1]:(this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1]),e.toString(\"base64\",t,e.length-r))}function g(e){var t=e&&e.length?this.write(e):\"\";return this.lastNeed?t+this.lastChar.toString(\"base64\",0,3-this.lastNeed):t}function _(e){return e.toString(this.encoding)}function h(e){return e&&e.length?this.write(e):\"\"}var m=e(\"safe-buffer\").Buffer,b=m.isEncoding||function(e){switch(e=\"\"+e,e&&e.toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":case\"raw\":return!0;default:return!1;}};n.StringDecoder=o,o.prototype.write=function(e){if(0===e.length)return\"\";var t,n;if(this.lastNeed){if(t=this.fillLast(e),void 0===t)return\"\";n=this.lastNeed,this.lastNeed=0}else n=0;return n<e.length?t?t+this.text(e,n):this.text(e,n):t||\"\"},o.prototype.end=function(e){var t=e&&e.length?this.write(e):\"\";return this.lastNeed?t+\"\\uFFFD\":t},o.prototype.text=function(e,t){var n=s(this,e,t);if(!this.lastNeed)return e.toString(\"utf8\",t);this.lastTotal=n;var r=e.length-(n-this.lastNeed);return e.copy(this.lastChar,0,r),e.toString(\"utf8\",t,r)},o.prototype.fillLast=function(e){return this.lastNeed<=e.length?(e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):void(e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,e.length),this.lastNeed-=e.length)}},{\"safe-buffer\":30}],32:[function(e,t){(function(e){(function(){function n(t){try{if(!e.localStorage)return!1}catch(e){return!1}var n=e.localStorage[t];return null!=n&&\"true\"===(n+\"\").toLowerCase()}t.exports=function(e,t){function r(){if(!a){if(n(\"throwDeprecation\"))throw new Error(t);else n(\"traceDeprecation\")?console.trace(t):console.warn(t);a=!0}return e.apply(this,arguments)}if(n(\"noDeprecation\"))return e;var a=!1;return r}}).call(this)}).call(this,\"undefined\"==typeof global?\"undefined\"==typeof self?\"undefined\"==typeof window?{}:window:self:global)},{}],\"/\":[function(e,t){function n(e){return e.replace(/a=ice-options:trickle\\s\\n/g,\"\")}function r(e){console.warn(e)}/*! simple-peer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */const a=e(\"debug\")(\"simple-peer\"),o=e(\"get-browser-rtc\"),i=e(\"randombytes\"),d=e(\"readable-stream\"),s=e(\"queue-microtask\"),l=e(\"err-code\"),{Buffer:c}=e(\"buffer\"),u=65536;class p extends d.Duplex{constructor(e){if(e=Object.assign({allowHalfOpen:!1},e),super(e),this._id=i(4).toString(\"hex\").slice(0,7),this._debug(\"new peer %o\",e),this.channelName=e.initiator?e.channelName||i(20).toString(\"hex\"):null,this.initiator=e.initiator||!1,this.channelConfig=e.channelConfig||p.channelConfig,this.channelNegotiated=this.channelConfig.negotiated,this.config=Object.assign({},p.config,e.config),this.offerOptions=e.offerOptions||{},this.answerOptions=e.answerOptions||{},this.sdpTransform=e.sdpTransform||(e=>e),this.streams=e.streams||(e.stream?[e.stream]:[]),this.trickle=void 0===e.trickle||e.trickle,this.allowHalfTrickle=void 0!==e.allowHalfTrickle&&e.allowHalfTrickle,this.iceCompleteTimeout=e.iceCompleteTimeout||5000,this.destroyed=!1,this.destroying=!1,this._connected=!1,this.remoteAddress=void 0,this.remoteFamily=void 0,this.remotePort=void 0,this.localAddress=void 0,this.localFamily=void 0,this.localPort=void 0,this._wrtc=e.wrtc&&\"object\"==typeof e.wrtc?e.wrtc:o(),!this._wrtc)if(\"undefined\"==typeof window)throw l(new Error(\"No WebRTC support: Specify `opts.wrtc` option in this environment\"),\"ERR_WEBRTC_SUPPORT\");else throw l(new Error(\"No WebRTC support: Not a supported browser\"),\"ERR_WEBRTC_SUPPORT\");this._pcReady=!1,this._channelReady=!1,this._iceComplete=!1,this._iceCompleteTimer=null,this._channel=null,this._pendingCandidates=[],this._isNegotiating=!1,this._firstNegotiation=!0,this._batchedNegotiation=!1,this._queuedNegotiation=!1,this._sendersAwaitingStable=[],this._senderMap=new Map,this._closingInterval=null,this._remoteTracks=[],this._remoteStreams=[],this._chunk=null,this._cb=null,this._interval=null;try{this._pc=new this._wrtc.RTCPeerConnection(this.config)}catch(e){return void this.destroy(l(e,\"ERR_PC_CONSTRUCTOR\"))}this._isReactNativeWebrtc=\"number\"==typeof this._pc._peerConnectionId,this._pc.oniceconnectionstatechange=()=>{this._onIceStateChange()},this._pc.onicegatheringstatechange=()=>{this._onIceStateChange()},this._pc.onconnectionstatechange=()=>{this._onConnectionStateChange()},this._pc.onsignalingstatechange=()=>{this._onSignalingStateChange()},this._pc.onicecandidate=e=>{this._onIceCandidate(e)},\"object\"==typeof this._pc.peerIdentity&&this._pc.peerIdentity.catch(e=>{this.destroy(l(e,\"ERR_PC_PEER_IDENTITY\"))}),this.initiator||this.channelNegotiated?this._setupData({channel:this._pc.createDataChannel(this.channelName,this.channelConfig)}):this._pc.ondatachannel=e=>{this._setupData(e)},this.streams&&this.streams.forEach(e=>{this.addStream(e)}),this._pc.ontrack=e=>{this._onTrack(e)},this._debug(\"initial negotiation\"),this._needsNegotiation(),this._onFinishBound=()=>{this._onFinish()},this.once(\"finish\",this._onFinishBound)}get bufferSize(){return this._channel&&this._channel.bufferedAmount||0}get connected(){return this._connected&&\"open\"===this._channel.readyState}address(){return{port:this.localPort,family:this.localFamily,address:this.localAddress}}signal(e){if(!this.destroying){if(this.destroyed)throw l(new Error(\"cannot signal after peer is destroyed\"),\"ERR_DESTROYED\");if(\"string\"==typeof e)try{e=JSON.parse(e)}catch(t){e={}}this._debug(\"signal()\"),e.renegotiate&&this.initiator&&(this._debug(\"got request to renegotiate\"),this._needsNegotiation()),e.transceiverRequest&&this.initiator&&(this._debug(\"got request for transceiver\"),this.addTransceiver(e.transceiverRequest.kind,e.transceiverRequest.init)),e.candidate&&(this._pc.remoteDescription&&this._pc.remoteDescription.type?this._addIceCandidate(e.candidate):this._pendingCandidates.push(e.candidate)),e.sdp&&this._pc.setRemoteDescription(new this._wrtc.RTCSessionDescription(e)).then(()=>{this.destroyed||(this._pendingCandidates.forEach(e=>{this._addIceCandidate(e)}),this._pendingCandidates=[],\"offer\"===this._pc.remoteDescription.type&&this._createAnswer())}).catch(e=>{this.destroy(l(e,\"ERR_SET_REMOTE_DESCRIPTION\"))}),e.sdp||e.candidate||e.renegotiate||e.transceiverRequest||this.destroy(l(new Error(\"signal() called with invalid signal data\"),\"ERR_SIGNALING\"))}}_addIceCandidate(e){const t=new this._wrtc.RTCIceCandidate(e);this._pc.addIceCandidate(t).catch(e=>{!t.address||t.address.endsWith(\".local\")?r(\"Ignoring unsupported ICE candidate.\"):this.destroy(l(e,\"ERR_ADD_ICE_CANDIDATE\"))})}send(e){if(!this.destroying){if(this.destroyed)throw l(new Error(\"cannot send after peer is destroyed\"),\"ERR_DESTROYED\");this._channel.send(e)}}addTransceiver(e,t){if(!this.destroying){if(this.destroyed)throw l(new Error(\"cannot addTransceiver after peer is destroyed\"),\"ERR_DESTROYED\");if(this._debug(\"addTransceiver()\"),this.initiator)try{this._pc.addTransceiver(e,t),this._needsNegotiation()}catch(e){this.destroy(l(e,\"ERR_ADD_TRANSCEIVER\"))}else this.emit(\"signal\",{type:\"transceiverRequest\",transceiverRequest:{kind:e,init:t}})}}addStream(e){if(!this.destroying){if(this.destroyed)throw l(new Error(\"cannot addStream after peer is destroyed\"),\"ERR_DESTROYED\");this._debug(\"addStream()\"),e.getTracks().forEach(t=>{this.addTrack(t,e)})}}addTrack(e,t){if(this.destroying)return;if(this.destroyed)throw l(new Error(\"cannot addTrack after peer is destroyed\"),\"ERR_DESTROYED\");this._debug(\"addTrack()\");const n=this._senderMap.get(e)||new Map;let r=n.get(t);if(!r)r=this._pc.addTrack(e,t),n.set(t,r),this._senderMap.set(e,n),this._needsNegotiation();else if(r.removed)throw l(new Error(\"Track has been removed. You should enable/disable tracks that you want to re-add.\"),\"ERR_SENDER_REMOVED\");else throw l(new Error(\"Track has already been added to that stream.\"),\"ERR_SENDER_ALREADY_ADDED\")}replaceTrack(e,t,n){if(this.destroying)return;if(this.destroyed)throw l(new Error(\"cannot replaceTrack after peer is destroyed\"),\"ERR_DESTROYED\");this._debug(\"replaceTrack()\");const r=this._senderMap.get(e),a=r?r.get(n):null;if(!a)throw l(new Error(\"Cannot replace track that was never added.\"),\"ERR_TRACK_NOT_ADDED\");t&&this._senderMap.set(t,r),null==a.replaceTrack?this.destroy(l(new Error(\"replaceTrack is not supported in this browser\"),\"ERR_UNSUPPORTED_REPLACETRACK\")):a.replaceTrack(t)}removeTrack(e,t){if(this.destroying)return;if(this.destroyed)throw l(new Error(\"cannot removeTrack after peer is destroyed\"),\"ERR_DESTROYED\");this._debug(\"removeSender()\");const n=this._senderMap.get(e),r=n?n.get(t):null;if(!r)throw l(new Error(\"Cannot remove track that was never added.\"),\"ERR_TRACK_NOT_ADDED\");try{r.removed=!0,this._pc.removeTrack(r)}catch(e){\"NS_ERROR_UNEXPECTED\"===e.name?this._sendersAwaitingStable.push(r):this.destroy(l(e,\"ERR_REMOVE_TRACK\"))}this._needsNegotiation()}removeStream(e){if(!this.destroying){if(this.destroyed)throw l(new Error(\"cannot removeStream after peer is destroyed\"),\"ERR_DESTROYED\");this._debug(\"removeSenders()\"),e.getTracks().forEach(t=>{this.removeTrack(t,e)})}}_needsNegotiation(){this._debug(\"_needsNegotiation\"),this._batchedNegotiation||(this._batchedNegotiation=!0,s(()=>{this._batchedNegotiation=!1,this.initiator||!this._firstNegotiation?(this._debug(\"starting batched negotiation\"),this.negotiate()):this._debug(\"non-initiator initial negotiation request discarded\"),this._firstNegotiation=!1}))}negotiate(){if(!this.destroying){if(this.destroyed)throw l(new Error(\"cannot negotiate after peer is destroyed\"),\"ERR_DESTROYED\");this.initiator?this._isNegotiating?(this._queuedNegotiation=!0,this._debug(\"already negotiating, queueing\")):(this._debug(\"start negotiation\"),setTimeout(()=>{this._createOffer()},0)):this._isNegotiating?(this._queuedNegotiation=!0,this._debug(\"already negotiating, queueing\")):(this._debug(\"requesting negotiation from initiator\"),this.emit(\"signal\",{type:\"renegotiate\",renegotiate:!0})),this._isNegotiating=!0}}destroy(e){this._destroy(e,()=>{})}_destroy(e,t){this.destroyed||this.destroying||(this.destroying=!0,this._debug(\"destroying (error: %s)\",e&&(e.message||e)),s(()=>{if(this.destroyed=!0,this.destroying=!1,this._debug(\"destroy (error: %s)\",e&&(e.message||e)),this.readable=this.writable=!1,this._readableState.ended||this.push(null),this._writableState.finished||this.end(),this._connected=!1,this._pcReady=!1,this._channelReady=!1,this._remoteTracks=null,this._remoteStreams=null,this._senderMap=null,clearInterval(this._closingInterval),this._closingInterval=null,clearInterval(this._interval),this._interval=null,this._chunk=null,this._cb=null,this._onFinishBound&&this.removeListener(\"finish\",this._onFinishBound),this._onFinishBound=null,this._channel){try{this._channel.close()}catch(e){}this._channel.onmessage=null,this._channel.onopen=null,this._channel.onclose=null,this._channel.onerror=null}if(this._pc){try{this._pc.close()}catch(e){}this._pc.oniceconnectionstatechange=null,this._pc.onicegatheringstatechange=null,this._pc.onsignalingstatechange=null,this._pc.onicecandidate=null,this._pc.ontrack=null,this._pc.ondatachannel=null}this._pc=null,this._channel=null,e&&this.emit(\"error\",e),this.emit(\"close\"),t()}))}_setupData(e){if(!e.channel)return this.destroy(l(new Error(\"Data channel event is missing `channel` property\"),\"ERR_DATA_CHANNEL\"));this._channel=e.channel,this._channel.binaryType=\"arraybuffer\",\"number\"==typeof this._channel.bufferedAmountLowThreshold&&(this._channel.bufferedAmountLowThreshold=u),this.channelName=this._channel.label,this._channel.onmessage=e=>{this._onChannelMessage(e)},this._channel.onbufferedamountlow=()=>{this._onChannelBufferedAmountLow()},this._channel.onopen=()=>{this._onChannelOpen()},this._channel.onclose=()=>{this._onChannelClose()},this._channel.onerror=e=>{const t=e.error instanceof Error?e.error:new Error(`Datachannel error: ${e.message} ${e.filename}:${e.lineno}:${e.colno}`);this.destroy(l(t,\"ERR_DATA_CHANNEL\"))};let t=!1;this._closingInterval=setInterval(()=>{this._channel&&\"closing\"===this._channel.readyState?(t&&this._onChannelClose(),t=!0):t=!1},5000)}_read(){}_write(e,t,n){if(this.destroyed)return n(l(new Error(\"cannot write after peer is destroyed\"),\"ERR_DATA_CHANNEL\"));if(this._connected){try{this.send(e)}catch(e){return this.destroy(l(e,\"ERR_DATA_CHANNEL\"))}this._channel.bufferedAmount>u?(this._debug(\"start backpressure: bufferedAmount %d\",this._channel.bufferedAmount),this._cb=n):n(null)}else this._debug(\"write before connect\"),this._chunk=e,this._cb=n}_onFinish(){if(!this.destroyed){const e=()=>{setTimeout(()=>this.destroy(),1e3)};this._connected?e():this.once(\"connect\",e)}}_startIceCompleteTimeout(){this.destroyed||this._iceCompleteTimer||(this._debug(\"started iceComplete timeout\"),this._iceCompleteTimer=setTimeout(()=>{this._iceComplete||(this._iceComplete=!0,this._debug(\"iceComplete timeout completed\"),this.emit(\"iceTimeout\"),this.emit(\"_iceComplete\"))},this.iceCompleteTimeout))}_createOffer(){this.destroyed||this._pc.createOffer(this.offerOptions).then(e=>{if(this.destroyed)return;this.trickle||this.allowHalfTrickle||(e.sdp=n(e.sdp)),e.sdp=this.sdpTransform(e.sdp);const t=()=>{if(!this.destroyed){const t=this._pc.localDescription||e;this._debug(\"signal\"),this.emit(\"signal\",{type:t.type,sdp:t.sdp})}};this._pc.setLocalDescription(e).then(()=>{this._debug(\"createOffer success\"),this.destroyed||(this.trickle||this._iceComplete?t():this.once(\"_iceComplete\",t))}).catch(e=>{this.destroy(l(e,\"ERR_SET_LOCAL_DESCRIPTION\"))})}).catch(e=>{this.destroy(l(e,\"ERR_CREATE_OFFER\"))})}_requestMissingTransceivers(){this._pc.getTransceivers&&this._pc.getTransceivers().forEach(e=>{e.mid||!e.sender.track||e.requested||(e.requested=!0,this.addTransceiver(e.sender.track.kind))})}_createAnswer(){this.destroyed||this._pc.createAnswer(this.answerOptions).then(e=>{if(this.destroyed)return;this.trickle||this.allowHalfTrickle||(e.sdp=n(e.sdp)),e.sdp=this.sdpTransform(e.sdp);const t=()=>{if(!this.destroyed){const t=this._pc.localDescription||e;this._debug(\"signal\"),this.emit(\"signal\",{type:t.type,sdp:t.sdp}),this.initiator||this._requestMissingTransceivers()}};this._pc.setLocalDescription(e).then(()=>{this.destroyed||(this.trickle||this._iceComplete?t():this.once(\"_iceComplete\",t))}).catch(e=>{this.destroy(l(e,\"ERR_SET_LOCAL_DESCRIPTION\"))})}).catch(e=>{this.destroy(l(e,\"ERR_CREATE_ANSWER\"))})}_onConnectionStateChange(){this.destroyed||\"failed\"===this._pc.connectionState&&this.destroy(l(new Error(\"Connection failed.\"),\"ERR_CONNECTION_FAILURE\"))}_onIceStateChange(){if(this.destroyed)return;const e=this._pc.iceConnectionState,t=this._pc.iceGatheringState;this._debug(\"iceStateChange (connection: %s) (gathering: %s)\",e,t),this.emit(\"iceStateChange\",e,t),(\"connected\"===e||\"completed\"===e)&&(this._pcReady=!0,this._maybeReady()),\"failed\"===e&&this.destroy(l(new Error(\"Ice connection failed.\"),\"ERR_ICE_CONNECTION_FAILURE\")),\"closed\"===e&&this.destroy(l(new Error(\"Ice connection closed.\"),\"ERR_ICE_CONNECTION_CLOSED\"))}getStats(e){const t=e=>(\"[object Array]\"===Object.prototype.toString.call(e.values)&&e.values.forEach(t=>{Object.assign(e,t)}),e);0===this._pc.getStats.length||this._isReactNativeWebrtc?this._pc.getStats().then(n=>{const r=[];n.forEach(e=>{r.push(t(e))}),e(null,r)},t=>e(t)):0<this._pc.getStats.length?this._pc.getStats(n=>{if(this.destroyed)return;const r=[];n.result().forEach(e=>{const n={};e.names().forEach(t=>{n[t]=e.stat(t)}),n.id=e.id,n.type=e.type,n.timestamp=e.timestamp,r.push(t(n))}),e(null,r)},t=>e(t)):e(null,[])}_maybeReady(){if(this._debug(\"maybeReady pc %s channel %s\",this._pcReady,this._channelReady),this._connected||this._connecting||!this._pcReady||!this._channelReady)return;this._connecting=!0;const e=()=>{this.destroyed||this.getStats((t,n)=>{if(this.destroyed)return;t&&(n=[]);const r={},a={},o={};let i=!1;n.forEach(e=>{(\"remotecandidate\"===e.type||\"remote-candidate\"===e.type)&&(r[e.id]=e),(\"localcandidate\"===e.type||\"local-candidate\"===e.type)&&(a[e.id]=e),(\"candidatepair\"===e.type||\"candidate-pair\"===e.type)&&(o[e.id]=e)});const d=e=>{i=!0;let t=a[e.localCandidateId];t&&(t.ip||t.address)?(this.localAddress=t.ip||t.address,this.localPort=+t.port):t&&t.ipAddress?(this.localAddress=t.ipAddress,this.localPort=+t.portNumber):\"string\"==typeof e.googLocalAddress&&(t=e.googLocalAddress.split(\":\"),this.localAddress=t[0],this.localPort=+t[1]),this.localAddress&&(this.localFamily=this.localAddress.includes(\":\")?\"IPv6\":\"IPv4\");let n=r[e.remoteCandidateId];n&&(n.ip||n.address)?(this.remoteAddress=n.ip||n.address,this.remotePort=+n.port):n&&n.ipAddress?(this.remoteAddress=n.ipAddress,this.remotePort=+n.portNumber):\"string\"==typeof e.googRemoteAddress&&(n=e.googRemoteAddress.split(\":\"),this.remoteAddress=n[0],this.remotePort=+n[1]),this.remoteAddress&&(this.remoteFamily=this.remoteAddress.includes(\":\")?\"IPv6\":\"IPv4\"),this._debug(\"connect local: %s:%s remote: %s:%s\",this.localAddress,this.localPort,this.remoteAddress,this.remotePort)};if(n.forEach(e=>{\"transport\"===e.type&&e.selectedCandidatePairId&&d(o[e.selectedCandidatePairId]),(\"googCandidatePair\"===e.type&&\"true\"===e.googActiveConnection||(\"candidatepair\"===e.type||\"candidate-pair\"===e.type)&&e.selected)&&d(e)}),!i&&(!Object.keys(o).length||Object.keys(a).length))return void setTimeout(e,100);if(this._connecting=!1,this._connected=!0,this._chunk){try{this.send(this._chunk)}catch(e){return this.destroy(l(e,\"ERR_DATA_CHANNEL\"))}this._chunk=null,this._debug(\"sent chunk from \\\"write before connect\\\"\");const e=this._cb;this._cb=null,e(null)}\"number\"!=typeof this._channel.bufferedAmountLowThreshold&&(this._interval=setInterval(()=>this._onInterval(),150),this._interval.unref&&this._interval.unref()),this._debug(\"connect\"),this.emit(\"connect\")})};e()}_onInterval(){this._cb&&this._channel&&!(this._channel.bufferedAmount>u)&&this._onChannelBufferedAmountLow()}_onSignalingStateChange(){this.destroyed||(\"stable\"===this._pc.signalingState&&(this._isNegotiating=!1,this._debug(\"flushing sender queue\",this._sendersAwaitingStable),this._sendersAwaitingStable.forEach(e=>{this._pc.removeTrack(e),this._queuedNegotiation=!0}),this._sendersAwaitingStable=[],this._queuedNegotiation?(this._debug(\"flushing negotiation queue\"),this._queuedNegotiation=!1,this._needsNegotiation()):(this._debug(\"negotiated\"),this.emit(\"negotiated\"))),this._debug(\"signalingStateChange %s\",this._pc.signalingState),this.emit(\"signalingStateChange\",this._pc.signalingState))}_onIceCandidate(e){this.destroyed||(e.candidate&&this.trickle?this.emit(\"signal\",{type:\"candidate\",candidate:{candidate:e.candidate.candidate,sdpMLineIndex:e.candidate.sdpMLineIndex,sdpMid:e.candidate.sdpMid}}):!e.candidate&&!this._iceComplete&&(this._iceComplete=!0,this.emit(\"_iceComplete\")),e.candidate&&this._startIceCompleteTimeout())}_onChannelMessage(e){if(this.destroyed)return;let t=e.data;t instanceof ArrayBuffer&&(t=c.from(t)),this.push(t)}_onChannelBufferedAmountLow(){if(!this.destroyed&&this._cb){this._debug(\"ending backpressure: bufferedAmount %d\",this._channel.bufferedAmount);const e=this._cb;this._cb=null,e(null)}}_onChannelOpen(){this._connected||this.destroyed||(this._debug(\"on channel open\"),this._channelReady=!0,this._maybeReady())}_onChannelClose(){this.destroyed||(this._debug(\"on channel close\"),this.destroy())}_onTrack(e){this.destroyed||e.streams.forEach(t=>{this._debug(\"on track\"),this.emit(\"track\",e.track,t),this._remoteTracks.push({track:e.track,stream:t}),this._remoteStreams.some(e=>e.id===t.id)||(this._remoteStreams.push(t),s(()=>{this._debug(\"on stream\"),this.emit(\"stream\",t)}))})}_debug(){const e=[].slice.call(arguments);e[0]=\"[\"+this._id+\"] \"+e[0],a.apply(null,e)}}p.WEBRTC_SUPPORT=!!o(),p.config={iceServers:[{urls:[\"stun:stun.l.google.com:19302\",\"stun:global.stun.twilio.com:3478\"]}],sdpSemantics:\"unified-plan\"},p.channelConfig={},t.exports=p},{buffer:3,debug:4,\"err-code\":6,\"get-browser-rtc\":8,\"queue-microtask\":13,randombytes:14,\"readable-stream\":29}]},{},[])(\"/\")});","/**\n * @module sync-protocol\n */\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\nimport * as Y from 'yjs'\n\n/**\n * @typedef {Map<number, number>} StateMap\n */\n\n/**\n * Core Yjs defines two message types:\n * • YjsSyncStep1: Includes the State Set of the sending client. When received, the client should reply with YjsSyncStep2.\n * • YjsSyncStep2: Includes all missing structs and the complete delete set. When received, the client is assured that it\n *   received all information from the remote client.\n *\n * In a peer-to-peer network, you may want to introduce a SyncDone message type. Both parties should initiate the connection\n * with SyncStep1. When a client received SyncStep2, it should reply with SyncDone. When the local client received both\n * SyncStep2 and SyncDone, it is assured that it is synced to the remote client.\n *\n * In a client-server model, you want to handle this differently: The client should initiate the connection with SyncStep1.\n * When the server receives SyncStep1, it should reply with SyncStep2 immediately followed by SyncStep1. The client replies\n * with SyncStep2 when it receives SyncStep1. Optionally the server may send a SyncDone after it received SyncStep2, so the\n * client knows that the sync is finished.  There are two reasons for this more elaborated sync model: 1. This protocol can\n * easily be implemented on top of http and websockets. 2. The server shoul only reply to requests, and not initiate them.\n * Therefore it is necesarry that the client initiates the sync.\n *\n * Construction of a message:\n * [messageType : varUint, message definition..]\n *\n * Note: A message does not include information about the room name. This must to be handled by the upper layer protocol!\n *\n * stringify[messageType] stringifies a message definition (messageType is already read from the bufffer)\n */\n\nexport const messageYjsSyncStep1 = 0\nexport const messageYjsSyncStep2 = 1\nexport const messageYjsUpdate = 2\n\n/**\n * Create a sync step 1 message based on the state of the current shared document.\n *\n * @param {encoding.Encoder} encoder\n * @param {Y.Doc} doc\n */\nexport const writeSyncStep1 = (encoder, doc) => {\n  encoding.writeVarUint(encoder, messageYjsSyncStep1)\n  const sv = Y.encodeStateVector(doc)\n  encoding.writeVarUint8Array(encoder, sv)\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {Y.Doc} doc\n * @param {Uint8Array} [encodedStateVector]\n */\nexport const writeSyncStep2 = (encoder, doc, encodedStateVector) => {\n  encoding.writeVarUint(encoder, messageYjsSyncStep2)\n  encoding.writeVarUint8Array(encoder, Y.encodeStateAsUpdate(doc, encodedStateVector))\n}\n\n/**\n * Read SyncStep1 message and reply with SyncStep2.\n *\n * @param {decoding.Decoder} decoder The reply to the received message\n * @param {encoding.Encoder} encoder The received message\n * @param {Y.Doc} doc\n */\nexport const readSyncStep1 = (decoder, encoder, doc) =>\n  writeSyncStep2(encoder, doc, decoding.readVarUint8Array(decoder))\n\n/**\n * Read and apply Structs and then DeleteStore to a y instance.\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readSyncStep2 = (decoder, doc, transactionOrigin) => {\n  try {\n    Y.applyUpdate(doc, decoding.readVarUint8Array(decoder), transactionOrigin)\n  } catch (error) {\n    // This catches errors that are thrown by event handlers\n    console.error('Caught error while handling a Yjs update', error)\n  }\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {Uint8Array} update\n */\nexport const writeUpdate = (encoder, update) => {\n  encoding.writeVarUint(encoder, messageYjsUpdate)\n  encoding.writeVarUint8Array(encoder, update)\n}\n\n/**\n * Read and apply Structs and then DeleteStore to a y instance.\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readUpdate = readSyncStep2\n\n/**\n * @param {decoding.Decoder} decoder A message received from another client\n * @param {encoding.Encoder} encoder The reply message. Will not be sent if empty.\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readSyncMessage = (decoder, encoder, doc, transactionOrigin) => {\n  const messageType = decoding.readVarUint(decoder)\n  switch (messageType) {\n    case messageYjsSyncStep1:\n      readSyncStep1(decoder, encoder, doc)\n      break\n    case messageYjsSyncStep2:\n      readSyncStep2(decoder, doc, transactionOrigin)\n      break\n    case messageYjsUpdate:\n      readUpdate(decoder, doc, transactionOrigin)\n      break\n    default:\n      throw new Error('Unknown message type')\n  }\n  return messageType\n}\n","/**\n * @module awareness-protocol\n */\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\nimport * as time from 'lib0/time.js'\nimport * as math from 'lib0/math.js'\nimport { Observable } from 'lib0/observable.js'\nimport * as f from 'lib0/function.js'\nimport * as Y from 'yjs' // eslint-disable-line\n\nexport const outdatedTimeout = 30000\n\n/**\n * @typedef {Object} MetaClientState\n * @property {number} MetaClientState.clock\n * @property {number} MetaClientState.lastUpdated unix timestamp\n */\n\n/**\n * The Awareness class implements a simple shared state protocol that can be used for non-persistent data like awareness information\n * (cursor, username, status, ..). Each client can update its own local state and listen to state changes of\n * remote clients. Every client may set a state of a remote peer to `null` to mark the client as offline.\n *\n * Each client is identified by a unique client id (something we borrow from `doc.clientID`). A client can override\n * its own state by propagating a message with an increasing timestamp (`clock`). If such a message is received, it is\n * applied if the known state of that client is older than the new state (`clock < newClock`). If a client thinks that\n * a remote client is offline, it may propagate a message with\n * `{ clock: currentClientClock, state: null, client: remoteClient }`. If such a\n * message is received, and the known clock of that client equals the received clock, it will override the state with `null`.\n *\n * Before a client disconnects, it should propagate a `null` state with an updated clock.\n *\n * Awareness states must be updated every 30 seconds. Otherwise the Awareness instance will delete the client state.\n *\n * @extends {Observable<string>}\n */\nexport class Awareness extends Observable {\n  /**\n   * @param {Y.Doc} doc\n   */\n  constructor (doc) {\n    super()\n    this.doc = doc\n    /**\n     * @type {number}\n     */\n    this.clientID = doc.clientID\n    /**\n     * Maps from client id to client state\n     * @type {Map<number, Object<string, any>>}\n     */\n    this.states = new Map()\n    /**\n     * @type {Map<number, MetaClientState>}\n     */\n    this.meta = new Map()\n    this._checkInterval = /** @type {any} */ (setInterval(() => {\n      const now = time.getUnixTime()\n      if (this.getLocalState() !== null && (outdatedTimeout / 2 <= now - /** @type {{lastUpdated:number}} */ (this.meta.get(this.clientID)).lastUpdated)) {\n        // renew local clock\n        this.setLocalState(this.getLocalState())\n      }\n      /**\n       * @type {Array<number>}\n       */\n      const remove = []\n      this.meta.forEach((meta, clientid) => {\n        if (clientid !== this.clientID && outdatedTimeout <= now - meta.lastUpdated && this.states.has(clientid)) {\n          remove.push(clientid)\n        }\n      })\n      if (remove.length > 0) {\n        removeAwarenessStates(this, remove, 'timeout')\n      }\n    }, math.floor(outdatedTimeout / 10)))\n    doc.on('destroy', () => {\n      this.destroy()\n    })\n    this.setLocalState({})\n  }\n\n  destroy () {\n    this.emit('destroy', [this])\n    this.setLocalState(null)\n    super.destroy()\n    clearInterval(this._checkInterval)\n  }\n\n  /**\n   * @return {Object<string,any>|null}\n   */\n  getLocalState () {\n    return this.states.get(this.clientID) || null\n  }\n\n  /**\n   * @param {Object<string,any>|null} state\n   */\n  setLocalState (state) {\n    const clientID = this.clientID\n    const currLocalMeta = this.meta.get(clientID)\n    const clock = currLocalMeta === undefined ? 0 : currLocalMeta.clock + 1\n    const prevState = this.states.get(clientID)\n    if (state === null) {\n      this.states.delete(clientID)\n    } else {\n      this.states.set(clientID, state)\n    }\n    this.meta.set(clientID, {\n      clock,\n      lastUpdated: time.getUnixTime()\n    })\n    const added = []\n    const updated = []\n    const filteredUpdated = []\n    const removed = []\n    if (state === null) {\n      removed.push(clientID)\n    } else if (prevState == null) {\n      if (state != null) {\n        added.push(clientID)\n      }\n    } else {\n      updated.push(clientID)\n      if (!f.equalityDeep(prevState, state)) {\n        filteredUpdated.push(clientID)\n      }\n    }\n    if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n      this.emit('change', [{ added, updated: filteredUpdated, removed }, 'local'])\n    }\n    this.emit('update', [{ added, updated, removed }, 'local'])\n  }\n\n  /**\n   * @param {string} field\n   * @param {any} value\n   */\n  setLocalStateField (field, value) {\n    const state = this.getLocalState()\n    if (state !== null) {\n      state[field] = value\n      this.setLocalState(state)\n    }\n  }\n\n  /**\n   * @return {Map<number,Object<string,any>>}\n   */\n  getStates () {\n    return this.states\n  }\n}\n\n/**\n * Mark (remote) clients as inactive and remove them from the list of active peers.\n * This change will be propagated to remote clients.\n *\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @param {any} origin\n */\nexport const removeAwarenessStates = (awareness, clients, origin) => {\n  const removed = []\n  for (let i = 0; i < clients.length; i++) {\n    const clientID = clients[i]\n    if (awareness.states.has(clientID)) {\n      awareness.states.delete(clientID)\n      if (clientID === awareness.clientID) {\n        const curMeta = /** @type {MetaClientState} */ (awareness.meta.get(clientID))\n        awareness.meta.set(clientID, {\n          clock: curMeta.clock + 1,\n          lastUpdated: time.getUnixTime()\n        })\n      }\n      removed.push(clientID)\n    }\n  }\n  if (removed.length > 0) {\n    awareness.emit('change', [{ added: [], updated: [], removed }, origin])\n    awareness.emit('update', [{ added: [], updated: [], removed }, origin])\n  }\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @return {Uint8Array}\n */\nexport const encodeAwarenessUpdate = (awareness, clients, states = awareness.states) => {\n  const len = clients.length\n  const encoder = encoding.createEncoder()\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = clients[i]\n    const state = states.get(clientID) || null\n    const clock = /** @type {MetaClientState} */ (awareness.meta.get(clientID)).clock\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(state))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Modify the content of an awareness update before re-encoding it to an awareness update.\n *\n * This might be useful when you have a central server that wants to ensure that clients\n * cant hijack somebody elses identity.\n *\n * @param {Uint8Array} update\n * @param {function(any):any} modify\n * @return {Uint8Array}\n */\nexport const modifyAwarenessUpdate = (update, modify) => {\n  const decoder = decoding.createDecoder(update)\n  const encoder = encoding.createEncoder()\n  const len = decoding.readVarUint(decoder)\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    const clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const modifiedState = modify(state)\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(modifiedState))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Uint8Array} update\n * @param {any} origin This will be added to the emitted change event\n */\nexport const applyAwarenessUpdate = (awareness, update, origin) => {\n  const decoder = decoding.createDecoder(update)\n  const timestamp = time.getUnixTime()\n  const added = []\n  const updated = []\n  const filteredUpdated = []\n  const removed = []\n  const len = decoding.readVarUint(decoder)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    let clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const clientMeta = awareness.meta.get(clientID)\n    const prevState = awareness.states.get(clientID)\n    const currClock = clientMeta === undefined ? 0 : clientMeta.clock\n    if (currClock < clock || (currClock === clock && state === null && awareness.states.has(clientID))) {\n      if (state === null) {\n        // never let a remote client remove this local state\n        if (clientID === awareness.clientID && awareness.getLocalState() != null) {\n          // remote client removed the local state. Do not remote state. Broadcast a message indicating\n          // that this client still exists by increasing the clock\n          clock++\n        } else {\n          awareness.states.delete(clientID)\n        }\n      } else {\n        awareness.states.set(clientID, state)\n      }\n      awareness.meta.set(clientID, {\n        clock,\n        lastUpdated: timestamp\n      })\n      if (clientMeta === undefined && state !== null) {\n        added.push(clientID)\n      } else if (clientMeta !== undefined && state === null) {\n        removed.push(clientID)\n      } else if (state !== null) {\n        if (!f.equalityDeep(state, prevState)) {\n          filteredUpdated.push(clientID)\n        }\n        updated.push(clientID)\n      }\n    }\n  }\n  if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n    awareness.emit('change', [{\n      added, updated: filteredUpdated, removed\n    }, origin])\n  }\n  if (added.length > 0 || updated.length > 0 || removed.length > 0) {\n    awareness.emit('update', [{\n      added, updated, removed\n    }, origin])\n  }\n}\n","/* eslint-env browser */\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\nimport * as promise from 'lib0/promise.js'\nimport * as error from 'lib0/error.js'\nimport * as string from 'lib0/string.js'\n\n/**\n * @param {string} secret\n * @param {string} roomName\n * @return {PromiseLike<CryptoKey>}\n */\nexport const deriveKey = (secret, roomName) => {\n  const secretBuffer = string.encodeUtf8(secret).buffer\n  const salt = string.encodeUtf8(roomName).buffer\n  return crypto.subtle.importKey(\n    'raw',\n    secretBuffer,\n    'PBKDF2',\n    false,\n    ['deriveKey']\n  ).then(keyMaterial =>\n    crypto.subtle.deriveKey(\n      {\n        name: 'PBKDF2',\n        salt,\n        iterations: 100000,\n        hash: 'SHA-256'\n      },\n      keyMaterial,\n      {\n        name: 'AES-GCM',\n        length: 256\n      },\n      true,\n      ['encrypt', 'decrypt']\n    )\n  )\n}\n\n/**\n * @param {Uint8Array} data data to be encrypted\n * @param {CryptoKey?} key\n * @return {PromiseLike<Uint8Array>} encrypted, base64 encoded message\n */\nexport const encrypt = (data, key) => {\n  if (!key) {\n    return /** @type {PromiseLike<Uint8Array>} */ (promise.resolve(data))\n  }\n  const iv = crypto.getRandomValues(new Uint8Array(12))\n  return crypto.subtle.encrypt(\n    {\n      name: 'AES-GCM',\n      iv\n    },\n    key,\n    data\n  ).then(cipher => {\n    const encryptedDataEncoder = encoding.createEncoder()\n    encoding.writeVarString(encryptedDataEncoder, 'AES-GCM')\n    encoding.writeVarUint8Array(encryptedDataEncoder, iv)\n    encoding.writeVarUint8Array(encryptedDataEncoder, new Uint8Array(cipher))\n    return encoding.toUint8Array(encryptedDataEncoder)\n  })\n}\n\n/**\n * @param {Object} data data to be encrypted\n * @param {CryptoKey?} key\n * @return {PromiseLike<Uint8Array>} encrypted data, if key is provided\n */\nexport const encryptJson = (data, key) => {\n  const dataEncoder = encoding.createEncoder()\n  encoding.writeAny(dataEncoder, data)\n  return encrypt(encoding.toUint8Array(dataEncoder), key)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {CryptoKey?} key\n * @return {PromiseLike<Uint8Array>} decrypted buffer\n */\nexport const decrypt = (data, key) => {\n  if (!key) {\n    return /** @type {PromiseLike<Uint8Array>} */ (promise.resolve(data))\n  }\n  const dataDecoder = decoding.createDecoder(data)\n  const algorithm = decoding.readVarString(dataDecoder)\n  if (algorithm !== 'AES-GCM') {\n    promise.reject(error.create('Unknown encryption algorithm'))\n  }\n  const iv = decoding.readVarUint8Array(dataDecoder)\n  const cipher = decoding.readVarUint8Array(dataDecoder)\n  return crypto.subtle.decrypt(\n    {\n      name: 'AES-GCM',\n      iv\n    },\n    key,\n    cipher\n  ).then(data => new Uint8Array(data))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {CryptoKey?} key\n * @return {PromiseLike<Object>} decrypted object\n */\nexport const decryptJson = (data, key) =>\n  decrypt(data, key).then(decryptedValue =>\n    decoding.readAny(decoding.createDecoder(new Uint8Array(decryptedValue)))\n  )\n","import * as ws from 'lib0/websocket.js'\nimport * as map from 'lib0/map.js'\nimport * as error from 'lib0/error.js'\nimport * as random from 'lib0/random.js'\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\nimport { Observable } from 'lib0/observable.js'\nimport * as logging from 'lib0/logging.js'\nimport * as promise from 'lib0/promise.js'\nimport * as bc from 'lib0/broadcastchannel.js'\nimport * as buffer from 'lib0/buffer.js'\nimport * as math from 'lib0/math.js'\nimport { createMutex } from 'lib0/mutex.js'\n\nimport * as Y from 'yjs' // eslint-disable-line\nimport Peer from 'simple-peer/simplepeer.min.js'\n\nimport * as syncProtocol from 'y-protocols/sync.js'\nimport * as awarenessProtocol from 'y-protocols/awareness.js'\n\nimport * as cryptoutils from './crypto.js'\n\nconst log = logging.createModuleLogger('y-webrtc')\n\nconst messageSync = 0\nconst messageQueryAwareness = 3\nconst messageAwareness = 1\nconst messageBcPeerId = 4\n\n/**\n * @type {Map<string, SignalingConn>}\n */\nconst signalingConns = new Map()\n\n/**\n * @type {Map<string,Room>}\n */\nconst rooms = new Map()\n\n/**\n * @param {Room} room\n */\nconst checkIsSynced = room => {\n  let synced = true\n  room.webrtcConns.forEach(peer => {\n    if (!peer.synced) {\n      synced = false\n    }\n  })\n  if ((!synced && room.synced) || (synced && !room.synced)) {\n    room.synced = synced\n    room.provider.emit('synced', [{ synced }])\n    log('synced ', logging.BOLD, room.name, logging.UNBOLD, ' with all peers')\n  }\n}\n\n/**\n * @param {Room} room\n * @param {Uint8Array} buf\n * @param {function} syncedCallback\n * @return {encoding.Encoder?}\n */\nconst readMessage = (room, buf, syncedCallback) => {\n  const decoder = decoding.createDecoder(buf)\n  const encoder = encoding.createEncoder()\n  const messageType = decoding.readVarUint(decoder)\n  if (room === undefined) {\n    return null\n  }\n  const awareness = room.awareness\n  const doc = room.doc\n  let sendReply = false\n  switch (messageType) {\n    case messageSync: {\n      encoding.writeVarUint(encoder, messageSync)\n      const syncMessageType = syncProtocol.readSyncMessage(decoder, encoder, doc, room)\n      if (syncMessageType === syncProtocol.messageYjsSyncStep2 && !room.synced) {\n        syncedCallback()\n      }\n      if (syncMessageType === syncProtocol.messageYjsSyncStep1) {\n        sendReply = true\n      }\n      break\n    }\n    case messageQueryAwareness:\n      encoding.writeVarUint(encoder, messageAwareness)\n      encoding.writeVarUint8Array(encoder, awarenessProtocol.encodeAwarenessUpdate(awareness, Array.from(awareness.getStates().keys())))\n      sendReply = true\n      break\n    case messageAwareness:\n      awarenessProtocol.applyAwarenessUpdate(awareness, decoding.readVarUint8Array(decoder), room)\n      break\n    case messageBcPeerId: {\n      const add = decoding.readUint8(decoder) === 1\n      const peerName = decoding.readVarString(decoder)\n      if (peerName !== room.peerId && ((room.bcConns.has(peerName) && !add) || (!room.bcConns.has(peerName) && add))) {\n        const removed = []\n        const added = []\n        if (add) {\n          room.bcConns.add(peerName)\n          added.push(peerName)\n        } else {\n          room.bcConns.delete(peerName)\n          removed.push(peerName)\n        }\n        room.provider.emit('peers', [{\n          added,\n          removed,\n          webrtcPeers: Array.from(room.webrtcConns.keys()),\n          bcPeers: Array.from(room.bcConns)\n        }])\n        broadcastBcPeerId(room)\n      }\n      break\n    }\n    default:\n      console.error('Unable to compute message')\n      return encoder\n  }\n  if (!sendReply) {\n    // nothing has been written, no answer created\n    return null\n  }\n  return encoder\n}\n\n/**\n * @param {WebrtcConn} peerConn\n * @param {Uint8Array} buf\n * @return {encoding.Encoder?}\n */\nconst readPeerMessage = (peerConn, buf) => {\n  const room = peerConn.room\n  log('received message from ', logging.BOLD, peerConn.remotePeerId, logging.GREY, ' (', room.name, ')', logging.UNBOLD, logging.UNCOLOR)\n  return readMessage(room, buf, () => {\n    peerConn.synced = true\n    log('synced ', logging.BOLD, room.name, logging.UNBOLD, ' with ', logging.BOLD, peerConn.remotePeerId)\n    checkIsSynced(room)\n  })\n}\n\n/**\n * @param {WebrtcConn} webrtcConn\n * @param {encoding.Encoder} encoder\n */\nconst sendWebrtcConn = (webrtcConn, encoder) => {\n  log('send message to ', logging.BOLD, webrtcConn.remotePeerId, logging.UNBOLD, logging.GREY, ' (', webrtcConn.room.name, ')', logging.UNCOLOR)\n  try {\n    webrtcConn.peer.send(encoding.toUint8Array(encoder))\n  } catch (e) {}\n}\n\n/**\n * @param {Room} room\n * @param {Uint8Array} m\n */\nconst broadcastWebrtcConn = (room, m) => {\n  log('broadcast message in ', logging.BOLD, room.name, logging.UNBOLD)\n  room.webrtcConns.forEach(conn => {\n    try {\n      conn.peer.send(m)\n    } catch (e) {}\n  })\n}\n\nexport class WebrtcConn {\n  /**\n   * @param {SignalingConn} signalingConn\n   * @param {boolean} initiator\n   * @param {string} remotePeerId\n   * @param {Room} room\n   */\n  constructor (signalingConn, initiator, remotePeerId, room) {\n    log('establishing connection to ', logging.BOLD, remotePeerId)\n    this.room = room\n    this.remotePeerId = remotePeerId\n    this.closed = false\n    this.connected = false\n    this.synced = false\n    /**\n     * @type {any}\n     */\n    this.peer = new Peer({ initiator, ...room.provider.peerOpts })\n    this.peer.on('signal', signal => {\n      publishSignalingMessage(signalingConn, room, { to: remotePeerId, from: room.peerId, type: 'signal', signal })\n    })\n    this.peer.on('connect', () => {\n      log('connected to ', logging.BOLD, remotePeerId)\n      this.connected = true\n      // send sync step 1\n      const provider = room.provider\n      const doc = provider.doc\n      const awareness = room.awareness\n      const encoder = encoding.createEncoder()\n      encoding.writeVarUint(encoder, messageSync)\n      syncProtocol.writeSyncStep1(encoder, doc)\n      sendWebrtcConn(this, encoder)\n      const awarenessStates = awareness.getStates()\n      if (awarenessStates.size > 0) {\n        const encoder = encoding.createEncoder()\n        encoding.writeVarUint(encoder, messageAwareness)\n        encoding.writeVarUint8Array(encoder, awarenessProtocol.encodeAwarenessUpdate(awareness, Array.from(awarenessStates.keys())))\n        sendWebrtcConn(this, encoder)\n      }\n    })\n    this.peer.on('close', () => {\n      this.connected = false\n      this.closed = true\n      if (room.webrtcConns.has(this.remotePeerId)) {\n        room.webrtcConns.delete(this.remotePeerId)\n        room.provider.emit('peers', [{\n          removed: [this.remotePeerId],\n          added: [],\n          webrtcPeers: Array.from(room.webrtcConns.keys()),\n          bcPeers: Array.from(room.bcConns)\n        }])\n      }\n      checkIsSynced(room)\n      this.peer.destroy()\n      log('closed connection to ', logging.BOLD, remotePeerId)\n      announceSignalingInfo(room)\n    })\n    this.peer.on('error', err => {\n      log('Error in connection to ', logging.BOLD, remotePeerId, ': ', err)\n      announceSignalingInfo(room)\n    })\n    this.peer.on('data', data => {\n      const answer = readPeerMessage(this, data)\n      if (answer !== null) {\n        sendWebrtcConn(this, answer)\n      }\n    })\n  }\n\n  destroy () {\n    this.peer.destroy()\n  }\n}\n\n/**\n * @param {Room} room\n * @param {Uint8Array} m\n */\nconst broadcastBcMessage = (room, m) => cryptoutils.encrypt(m, room.key).then(data =>\n  room.mux(() =>\n    bc.publish(room.name, data)\n  )\n)\n\n/**\n * @param {Room} room\n * @param {Uint8Array} m\n */\nconst broadcastRoomMessage = (room, m) => {\n  if (room.bcconnected) {\n    broadcastBcMessage(room, m)\n  }\n  broadcastWebrtcConn(room, m)\n}\n\n/**\n * @param {Room} room\n */\nconst announceSignalingInfo = room => {\n  signalingConns.forEach(conn => {\n    // only subcribe if connection is established, otherwise the conn automatically subscribes to all rooms\n    if (conn.connected) {\n      conn.send({ type: 'subscribe', topics: [room.name] })\n      if (room.webrtcConns.size < room.provider.maxConns) {\n        publishSignalingMessage(conn, room, { type: 'announce', from: room.peerId })\n      }\n    }\n  })\n}\n\n/**\n * @param {Room} room\n */\nconst broadcastBcPeerId = room => {\n  if (room.provider.filterBcConns) {\n    // broadcast peerId via broadcastchannel\n    const encoderPeerIdBc = encoding.createEncoder()\n    encoding.writeVarUint(encoderPeerIdBc, messageBcPeerId)\n    encoding.writeUint8(encoderPeerIdBc, 1)\n    encoding.writeVarString(encoderPeerIdBc, room.peerId)\n    broadcastBcMessage(room, encoding.toUint8Array(encoderPeerIdBc))\n  }\n}\n\nexport class Room {\n  /**\n   * @param {Y.Doc} doc\n   * @param {WebrtcProvider} provider\n   * @param {string} name\n   * @param {CryptoKey|null} key\n   */\n  constructor (doc, provider, name, key) {\n    /**\n     * Do not assume that peerId is unique. This is only meant for sending signaling messages.\n     *\n     * @type {string}\n     */\n    this.peerId = random.uuidv4()\n    this.doc = doc\n    /**\n     * @type {awarenessProtocol.Awareness}\n     */\n    this.awareness = provider.awareness\n    this.provider = provider\n    this.synced = false\n    this.name = name\n    // @todo make key secret by scoping\n    this.key = key\n    /**\n     * @type {Map<string, WebrtcConn>}\n     */\n    this.webrtcConns = new Map()\n    /**\n     * @type {Set<string>}\n     */\n    this.bcConns = new Set()\n    this.mux = createMutex()\n    this.bcconnected = false\n    /**\n     * @param {ArrayBuffer} data\n     */\n    this._bcSubscriber = data =>\n      cryptoutils.decrypt(new Uint8Array(data), key).then(m =>\n        this.mux(() => {\n          const reply = readMessage(this, m, () => {})\n          if (reply) {\n            broadcastBcMessage(this, encoding.toUint8Array(reply))\n          }\n        })\n      )\n    /**\n     * Listens to Yjs updates and sends them to remote peers\n     *\n     * @param {Uint8Array} update\n     * @param {any} origin\n     */\n    this._docUpdateHandler = (update, origin) => {\n      const encoder = encoding.createEncoder()\n      encoding.writeVarUint(encoder, messageSync)\n      syncProtocol.writeUpdate(encoder, update)\n      broadcastRoomMessage(this, encoding.toUint8Array(encoder))\n    }\n    /**\n     * Listens to Awareness updates and sends them to remote peers\n     *\n     * @param {any} changed\n     * @param {any} origin\n     */\n    this._awarenessUpdateHandler = ({ added, updated, removed }, origin) => {\n      const changedClients = added.concat(updated).concat(removed)\n      const encoderAwareness = encoding.createEncoder()\n      encoding.writeVarUint(encoderAwareness, messageAwareness)\n      encoding.writeVarUint8Array(encoderAwareness, awarenessProtocol.encodeAwarenessUpdate(this.awareness, changedClients))\n      broadcastRoomMessage(this, encoding.toUint8Array(encoderAwareness))\n    }\n    this.doc.on('update', this._docUpdateHandler)\n    this.awareness.on('update', this._awarenessUpdateHandler)\n    window.addEventListener('beforeunload', () => {\n      awarenessProtocol.removeAwarenessStates(this.awareness, [doc.clientID], 'window unload')\n      rooms.forEach(room => {\n        room.disconnect()\n      })\n    })\n  }\n\n  connect () {\n    // signal through all available signaling connections\n    announceSignalingInfo(this)\n    const roomName = this.name\n    bc.subscribe(roomName, this._bcSubscriber)\n    this.bcconnected = true\n    // broadcast peerId via broadcastchannel\n    broadcastBcPeerId(this)\n    // write sync step 1\n    const encoderSync = encoding.createEncoder()\n    encoding.writeVarUint(encoderSync, messageSync)\n    syncProtocol.writeSyncStep1(encoderSync, this.doc)\n    broadcastBcMessage(this, encoding.toUint8Array(encoderSync))\n    // broadcast local state\n    const encoderState = encoding.createEncoder()\n    encoding.writeVarUint(encoderState, messageSync)\n    syncProtocol.writeSyncStep2(encoderState, this.doc)\n    broadcastBcMessage(this, encoding.toUint8Array(encoderState))\n    // write queryAwareness\n    const encoderAwarenessQuery = encoding.createEncoder()\n    encoding.writeVarUint(encoderAwarenessQuery, messageQueryAwareness)\n    broadcastBcMessage(this, encoding.toUint8Array(encoderAwarenessQuery))\n    // broadcast local awareness state\n    const encoderAwarenessState = encoding.createEncoder()\n    encoding.writeVarUint(encoderAwarenessState, messageAwareness)\n    encoding.writeVarUint8Array(encoderAwarenessState, awarenessProtocol.encodeAwarenessUpdate(this.awareness, [this.doc.clientID]))\n    broadcastBcMessage(this, encoding.toUint8Array(encoderAwarenessState))\n  }\n\n  disconnect () {\n    // signal through all available signaling connections\n    signalingConns.forEach(conn => {\n      if (conn.connected) {\n        conn.send({ type: 'unsubscribe', topics: [this.name] })\n      }\n    })\n    awarenessProtocol.removeAwarenessStates(this.awareness, [this.doc.clientID], 'disconnect')\n    // broadcast peerId removal via broadcastchannel\n    const encoderPeerIdBc = encoding.createEncoder()\n    encoding.writeVarUint(encoderPeerIdBc, messageBcPeerId)\n    encoding.writeUint8(encoderPeerIdBc, 0) // remove peerId from other bc peers\n    encoding.writeVarString(encoderPeerIdBc, this.peerId)\n    broadcastBcMessage(this, encoding.toUint8Array(encoderPeerIdBc))\n\n    bc.unsubscribe(this.name, this._bcSubscriber)\n    this.bcconnected = false\n    this.doc.off('update', this._docUpdateHandler)\n    this.awareness.off('update', this._awarenessUpdateHandler)\n    this.webrtcConns.forEach(conn => conn.destroy())\n  }\n\n  destroy () {\n    this.disconnect()\n  }\n}\n\n/**\n * @param {Y.Doc} doc\n * @param {WebrtcProvider} provider\n * @param {string} name\n * @param {CryptoKey|null} key\n * @return {Room}\n */\nconst openRoom = (doc, provider, name, key) => {\n  // there must only be one room\n  if (rooms.has(name)) {\n    throw error.create(`A Yjs Doc connected to room \"${name}\" already exists!`)\n  }\n  const room = new Room(doc, provider, name, key)\n  rooms.set(name, /** @type {Room} */ (room))\n  return room\n}\n\n/**\n * @param {SignalingConn} conn\n * @param {Room} room\n * @param {any} data\n */\nconst publishSignalingMessage = (conn, room, data) => {\n  if (room.key) {\n    cryptoutils.encryptJson(data, room.key).then(data => {\n      conn.send({ type: 'publish', topic: room.name, data: buffer.toBase64(data) })\n    })\n  } else {\n    conn.send({ type: 'publish', topic: room.name, data })\n  }\n}\n\nexport class SignalingConn extends ws.WebsocketClient {\n  constructor (url) {\n    super(url)\n    /**\n     * @type {Set<WebrtcProvider>}\n     */\n    this.providers = new Set()\n    this.on('connect', () => {\n      log(`connected (${url})`)\n      const topics = Array.from(rooms.keys())\n      this.send({ type: 'subscribe', topics })\n      rooms.forEach(room =>\n        publishSignalingMessage(this, room, { type: 'announce', from: room.peerId })\n      )\n    })\n    this.on('message', m => {\n      switch (m.type) {\n        case 'publish': {\n          const roomName = m.topic\n          const room = rooms.get(roomName)\n          if (room == null || typeof roomName !== 'string') {\n            return\n          }\n          const execMessage = data => {\n            const webrtcConns = room.webrtcConns\n            const peerId = room.peerId\n            if (data == null || data.from === peerId || (data.to !== undefined && data.to !== peerId) || room.bcConns.has(data.from)) {\n              // ignore messages that are not addressed to this conn, or from clients that are connected via broadcastchannel\n              return\n            }\n            const emitPeerChange = webrtcConns.has(data.from) ? () => {} : () =>\n              room.provider.emit('peers', [{\n                removed: [],\n                added: [data.from],\n                webrtcPeers: Array.from(room.webrtcConns.keys()),\n                bcPeers: Array.from(room.bcConns)\n              }])\n            switch (data.type) {\n              case 'announce':\n                if (webrtcConns.size < room.provider.maxConns) {\n                  map.setIfUndefined(webrtcConns, data.from, () => new WebrtcConn(this, true, data.from, room))\n                  emitPeerChange()\n                }\n                break\n              case 'signal':\n                if (data.to === peerId) {\n                  map.setIfUndefined(webrtcConns, data.from, () => new WebrtcConn(this, false, data.from, room)).peer.signal(data.signal)\n                  emitPeerChange()\n                }\n                break\n            }\n          }\n          if (room.key) {\n            if (typeof m.data === 'string') {\n              cryptoutils.decryptJson(buffer.fromBase64(m.data), room.key).then(execMessage)\n            }\n          } else {\n            execMessage(m.data)\n          }\n        }\n      }\n    })\n    this.on('disconnect', () => log(`disconnect (${url})`))\n  }\n}\n\n/**\n * @extends Observable<string>\n */\nexport class WebrtcProvider extends Observable {\n  /**\n   * @param {string} roomName\n   * @param {Y.Doc} doc\n   * @param {Object} [opts]\n   * @param {Array<string>} [opts.signaling]\n   * @param {string?} [opts.password]\n   * @param {awarenessProtocol.Awareness} [opts.awareness]\n   * @param {number} [opts.maxConns]\n   * @param {boolean} [opts.filterBcConns]\n   * @param {any} [opts.peerOpts]\n   */\n  constructor (\n    roomName,\n    doc,\n    {\n      signaling = ['wss://signaling.yjs.dev', 'wss://y-webrtc-signaling-eu.herokuapp.com', 'wss://y-webrtc-signaling-us.herokuapp.com'],\n      password = null,\n      awareness = new awarenessProtocol.Awareness(doc),\n      maxConns = 20 + math.floor(random.rand() * 15), // the random factor reduces the chance that n clients form a cluster\n      filterBcConns = true,\n      peerOpts = {} // simple-peer options. See https://github.com/feross/simple-peer#peer--new-peeropts\n    } = {}\n  ) {\n    super()\n    this.roomName = roomName\n    this.doc = doc\n    this.filterBcConns = filterBcConns\n    /**\n     * @type {awarenessProtocol.Awareness}\n     */\n    this.awareness = awareness\n    this.shouldConnect = false\n    this.signalingUrls = signaling\n    this.signalingConns = []\n    this.maxConns = maxConns\n    this.peerOpts = peerOpts\n    /**\n     * @type {PromiseLike<CryptoKey | null>}\n     */\n    this.key = password ? cryptoutils.deriveKey(password, roomName) : /** @type {PromiseLike<null>} */ (promise.resolve(null))\n    /**\n     * @type {Room|null}\n     */\n    this.room = null\n    this.key.then(key => {\n      this.room = openRoom(doc, this, roomName, key)\n      if (this.shouldConnect) {\n        this.room.connect()\n      } else {\n        this.room.disconnect()\n      }\n    })\n    this.connect()\n    this.destroy = this.destroy.bind(this)\n    doc.on('destroy', this.destroy)\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get connected () {\n    return this.room !== null && this.shouldConnect\n  }\n\n  connect () {\n    this.shouldConnect = true\n    this.signalingUrls.forEach(url => {\n      const signalingConn = map.setIfUndefined(signalingConns, url, () => new SignalingConn(url))\n      this.signalingConns.push(signalingConn)\n      signalingConn.providers.add(this)\n    })\n    if (this.room) {\n      this.room.connect()\n    }\n  }\n\n  disconnect () {\n    this.shouldConnect = false\n    this.signalingConns.forEach(conn => {\n      conn.providers.delete(this)\n      if (conn.providers.size === 0) {\n        conn.destroy()\n        signalingConns.delete(conn.url)\n      }\n    })\n    if (this.room) {\n      this.room.disconnect()\n    }\n  }\n\n  destroy () {\n    this.doc.off('destroy', this.destroy)\n    // need to wait for key before deleting room\n    this.key.then(() => {\n      /** @type {Room} */ (this.room).destroy()\n      rooms.delete(this.roomName)\n    })\n    super.destroy()\n  }\n}\n","/* interact.js 1.10.11 | https://interactjs.io/license */\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.interact = f()}})(function(){var define,module,exports;\n","export default (thing: any) => !!(thing && thing.Window) && thing instanceof thing.Window\n","import isWindow from './isWindow'\n\nexport let realWindow = undefined as Window\n\nlet win = undefined as Window\nexport { win as window }\n\nexport function init (window: Window & { wrap?: (...args: any[]) => any }) {\n  // get wrapped window if using Shadow DOM polyfill\n\n  realWindow = window\n\n  // create a TextNode\n  const el = window.document.createTextNode('')\n\n  // check if it's wrapped by a polyfill\n  if (el.ownerDocument !== window.document && typeof window.wrap === 'function' && window.wrap(el) === el) {\n    // use wrapped window\n    window = window.wrap(window)\n  }\n\n  win = window\n}\n\nif (typeof window !== 'undefined' && !!window) {\n  init(window)\n}\n\nexport function getWindow (node: any) {\n  if (isWindow(node)) {\n    return node\n  }\n\n  const rootNode = node.ownerDocument || node\n\n  return rootNode.defaultView || win.window\n}\n","import type { Element } from '@interactjs/types/index'\n\nimport isWindow from './isWindow'\nimport * as win from './window'\n\nconst window = (thing: any): thing is Window => thing === win.window || isWindow(thing)\n\nconst docFrag = (thing: any): thing is DocumentFragment => object(thing) && thing.nodeType === 11\n\nconst object = (thing: any): thing is { [index: string]: any } => !!thing && typeof thing === 'object'\n\nconst func = (thing: any): thing is (...args: any[]) => any => typeof thing === 'function'\n\nconst number = (thing: any): thing is number => typeof thing === 'number'\n\nconst bool = (thing: any): thing is boolean => typeof thing === 'boolean'\n\nconst string = (thing: any): thing is string => typeof thing === 'string'\n\nconst element = (thing: any): thing is Element => {\n  if (!thing || typeof thing !== 'object') {\n    return false\n  }\n\n  // eslint-disable-next-line import/no-named-as-default-member\n  const _window = win.getWindow(thing) || win.window\n\n  return /object|function/.test(typeof _window.Element)\n    ? thing instanceof _window.Element // DOM2\n    : thing.nodeType === 1 && typeof thing.nodeName === 'string'\n}\n\nconst plainObject: typeof object = (thing: any): thing is { [index: string]: any } =>\n  object(thing) && !!thing.constructor && /function Object\\b/.test(thing.constructor.toString())\n\nconst array = <T extends unknown>(thing: any): thing is T[] =>\n  object(thing) && typeof thing.length !== 'undefined' && func(thing.splice)\n\nexport default {\n  window,\n  docFrag,\n  object,\n  func,\n  number,\n  bool,\n  string,\n  element,\n  plainObject,\n  array,\n}\n","import type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { ActionMethod, DraggableOptions, DropzoneOptions } from '@interactjs/types/index'\nimport is from '@interactjs/utils/is'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    draggable: DraggableMethod\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    drag: DraggableOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface ActionMap {\n    drag?: typeof drag\n  }\n}\n\nexport type DragEvent = InteractEvent<'drag'>\n\nexport type DraggableMethod = ActionMethod<DraggableOptions>\n\nfunction install (scope: Scope) {\n  const { actions, Interactable, defaults } = scope\n\n  Interactable.prototype.draggable = drag.draggable\n\n  actions.map.drag = drag\n  actions.methodDict.drag = 'draggable'\n\n  defaults.actions.drag = drag.defaults\n}\n\nfunction beforeMove ({ interaction }) {\n  if (interaction.prepared.name !== 'drag') return\n\n  const axis = interaction.prepared.axis\n\n  if (axis === 'x') {\n    interaction.coords.cur.page.y = interaction.coords.start.page.y\n    interaction.coords.cur.client.y = interaction.coords.start.client.y\n\n    interaction.coords.velocity.client.y = 0\n    interaction.coords.velocity.page.y = 0\n  } else if (axis === 'y') {\n    interaction.coords.cur.page.x = interaction.coords.start.page.x\n    interaction.coords.cur.client.x = interaction.coords.start.client.x\n\n    interaction.coords.velocity.client.x = 0\n    interaction.coords.velocity.page.x = 0\n  }\n}\n\nfunction move ({ iEvent, interaction }) {\n  if (interaction.prepared.name !== 'drag') return\n\n  const axis = interaction.prepared.axis\n\n  if (axis === 'x' || axis === 'y') {\n    const opposite = axis === 'x' ? 'y' : 'x'\n\n    iEvent.page[opposite] = interaction.coords.start.page[opposite]\n    iEvent.client[opposite] = interaction.coords.start.client[opposite]\n    iEvent.delta[opposite] = 0\n  }\n}\n\n/**\n * ```js\n * interact(element).draggable({\n *     onstart: function (event) {},\n *     onmove : function (event) {},\n *     onend  : function (event) {},\n *\n *     // the axis in which the first movement must be\n *     // for the drag sequence to start\n *     // 'xy' by default - any direction\n *     startAxis: 'x' || 'y' || 'xy',\n *\n *     // 'xy' by default - don't restrict to one axis (move in any direction)\n *     // 'x' or 'y' to restrict movement to either axis\n *     // 'start' to restrict movement to the axis the drag started in\n *     lockAxis: 'x' || 'y' || 'xy' || 'start',\n *\n *     // max number of drags that can happen concurrently\n *     // with elements of this Interactable. Infinity by default\n *     max: Infinity,\n *\n *     // max number of drags that can target the same element+Interactable\n *     // 1 by default\n *     maxPerElement: 2\n * })\n *\n * var isDraggable = interact('element').draggable(); // true\n * ```\n *\n * Get or set whether drag actions can be performed on the target\n *\n * @alias Interactable.prototype.draggable\n *\n * @param {boolean | object} [options] true/false or An object with event\n * listeners to be fired on drag events (object makes the Interactable\n * draggable)\n * @return {boolean | Interactable} boolean indicating if this can be the\n * target of drag events, or this Interctable\n */\nconst draggable: DraggableMethod = function draggable (\n  this: Interactable,\n  options?: DraggableOptions | boolean,\n): any {\n  if (is.object(options)) {\n    this.options.drag.enabled = options.enabled !== false\n    this.setPerAction('drag', options)\n    this.setOnEvents('drag', options)\n\n    if (/^(xy|x|y|start)$/.test(options.lockAxis)) {\n      this.options.drag.lockAxis = options.lockAxis\n    }\n    if (/^(xy|x|y)$/.test(options.startAxis)) {\n      this.options.drag.startAxis = options.startAxis\n    }\n\n    return this\n  }\n\n  if (is.bool(options)) {\n    this.options.drag.enabled = options\n\n    return this\n  }\n\n  return this.options.drag\n}\n\nconst drag: Plugin = {\n  id: 'actions/drag',\n  install,\n  listeners: {\n    'interactions:before-action-move': beforeMove,\n    'interactions:action-resume': beforeMove,\n\n    // dragmove\n    'interactions:action-move': move,\n    'auto-start:check': (arg) => {\n      const { interaction, interactable, buttons } = arg\n      const dragOptions = interactable.options.drag\n\n      if (\n        !(dragOptions && dragOptions.enabled) ||\n        // check mouseButton setting if the pointer is down\n        (interaction.pointerIsDown &&\n          /mouse|pointer/.test(interaction.pointerType) &&\n          (buttons & interactable.options.drag.mouseButtons) === 0)\n      ) {\n        return undefined\n      }\n\n      arg.action = {\n        name: 'drag',\n        axis: dragOptions.lockAxis === 'start' ? dragOptions.startAxis : dragOptions.lockAxis,\n      }\n\n      return false\n    },\n  },\n  draggable,\n  beforeMove,\n  move,\n  defaults: {\n    startAxis: 'xy',\n    lockAxis: 'xy',\n  } as DropzoneOptions,\n\n  getCursor () {\n    return 'move'\n  },\n}\n\nexport default drag\n","const domObjects: {\n  init: any\n  document: Document\n  DocumentFragment: typeof DocumentFragment\n  SVGElement: typeof SVGElement\n  SVGSVGElement: typeof SVGSVGElement\n  SVGElementInstance: any\n  Element: typeof Element\n  HTMLElement: typeof HTMLElement\n  Event: typeof Event\n  Touch: typeof Touch\n  PointerEvent: typeof PointerEvent\n} = {\n  init,\n  document: null,\n  DocumentFragment: null,\n  SVGElement: null,\n  SVGSVGElement: null,\n  SVGElementInstance: null,\n  Element: null,\n  HTMLElement: null,\n  Event: null,\n  Touch: null,\n  PointerEvent: null,\n}\n\nfunction blank () {}\n\nexport default domObjects\n\nfunction init (window: Window) {\n  const win = window as any\n\n  domObjects.document = win.document\n  domObjects.DocumentFragment = win.DocumentFragment || blank\n  domObjects.SVGElement = win.SVGElement || blank\n  domObjects.SVGSVGElement = win.SVGSVGElement || blank\n  domObjects.SVGElementInstance = win.SVGElementInstance || blank\n  domObjects.Element = win.Element || blank\n  domObjects.HTMLElement = win.HTMLElement || domObjects.Element\n\n  domObjects.Event = win.Event\n  domObjects.Touch = win.Touch || blank\n  domObjects.PointerEvent = win.PointerEvent || win.MSPointerEvent\n}\n","import domObjects from './domObjects'\nimport is from './is'\n\nconst browser = {\n  init,\n  supportsTouch: null as boolean,\n  supportsPointerEvent: null as boolean,\n  isIOS7: null as boolean,\n  isIOS: null as boolean,\n  isIe9: null as boolean,\n  isOperaMobile: null as boolean,\n  prefixedMatchesSelector: null as 'matches',\n  pEventTypes: null as {\n    up: string\n    down: string\n    over: string\n    out: string\n    move: string\n    cancel: string\n  },\n  wheelEvent: null as string,\n}\n\nfunction init (window: any) {\n  const Element = domObjects.Element\n  const navigator: Partial<Navigator> = window.navigator || {}\n\n  // Does the browser support touch input?\n  browser.supportsTouch =\n    'ontouchstart' in window ||\n    (is.func(window.DocumentTouch) && domObjects.document instanceof window.DocumentTouch)\n\n  // Does the browser support PointerEvents\n  browser.supportsPointerEvent = navigator.pointerEnabled !== false && !!domObjects.PointerEvent\n\n  browser.isIOS = /iP(hone|od|ad)/.test(navigator.platform)\n\n  // scrolling doesn't change the result of getClientRects on iOS 7\n  browser.isIOS7 = /iP(hone|od|ad)/.test(navigator.platform) && /OS 7[^\\d]/.test(navigator.appVersion)\n\n  browser.isIe9 = /MSIE 9/.test(navigator.userAgent)\n\n  // Opera Mobile must be handled differently\n  browser.isOperaMobile =\n    navigator.appName === 'Opera' && browser.supportsTouch && /Presto/.test(navigator.userAgent)\n\n  // prefix matchesSelector\n  browser.prefixedMatchesSelector = ('matches' in Element.prototype\n    ? 'matches'\n    : 'webkitMatchesSelector' in Element.prototype\n      ? 'webkitMatchesSelector'\n      : 'mozMatchesSelector' in Element.prototype\n        ? 'mozMatchesSelector'\n        : 'oMatchesSelector' in Element.prototype\n          ? 'oMatchesSelector'\n          : 'msMatchesSelector') as 'matches'\n\n  browser.pEventTypes = browser.supportsPointerEvent\n    ? domObjects.PointerEvent === window.MSPointerEvent\n      ? {\n        up: 'MSPointerUp',\n        down: 'MSPointerDown',\n        over: 'mouseover',\n        out: 'mouseout',\n        move: 'MSPointerMove',\n        cancel: 'MSPointerCancel',\n      }\n      : {\n        up: 'pointerup',\n        down: 'pointerdown',\n        over: 'pointerover',\n        out: 'pointerout',\n        move: 'pointermove',\n        cancel: 'pointercancel',\n      }\n    : null\n\n  // because Webkit and Opera still use 'mousewheel' event type\n  browser.wheelEvent = domObjects.document && 'onmousewheel' in domObjects.document ? 'mousewheel' : 'wheel'\n}\n\nexport default browser\n","import type { Rect, Target, Element } from '@interactjs/types/index'\n\nimport browser from './browser'\nimport domObjects from './domObjects'\nimport is from './is'\nimport * as win from './window'\n\nexport function nodeContains (parent: Node, child: Node) {\n  if (parent.contains) {\n    return parent.contains(child as Node)\n  }\n\n  while (child) {\n    if (child === parent) {\n      return true\n    }\n\n    child = (child as Node).parentNode\n  }\n\n  return false\n}\n\nexport function closest (element: Node, selector: string) {\n  while (is.element(element)) {\n    if (matchesSelector(element, selector)) {\n      return element\n    }\n\n    element = parentNode(element)\n  }\n\n  return null\n}\n\nexport function parentNode (node: Node | Document) {\n  let parent = node.parentNode\n\n  if (is.docFrag(parent)) {\n    // skip past #shado-root fragments\n    // tslint:disable-next-line\n    while ((parent = (parent as any).host) && is.docFrag(parent)) {\n      continue\n    }\n\n    return parent\n  }\n\n  return parent\n}\n\nexport function matchesSelector (element: Element, selector: string) {\n  // remove /deep/ from selectors if shadowDOM polyfill is used\n  if (win.window !== win.realWindow) {\n    selector = selector.replace(/\\/deep\\//g, ' ')\n  }\n\n  return element[browser.prefixedMatchesSelector](selector)\n}\n\nconst getParent = (el: Node | Document | ShadowRoot) => el.parentNode || (el as ShadowRoot).host\n\n// Test for the element that's \"above\" all other qualifiers\nexport function indexOfDeepestElement (elements: Element[] | NodeListOf<globalThis.Element>) {\n  let deepestNodeParents: Node[] = []\n  let deepestNodeIndex: number\n\n  for (let i = 0; i < elements.length; i++) {\n    const currentNode = elements[i]\n    const deepestNode: Node = elements[deepestNodeIndex]\n\n    // node may appear in elements array multiple times\n    if (!currentNode || i === deepestNodeIndex) {\n      continue\n    }\n\n    if (!deepestNode) {\n      deepestNodeIndex = i\n      continue\n    }\n\n    const currentNodeParent = getParent(currentNode)\n    const deepestNodeParent = getParent(deepestNode)\n\n    // check if the deepest or current are document.documentElement/rootElement\n    // - if the current node is, do nothing and continue\n    if (currentNodeParent === currentNode.ownerDocument) {\n      continue\n    }\n    // - if deepest is, update with the current node and continue to next\n    else if (deepestNodeParent === currentNode.ownerDocument) {\n      deepestNodeIndex = i\n      continue\n    }\n\n    // compare zIndex of siblings\n    if (currentNodeParent === deepestNodeParent) {\n      if (zIndexIsHigherThan(currentNode, deepestNode)) {\n        deepestNodeIndex = i\n      }\n\n      continue\n    }\n\n    // populate the ancestry array for the latest deepest node\n    deepestNodeParents = deepestNodeParents.length ? deepestNodeParents : getNodeParents(deepestNode)\n\n    let ancestryStart: Node\n\n    // if the deepest node is an HTMLElement and the current node is a non root svg element\n    if (\n      deepestNode instanceof domObjects.HTMLElement &&\n      currentNode instanceof domObjects.SVGElement &&\n      !(currentNode instanceof domObjects.SVGSVGElement)\n    ) {\n      // TODO: is this check necessary? Was this for HTML elements embedded in SVG?\n      if (currentNode === deepestNodeParent) {\n        continue\n      }\n\n      ancestryStart = currentNode.ownerSVGElement\n    } else {\n      ancestryStart = currentNode\n    }\n\n    const currentNodeParents = getNodeParents(ancestryStart, deepestNode.ownerDocument)\n    let commonIndex = 0\n\n    // get (position of closest common ancestor) + 1\n    while (\n      currentNodeParents[commonIndex] &&\n      currentNodeParents[commonIndex] === deepestNodeParents[commonIndex]\n    ) {\n      commonIndex++\n    }\n\n    const parents = [\n      currentNodeParents[commonIndex - 1],\n      currentNodeParents[commonIndex],\n      deepestNodeParents[commonIndex],\n    ]\n\n    if (parents[0]) {\n      let child = parents[0].lastChild\n\n      while (child) {\n        if (child === parents[1]) {\n          deepestNodeIndex = i\n          deepestNodeParents = currentNodeParents\n\n          break\n        } else if (child === parents[2]) {\n          break\n        }\n\n        child = child.previousSibling\n      }\n    }\n  }\n\n  return deepestNodeIndex\n}\n\nfunction getNodeParents (node: Node, limit?: Node) {\n  const parents: Node[] = []\n  let parent: Node = node\n  let parentParent: Node\n\n  while ((parentParent = getParent(parent)) && parent !== limit && parentParent !== parent.ownerDocument) {\n    parents.unshift(parent)\n    parent = parentParent\n  }\n\n  return parents\n}\n\nfunction zIndexIsHigherThan (higherNode: Node, lowerNode: Node) {\n  const higherIndex = parseInt(win.getWindow(higherNode).getComputedStyle(higherNode).zIndex, 10) || 0\n  const lowerIndex = parseInt(win.getWindow(lowerNode).getComputedStyle(lowerNode).zIndex, 10) || 0\n\n  return higherIndex >= lowerIndex\n}\n\nexport function matchesUpTo (element: Element, selector: string, limit: Node) {\n  while (is.element(element)) {\n    if (matchesSelector(element, selector)) {\n      return true\n    }\n\n    element = parentNode(element) as Element\n\n    if (element === limit) {\n      return matchesSelector(element, selector)\n    }\n  }\n\n  return false\n}\n\nexport function getActualElement (element: Element) {\n  return (element as SVGElement).correspondingUseElement || element\n}\n\nexport function getScrollXY (relevantWindow?: Window) {\n  relevantWindow = relevantWindow || win.window\n  return {\n    x: relevantWindow.scrollX || relevantWindow.document.documentElement.scrollLeft,\n    y: relevantWindow.scrollY || relevantWindow.document.documentElement.scrollTop,\n  }\n}\n\nexport function getElementClientRect (element: Element): Required<Rect> {\n  const clientRect =\n    element instanceof domObjects.SVGElement ? element.getBoundingClientRect() : element.getClientRects()[0]\n\n  return (\n    clientRect && {\n      left: clientRect.left,\n      right: clientRect.right,\n      top: clientRect.top,\n      bottom: clientRect.bottom,\n      width: clientRect.width || clientRect.right - clientRect.left,\n      height: clientRect.height || clientRect.bottom - clientRect.top,\n    }\n  )\n}\n\nexport function getElementRect (element: Element) {\n  const clientRect = getElementClientRect(element)\n\n  if (!browser.isIOS7 && clientRect) {\n    const scroll = getScrollXY(win.getWindow(element))\n\n    clientRect.left += scroll.x\n    clientRect.right += scroll.x\n    clientRect.top += scroll.y\n    clientRect.bottom += scroll.y\n  }\n\n  return clientRect\n}\n\nexport function getPath (node: Node | Document) {\n  const path = []\n\n  while (node) {\n    path.push(node)\n    node = parentNode(node)\n  }\n\n  return path\n}\n\nexport function trySelector (value: Target) {\n  if (!is.string(value)) {\n    return false\n  }\n\n  // an exception will be raised if it is invalid\n  domObjects.document.querySelector(value)\n  return true\n}\n","export default function extend<T, U extends object> (dest: U & Partial<T>, source: T): T & U {\n  for (const prop in source) {\n    ;((dest as unknown) as T)[prop] = source[prop]\n  }\n\n  const ret = dest as T & U\n\n  return ret\n}\n","import type {\n  HasGetRect,\n  RectResolvable,\n  Rect,\n  Element,\n  Point,\n  FullRect,\n  EdgeOptions,\n} from '@interactjs/types'\n\nimport { closest, getElementRect, parentNode } from './domUtils'\nimport extend from './extend'\nimport is from './is'\n\nexport function getStringOptionResult (value: any, target: HasGetRect, element: Node) {\n  if (value === 'parent') {\n    return parentNode(element)\n  }\n\n  if (value === 'self') {\n    return target.getRect(element as Element)\n  }\n\n  return closest(element, value)\n}\n\nexport function resolveRectLike<T extends any[]> (\n  value: RectResolvable<T>,\n  target?: HasGetRect,\n  element?: Node,\n  functionArgs?: T,\n) {\n  let returnValue: any = value\n  if (is.string(returnValue)) {\n    returnValue = getStringOptionResult(returnValue, target, element)\n  } else if (is.func(returnValue)) {\n    returnValue = returnValue(...functionArgs)\n  }\n\n  if (is.element(returnValue)) {\n    returnValue = getElementRect(returnValue)\n  }\n\n  return returnValue as Rect\n}\n\nexport function rectToXY (rect: Rect | Point) {\n  return (\n    rect && {\n      x: 'x' in rect ? rect.x : rect.left,\n      y: 'y' in rect ? rect.y : rect.top,\n    }\n  )\n}\n\nexport function xywhToTlbr<T extends Partial<Rect & Point>> (rect: T) {\n  if (rect && !('left' in rect && 'top' in rect)) {\n    rect = extend({}, rect)\n\n    rect.left = rect.x || 0\n    rect.top = rect.y || 0\n    rect.right = rect.right || rect.left + rect.width\n    rect.bottom = rect.bottom || rect.top + rect.height\n  }\n\n  return rect as Rect & T\n}\n\nexport function tlbrToXywh (rect: Rect & Partial<Point>) {\n  if (rect && !('x' in rect && 'y' in rect)) {\n    rect = extend({}, rect)\n\n    rect.x = rect.left || 0\n    rect.y = rect.top || 0\n    rect.width = rect.width || (rect.right || 0) - rect.x\n    rect.height = rect.height || (rect.bottom || 0) - rect.y\n  }\n\n  return rect as FullRect & Point\n}\n\nexport function addEdges (edges: EdgeOptions, rect: Rect, delta: Point) {\n  if (edges.left) {\n    rect.left += delta.x\n  }\n  if (edges.right) {\n    rect.right += delta.x\n  }\n  if (edges.top) {\n    rect.top += delta.y\n  }\n  if (edges.bottom) {\n    rect.bottom += delta.y\n  }\n\n  rect.width = rect.right - rect.left\n  rect.height = rect.bottom - rect.top\n}\n","import type { PerActionDefaults } from '@interactjs/core/options'\nimport type { ActionName } from '@interactjs/core/scope'\nimport type { HasGetRect } from '@interactjs/types/index'\n\nimport { rectToXY, resolveRectLike } from './rect'\n\nexport default function (\n  target: HasGetRect & { options: PerActionDefaults },\n  element: Node,\n  actionName?: ActionName,\n) {\n  const actionOptions = (target.options as any)[actionName]\n  const actionOrigin = actionOptions && actionOptions.origin\n  const origin = actionOrigin || target.options.origin\n\n  const originRect = resolveRectLike(origin, target, element, [target && element])\n\n  return rectToXY(originRect) || { x: 0, y: 0 }\n}\n","import type { EventTypes, Listener, ListenersArg } from '@interactjs/types/index'\n\nimport extend from './extend'\nimport is from './is'\n\nexport interface NormalizedListeners {\n  [type: string]: Listener[]\n}\n\nexport default function normalize (\n  type: EventTypes,\n  listeners?: ListenersArg | ListenersArg[],\n  result?: NormalizedListeners,\n): NormalizedListeners {\n  result = result || {}\n\n  if (is.string(type) && type.search(' ') !== -1) {\n    type = split(type)\n  }\n\n  if (is.array(type)) {\n    return type.reduce<NormalizedListeners>((acc, t) => extend(acc, normalize(t, listeners, result)), result)\n  }\n\n  // ({ type: fn }) -> ('', { type: fn })\n  if (is.object(type)) {\n    listeners = type\n    type = ''\n  }\n\n  if (is.func(listeners)) {\n    result[type] = result[type] || []\n    result[type].push(listeners)\n  } else if (is.array(listeners)) {\n    for (const l of listeners) {\n      normalize(type, l, result)\n    }\n  } else if (is.object(listeners)) {\n    for (const prefix in listeners) {\n      const combinedTypes = split(prefix).map((p) => `${type}${p}`)\n\n      normalize(combinedTypes, listeners[prefix], result)\n    }\n  }\n\n  return result as NormalizedListeners\n}\n\nfunction split (type: string) {\n  return type.trim().split(/ +/)\n}\n","export default (x: number, y: number) => Math.sqrt(x * x + y * y)\n","function pointerExtend<T> (dest: Partial<T>, source: T) {\n  for (const prop in source) {\n    const prefixedPropREs = pointerExtend.prefixedPropREs\n    let deprecated = false\n\n    // skip deprecated prefixed properties\n    for (const vendor in prefixedPropREs) {\n      if (prop.indexOf(vendor) === 0 && prefixedPropREs[vendor].test(prop)) {\n        deprecated = true\n        break\n      }\n    }\n\n    if (!deprecated && typeof source[prop] !== 'function') {\n      dest[prop] = source[prop]\n    }\n  }\n  return dest\n}\n\npointerExtend.prefixedPropREs = {\n  webkit: /(Movement[XY]|Radius[XY]|RotationAngle|Force)$/,\n  moz: /(Pressure)$/,\n} as { [prefix: string]: RegExp }\n\nexport default pointerExtend\n","import type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { CoordsSetMember, PointerType, Point, PointerEventType, Element } from '@interactjs/types/index'\n\nimport browser from './browser'\nimport dom from './domObjects'\nimport * as domUtils from './domUtils'\nimport hypot from './hypot'\nimport is from './is'\nimport pointerExtend from './pointerExtend'\n\nexport function copyCoords (dest: CoordsSetMember, src: CoordsSetMember) {\n  dest.page = dest.page || ({} as any)\n  dest.page.x = src.page.x\n  dest.page.y = src.page.y\n\n  dest.client = dest.client || ({} as any)\n  dest.client.x = src.client.x\n  dest.client.y = src.client.y\n\n  dest.timeStamp = src.timeStamp\n}\n\nexport function setCoordDeltas (targetObj: CoordsSetMember, prev: CoordsSetMember, cur: CoordsSetMember) {\n  targetObj.page.x = cur.page.x - prev.page.x\n  targetObj.page.y = cur.page.y - prev.page.y\n  targetObj.client.x = cur.client.x - prev.client.x\n  targetObj.client.y = cur.client.y - prev.client.y\n  targetObj.timeStamp = cur.timeStamp - prev.timeStamp\n}\n\nexport function setCoordVelocity (targetObj: CoordsSetMember, delta: CoordsSetMember) {\n  const dt = Math.max(delta.timeStamp / 1000, 0.001)\n\n  targetObj.page.x = delta.page.x / dt\n  targetObj.page.y = delta.page.y / dt\n  targetObj.client.x = delta.client.x / dt\n  targetObj.client.y = delta.client.y / dt\n  targetObj.timeStamp = dt\n}\n\nexport function setZeroCoords (targetObj: CoordsSetMember) {\n  targetObj.page.x = 0\n  targetObj.page.y = 0\n  targetObj.client.x = 0\n  targetObj.client.y = 0\n}\n\nexport function isNativePointer (pointer: any) {\n  return pointer instanceof dom.Event || pointer instanceof dom.Touch\n}\n\n// Get specified X/Y coords for mouse or event.touches[0]\nexport function getXY (type: string, pointer: PointerType | InteractEvent, xy: Point) {\n  xy = xy || ({} as Point)\n  type = type || 'page'\n\n  xy.x = pointer[(type + 'X') as keyof PointerType]\n  xy.y = pointer[(type + 'Y') as keyof PointerType]\n\n  return xy\n}\n\nexport function getPageXY (pointer: PointerType | InteractEvent, page?: Point) {\n  page = page || { x: 0, y: 0 }\n\n  // Opera Mobile handles the viewport and scrolling oddly\n  if (browser.isOperaMobile && isNativePointer(pointer)) {\n    getXY('screen', pointer, page)\n\n    page.x += window.scrollX\n    page.y += window.scrollY\n  } else {\n    getXY('page', pointer, page)\n  }\n\n  return page\n}\n\nexport function getClientXY (pointer: PointerType, client: Point) {\n  client = client || ({} as any)\n\n  if (browser.isOperaMobile && isNativePointer(pointer)) {\n    // Opera Mobile handles the viewport and scrolling oddly\n    getXY('screen', pointer, client)\n  } else {\n    getXY('client', pointer, client)\n  }\n\n  return client\n}\n\nexport function getPointerId (pointer: { pointerId?: number, identifier?: number, type?: string }) {\n  return is.number(pointer.pointerId) ? pointer.pointerId! : pointer.identifier!\n}\n\nexport function setCoords (dest: CoordsSetMember, pointers: any[], timeStamp: number) {\n  const pointer = pointers.length > 1 ? pointerAverage(pointers) : pointers[0]\n\n  getPageXY(pointer, dest.page)\n  getClientXY(pointer, dest.client)\n\n  dest.timeStamp = timeStamp\n}\n\nexport function getTouchPair (event: TouchEvent | PointerType[]) {\n  const touches: PointerType[] = []\n\n  // array of touches is supplied\n  if (is.array(event)) {\n    touches[0] = event[0]\n    touches[1] = event[1]\n  }\n  // an event\n  else {\n    if (event.type === 'touchend') {\n      if (event.touches.length === 1) {\n        touches[0] = event.touches[0]\n        touches[1] = event.changedTouches[0]\n      } else if (event.touches.length === 0) {\n        touches[0] = event.changedTouches[0]\n        touches[1] = event.changedTouches[1]\n      }\n    } else {\n      touches[0] = event.touches[0]\n      touches[1] = event.touches[1]\n    }\n  }\n\n  return touches\n}\n\nexport function pointerAverage (pointers: PointerType[]) {\n  const average = {\n    pageX: 0,\n    pageY: 0,\n    clientX: 0,\n    clientY: 0,\n    screenX: 0,\n    screenY: 0,\n  }\n\n  type CoordKeys = keyof typeof average\n\n  for (const pointer of pointers) {\n    for (const prop in average) {\n      average[prop as CoordKeys] += pointer[prop as CoordKeys]\n    }\n  }\n  for (const prop in average) {\n    average[prop as CoordKeys] /= pointers.length\n  }\n\n  return average\n}\n\nexport function touchBBox (event: PointerType[]) {\n  if (!event.length) {\n    return null\n  }\n\n  const touches = getTouchPair(event)\n  const minX = Math.min(touches[0].pageX, touches[1].pageX)\n  const minY = Math.min(touches[0].pageY, touches[1].pageY)\n  const maxX = Math.max(touches[0].pageX, touches[1].pageX)\n  const maxY = Math.max(touches[0].pageY, touches[1].pageY)\n\n  return {\n    x: minX,\n    y: minY,\n    left: minX,\n    top: minY,\n    right: maxX,\n    bottom: maxY,\n    width: maxX - minX,\n    height: maxY - minY,\n  }\n}\n\nexport function touchDistance (event: PointerType[] | TouchEvent, deltaSource: string) {\n  const sourceX = (deltaSource + 'X') as 'pageX'\n  const sourceY = (deltaSource + 'Y') as 'pageY'\n  const touches = getTouchPair(event)\n\n  const dx = touches[0][sourceX] - touches[1][sourceX]\n  const dy = touches[0][sourceY] - touches[1][sourceY]\n\n  return hypot(dx, dy)\n}\n\nexport function touchAngle (event: PointerType[] | TouchEvent, deltaSource: string) {\n  const sourceX = (deltaSource + 'X') as 'pageX'\n  const sourceY = (deltaSource + 'Y') as 'pageY'\n  const touches = getTouchPair(event)\n  const dx = touches[1][sourceX] - touches[0][sourceX]\n  const dy = touches[1][sourceY] - touches[0][sourceY]\n  const angle = (180 * Math.atan2(dy, dx)) / Math.PI\n\n  return angle\n}\n\nexport function getPointerType (pointer: { pointerType?: string, identifier?: number, type?: string }) {\n  return is.string(pointer.pointerType)\n    ? pointer.pointerType\n    : is.number(pointer.pointerType)\n      ? [undefined, undefined, 'touch', 'pen', 'mouse'][pointer.pointerType]!\n      : // if the PointerEvent API isn't available, then the \"pointer\" must\n    // be either a MouseEvent, TouchEvent, or Touch object\n      /touch/.test(pointer.type || '') || pointer instanceof dom.Touch\n        ? 'touch'\n        : 'mouse'\n}\n\n// [ event.target, event.currentTarget ]\nexport function getEventTargets (event: Event) {\n  const path = is.func(event.composedPath)\n    ? (event.composedPath() as Element[])\n    : ((event as unknown) as { path: Element[] }).path\n\n  return [\n    domUtils.getActualElement(path ? path[0] : (event.target as Element)),\n    domUtils.getActualElement(event.currentTarget as Element),\n  ]\n}\n\nexport function newCoords (): CoordsSetMember {\n  return {\n    page: { x: 0, y: 0 },\n    client: { x: 0, y: 0 },\n    timeStamp: 0,\n  }\n}\n\nexport function coordsToEvent (coords: MockCoords) {\n  const event = {\n    coords,\n    get page () {\n      return this.coords.page\n    },\n    get client () {\n      return this.coords.client\n    },\n    get timeStamp () {\n      return this.coords.timeStamp\n    },\n    get pageX () {\n      return this.coords.page.x\n    },\n    get pageY () {\n      return this.coords.page.y\n    },\n    get clientX () {\n      return this.coords.client.x\n    },\n    get clientY () {\n      return this.coords.client.y\n    },\n    get pointerId () {\n      return this.coords.pointerId\n    },\n    get target () {\n      return this.coords.target\n    },\n    get type () {\n      return this.coords.type\n    },\n    get pointerType () {\n      return this.coords.pointerType\n    },\n    get buttons () {\n      return this.coords.buttons\n    },\n    preventDefault () {},\n  }\n\n  return event as typeof event & PointerType & PointerEventType\n}\n\nexport interface MockCoords {\n  page: Point\n  client: Point\n  timeStamp?: number\n  pointerId?: any\n  target?: any\n  type?: string\n  pointerType?: string\n  buttons?: number\n}\n\nexport { pointerExtend }\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction, InteractionProxy } from '@interactjs/core/Interaction'\nimport type { ActionName } from '@interactjs/core/scope'\n\nexport class BaseEvent<T extends ActionName | null = never> {\n  type: string\n  target: EventTarget\n  currentTarget: Node\n  interactable: Interactable\n  _interaction: Interaction<T>\n  timeStamp: any\n  immediatePropagationStopped = false\n  propagationStopped = false\n\n  constructor (interaction: Interaction<T>) {\n    this._interaction = interaction\n  }\n\n  preventDefault () {}\n\n  /**\n   * Don't call any other listeners (even on the current target)\n   */\n  stopPropagation () {\n    this.propagationStopped = true\n  }\n\n  /**\n   * Don't call listeners on the remaining targets\n   */\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n}\n\n// defined outside of class definition to avoid assignment of undefined during\n// construction\nexport interface BaseEvent<T extends ActionName> {\n  interaction: InteractionProxy<T>\n}\n\n// getters and setters defined here to support typescript 3.6 and below which\n// don't support getter and setters in .d.ts files\nObject.defineProperty(BaseEvent.prototype, 'interaction', {\n  get (this: BaseEvent) {\n    return this._interaction._proxy\n  },\n  set (this: BaseEvent) {},\n})\n","type Filter<T> = (element: T, index: number, array: T[]) => boolean\n\nexport const contains = <T>(array: T[], target: T) => array.indexOf(target) !== -1\n\nexport const remove = <T>(array: T[], target: T) => array.splice(array.indexOf(target), 1)\n\nexport const merge = <T, U>(target: Array<T | U>, source: U[]) => {\n  for (const item of source) {\n    target.push(item)\n  }\n\n  return target\n}\n\nexport const from = <T = any>(source: ArrayLike<T>) => merge([] as T[], source as T[])\n\nexport const findIndex = <T>(array: T[], func: Filter<T>) => {\n  for (let i = 0; i < array.length; i++) {\n    if (func(array[i], i, array)) {\n      return i\n    }\n  }\n\n  return -1\n}\n\nexport const find = <T = any>(array: T[], func: Filter<T>) => array[findIndex(array, func)]\n","import { BaseEvent } from '@interactjs/core/BaseEvent'\nimport type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type { Element } from '@interactjs/types/index'\nimport * as arr from '@interactjs/utils/arr'\n\nimport type { DropState } from './plugin'\n\nexport class DropEvent extends BaseEvent<'drag'> {\n  target: Element\n  dropzone: Interactable\n  dragEvent: InteractEvent<'drag'>\n  relatedTarget: Element\n  draggable: Interactable\n  timeStamp: number\n  propagationStopped = false\n  immediatePropagationStopped = false\n\n  /**\n   * Class of events fired on dropzones during drags with acceptable targets.\n   */\n  constructor (dropState: DropState, dragEvent: InteractEvent<'drag'>, type: string) {\n    super(dragEvent._interaction)\n\n    const { element, dropzone } = type === 'dragleave' ? dropState.prev : dropState.cur\n\n    this.type = type\n    this.target = element\n    this.currentTarget = element\n    this.dropzone = dropzone\n    this.dragEvent = dragEvent\n    this.relatedTarget = dragEvent.target\n    this.draggable = dragEvent.interactable\n    this.timeStamp = dragEvent.timeStamp\n  }\n\n  /**\n   * If this is a `dropactivate` event, the dropzone element will be\n   * deactivated.\n   *\n   * If this is a `dragmove` or `dragenter`, a `dragleave` will be fired on the\n   * dropzone element and more.\n   */\n  reject () {\n    const { dropState } = this._interaction\n\n    if (\n      this.type !== 'dropactivate' &&\n      (!this.dropzone || dropState.cur.dropzone !== this.dropzone || dropState.cur.element !== this.target)\n    ) {\n      return\n    }\n\n    dropState.prev.dropzone = this.dropzone\n    dropState.prev.element = this.target\n\n    dropState.rejected = true\n    dropState.events.enter = null\n\n    this.stopImmediatePropagation()\n\n    if (this.type === 'dropactivate') {\n      const activeDrops = dropState.activeDrops\n      const index = arr.findIndex(\n        activeDrops,\n        ({ dropzone, element }) => dropzone === this.dropzone && element === this.target,\n      )\n\n      dropState.activeDrops.splice(index, 1)\n\n      const deactivateEvent = new DropEvent(dropState, this.dragEvent, 'dropdeactivate')\n\n      deactivateEvent.dropzone = this.dropzone\n      deactivateEvent.target = this.target\n\n      this.dropzone.fire(deactivateEvent)\n    } else {\n      this.dropzone.fire(new DropEvent(dropState, this.dragEvent, 'dragleave'))\n    }\n  }\n\n  preventDefault () {}\n\n  stopPropagation () {\n    this.propagationStopped = true\n  }\n\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n}\n","import type { EventPhase, InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { DropzoneOptions, Element, PointerEventType, Rect } from '@interactjs/types/index'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport is from '@interactjs/utils/is'\nimport normalizeListeners from '@interactjs/utils/normalizeListeners'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport type { DragEvent } from '../drag/plugin'\nimport drag from '../drag/plugin'\n\nimport { DropEvent } from './DropEvent'\n\nexport interface DropzoneMethod {\n  (this: Interactable, options: DropzoneOptions | boolean): Interactable\n  (): DropzoneOptions\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    dropzone: DropzoneMethod\n    dropCheck: (\n      dragEvent: InteractEvent,\n      event: PointerEventType,\n      draggable: Interactable,\n      draggableElement: Element,\n      dropElemen: Element,\n      rect: any,\n    ) => boolean\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    dropState?: DropState\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface InteractEvent {\n    prevDropzone?: Interactable\n    dropzone?: Interactable\n    dragEnter?: Element\n    dragLeave?: Element\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    drop: DropzoneOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface ActionMap {\n    drop?: typeof drop\n  }\n\n  interface Scope {\n    dynamicDrop?: boolean\n  }\n\n  interface SignalArgs {\n    'actions/drop:start': DropSignalArg\n    'actions/drop:move': DropSignalArg\n    'actions/drop:end': DropSignalArg\n  }\n}\n\ndeclare module '@interactjs/core/InteractStatic' {\n  interface InteractStatic {\n    dynamicDrop: (this: InteractStatic, newValue?: boolean) => boolean | this\n  }\n}\n\ninterface DropSignalArg {\n  interaction: Interaction<'drag'>\n  dragEvent: DragEvent\n}\n\nexport interface ActiveDrop {\n  dropzone: Interactable\n  element: Element\n  rect: Rect\n}\n\nexport interface DropState {\n  cur: {\n    // the dropzone a drag target might be dropped into\n    dropzone: Interactable\n    // the element at the time of checking\n    element: Element\n  }\n  prev: {\n    // the dropzone that was recently dragged away from\n    dropzone: Interactable\n    // the element at the time of checking\n    element: Element\n  }\n  // wheather the potential drop was rejected from a listener\n  rejected: boolean\n  // the drop events related to the current drag event\n  events: FiredDropEvents\n  activeDrops: ActiveDrop[]\n}\n\nfunction install (scope: Scope) {\n  const {\n    actions,\n    /** @lends module:interact */\n    interactStatic: interact,\n    /** @lends Interactable */\n    Interactable,\n    defaults,\n  } = scope\n\n  scope.usePlugin(drag)\n\n  /**\n   *\n   * ```js\n   * interact('.drop').dropzone({\n   *   accept: '.can-drop' || document.getElementById('single-drop'),\n   *   overlap: 'pointer' || 'center' || zeroToOne\n   * }\n   * ```\n   *\n   * Returns or sets whether draggables can be dropped onto this target to\n   * trigger drop events\n   *\n   * Dropzones can receive the following events:\n   *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n   *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n   *  - `dragmove` when a draggable that has entered the dropzone is moved\n   *  - `drop` when a draggable is dropped into this dropzone\n   *\n   * Use the `accept` option to allow only elements that match the given CSS\n   * selector or element. The value can be:\n   *\n   *  - **an Element** - only that element can be dropped into this dropzone.\n   *  - **a string**, - the element being dragged must match it as a CSS selector.\n   *  - **`null`** - accept options is cleared - it accepts any element.\n   *\n   * Use the `overlap` option to set how drops are checked for. The allowed\n   * values are:\n   *\n   *   - `'pointer'`, the pointer must be over the dropzone (default)\n   *   - `'center'`, the draggable element's center must be over the dropzone\n   *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n   *   e.g. `0.5` for drop to happen when half of the area of the draggable is\n   *   over the dropzone\n   *\n   * Use the `checker` option to specify a function to check if a dragged element\n   * is over this Interactable.\n   *\n   * @param {boolean | object | null} [options] The new options to be set.\n   * @return {object | Interactable} The current setting or this Interactable\n   */\n  Interactable.prototype.dropzone = function (this: Interactable, options?: DropzoneOptions | boolean) {\n    return dropzoneMethod(this, options)\n  } as Interactable['dropzone']\n\n  /**\n   * ```js\n   * interact(target)\n   * .dropChecker(function(dragEvent,         // related dragmove or dragend event\n   *                       event,             // TouchEvent/PointerEvent/MouseEvent\n   *                       dropped,           // bool result of the default checker\n   *                       dropzone,          // dropzone Interactable\n   *                       dropElement,       // dropzone elemnt\n   *                       draggable,         // draggable Interactable\n   *                       draggableElement) {// draggable element\n   *\n   *   return dropped && event.target.hasAttribute('allow-drop')\n   * }\n   * ```\n   */\n  Interactable.prototype.dropCheck = function (\n    this: Interactable,\n    dragEvent,\n    event,\n    draggable,\n    draggableElement,\n    dropElement,\n    rect,\n  ) {\n    return dropCheckMethod(this, dragEvent, event, draggable, draggableElement, dropElement, rect)\n  }\n\n  /**\n   * Returns or sets whether the dimensions of dropzone elements are calculated\n   * on every dragmove or only on dragstart for the default dropChecker\n   *\n   * @param {boolean} [newValue] True to check on each move. False to check only\n   * before start\n   * @return {boolean | interact} The current setting or interact\n   */\n  interact.dynamicDrop = function (newValue?: boolean) {\n    if (is.bool(newValue)) {\n      // if (dragging && scope.dynamicDrop !== newValue && !newValue) {\n      //  calcRects(dropzones)\n      // }\n\n      scope.dynamicDrop = newValue\n\n      return interact\n    }\n    return scope.dynamicDrop\n  }\n\n  extend(actions.phaselessTypes, {\n    dragenter: true,\n    dragleave: true,\n    dropactivate: true,\n    dropdeactivate: true,\n    dropmove: true,\n    drop: true,\n  })\n  actions.methodDict.drop = 'dropzone'\n\n  scope.dynamicDrop = false\n\n  defaults.actions.drop = drop.defaults\n}\n\nfunction collectDrops ({ interactables }: Scope, draggableElement: Element) {\n  const drops: ActiveDrop[] = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const dropzone of interactables.list) {\n    if (!dropzone.options.drop.enabled) {\n      continue\n    }\n\n    const accept = dropzone.options.drop.accept\n\n    // test the draggable draggableElement against the dropzone's accept setting\n    if (\n      (is.element(accept) && accept !== draggableElement) ||\n      (is.string(accept) && !domUtils.matchesSelector(draggableElement, accept)) ||\n      (is.func(accept) && !accept({ dropzone, draggableElement }))\n    ) {\n      continue\n    }\n\n    // query for new elements if necessary\n    const dropElements = (is.string(dropzone.target)\n      ? dropzone._context.querySelectorAll(dropzone.target)\n      : is.array(dropzone.target)\n        ? dropzone.target\n        : [dropzone.target]) as Element[]\n\n    for (const dropzoneElement of dropElements) {\n      if (dropzoneElement !== draggableElement) {\n        drops.push({\n          dropzone,\n          element: dropzoneElement,\n          rect: dropzone.getRect(dropzoneElement),\n        })\n      }\n    }\n  }\n\n  return drops\n}\n\nfunction fireActivationEvents (activeDrops: ActiveDrop[], event: DropEvent) {\n  // loop through all active dropzones and trigger event\n  for (const { dropzone, element } of activeDrops.slice()) {\n    event.dropzone = dropzone\n\n    // set current element as event target\n    event.target = element\n    dropzone.fire(event)\n    event.propagationStopped = event.immediatePropagationStopped = false\n  }\n}\n\n// return a new array of possible drops. getActiveDrops should always be\n// called when a drag has just started or a drag event happens while\n// dynamicDrop is true\nfunction getActiveDrops (scope: Scope, dragElement: Element) {\n  // get dropzones and their elements that could receive the draggable\n  const activeDrops = collectDrops(scope, dragElement)\n\n  for (const activeDrop of activeDrops) {\n    activeDrop.rect = activeDrop.dropzone.getRect(activeDrop.element)\n  }\n\n  return activeDrops\n}\n\nfunction getDrop (\n  { dropState, interactable: draggable, element: dragElement }: Partial<Interaction>,\n  dragEvent,\n  pointerEvent,\n) {\n  const validDrops = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const { dropzone, element: dropzoneElement, rect } of dropState.activeDrops) {\n    validDrops.push(\n      dropzone.dropCheck(dragEvent, pointerEvent, draggable, dragElement, dropzoneElement, rect)\n        ? dropzoneElement\n        : null,\n    )\n  }\n\n  // get the most appropriate dropzone based on DOM depth and order\n  const dropIndex = domUtils.indexOfDeepestElement(validDrops)\n\n  return dropState.activeDrops[dropIndex] || null\n}\n\nfunction getDropEvents (interaction: Interaction, _pointerEvent, dragEvent: DragEvent) {\n  const { dropState } = interaction\n  const dropEvents = {\n    enter: null,\n    leave: null,\n    activate: null,\n    deactivate: null,\n    move: null,\n    drop: null,\n  }\n\n  if (dragEvent.type === 'dragstart') {\n    dropEvents.activate = new DropEvent(dropState, dragEvent, 'dropactivate')\n\n    dropEvents.activate.target = null\n    dropEvents.activate.dropzone = null\n  }\n  if (dragEvent.type === 'dragend') {\n    dropEvents.deactivate = new DropEvent(dropState, dragEvent, 'dropdeactivate')\n\n    dropEvents.deactivate.target = null\n    dropEvents.deactivate.dropzone = null\n  }\n\n  if (dropState.rejected) {\n    return dropEvents\n  }\n\n  if (dropState.cur.element !== dropState.prev.element) {\n    // if there was a previous dropzone, create a dragleave event\n    if (dropState.prev.dropzone) {\n      dropEvents.leave = new DropEvent(dropState, dragEvent, 'dragleave')\n\n      dragEvent.dragLeave = dropEvents.leave.target = dropState.prev.element\n      dragEvent.prevDropzone = dropEvents.leave.dropzone = dropState.prev.dropzone\n    }\n    // if dropzone is not null, create a dragenter event\n    if (dropState.cur.dropzone) {\n      dropEvents.enter = new DropEvent(dropState, dragEvent, 'dragenter')\n\n      dragEvent.dragEnter = dropState.cur.element\n      dragEvent.dropzone = dropState.cur.dropzone\n    }\n  }\n\n  if (dragEvent.type === 'dragend' && dropState.cur.dropzone) {\n    dropEvents.drop = new DropEvent(dropState, dragEvent, 'drop')\n\n    dragEvent.dropzone = dropState.cur.dropzone\n    dragEvent.relatedTarget = dropState.cur.element\n  }\n  if (dragEvent.type === 'dragmove' && dropState.cur.dropzone) {\n    dropEvents.move = new DropEvent(dropState, dragEvent, 'dropmove')\n\n    dropEvents.move.dragmove = dragEvent\n    dragEvent.dropzone = dropState.cur.dropzone\n  }\n\n  return dropEvents\n}\n\ntype FiredDropEvents = Partial<\nRecord<'leave' | 'enter' | 'move' | 'drop' | 'activate' | 'deactivate', DropEvent>\n>\n\nfunction fireDropEvents (interaction: Interaction, events: FiredDropEvents) {\n  const { dropState } = interaction\n  const { activeDrops, cur, prev } = dropState\n\n  if (events.leave) {\n    prev.dropzone.fire(events.leave)\n  }\n  if (events.enter) {\n    cur.dropzone.fire(events.enter)\n  }\n  if (events.move) {\n    cur.dropzone.fire(events.move)\n  }\n  if (events.drop) {\n    cur.dropzone.fire(events.drop)\n  }\n\n  if (events.deactivate) {\n    fireActivationEvents(activeDrops, events.deactivate)\n  }\n\n  dropState.prev.dropzone = cur.dropzone\n  dropState.prev.element = cur.element\n}\n\nfunction onEventCreated ({ interaction, iEvent, event }: DoPhaseArg<'drag', EventPhase>, scope: Scope) {\n  if (iEvent.type !== 'dragmove' && iEvent.type !== 'dragend') {\n    return\n  }\n\n  const { dropState } = interaction\n\n  if (scope.dynamicDrop) {\n    dropState.activeDrops = getActiveDrops(scope, interaction.element)\n  }\n\n  const dragEvent = iEvent\n  const dropResult = getDrop(interaction, dragEvent, event)\n\n  // update rejected status\n  dropState.rejected =\n    dropState.rejected &&\n    !!dropResult &&\n    dropResult.dropzone === dropState.cur.dropzone &&\n    dropResult.element === dropState.cur.element\n\n  dropState.cur.dropzone = dropResult && dropResult.dropzone\n  dropState.cur.element = dropResult && dropResult.element\n\n  dropState.events = getDropEvents(interaction, event, dragEvent)\n}\n\nfunction dropzoneMethod(interactable: Interactable): DropzoneOptions\nfunction dropzoneMethod(interactable: Interactable, options: DropzoneOptions | boolean): Interactable\nfunction dropzoneMethod (interactable: Interactable, options?: DropzoneOptions | boolean) {\n  if (is.object(options)) {\n    interactable.options.drop.enabled = options.enabled !== false\n\n    if (options.listeners) {\n      const normalized = normalizeListeners(options.listeners)\n      // rename 'drop' to '' as it will be prefixed with 'drop'\n      const corrected = Object.keys(normalized).reduce((acc, type) => {\n        const correctedType = /^(enter|leave)/.test(type)\n          ? `drag${type}`\n          : /^(activate|deactivate|move)/.test(type)\n            ? `drop${type}`\n            : type\n\n        acc[correctedType] = normalized[type]\n\n        return acc\n      }, {})\n\n      interactable.off(interactable.options.drop.listeners)\n      interactable.on(corrected)\n      interactable.options.drop.listeners = corrected\n    }\n\n    if (is.func(options.ondrop)) {\n      interactable.on('drop', options.ondrop)\n    }\n    if (is.func(options.ondropactivate)) {\n      interactable.on('dropactivate', options.ondropactivate)\n    }\n    if (is.func(options.ondropdeactivate)) {\n      interactable.on('dropdeactivate', options.ondropdeactivate)\n    }\n    if (is.func(options.ondragenter)) {\n      interactable.on('dragenter', options.ondragenter)\n    }\n    if (is.func(options.ondragleave)) {\n      interactable.on('dragleave', options.ondragleave)\n    }\n    if (is.func(options.ondropmove)) {\n      interactable.on('dropmove', options.ondropmove)\n    }\n\n    if (/^(pointer|center)$/.test(options.overlap as string)) {\n      interactable.options.drop.overlap = options.overlap\n    } else if (is.number(options.overlap)) {\n      interactable.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0)\n    }\n    if ('accept' in options) {\n      interactable.options.drop.accept = options.accept\n    }\n    if ('checker' in options) {\n      interactable.options.drop.checker = options.checker\n    }\n\n    return interactable\n  }\n\n  if (is.bool(options)) {\n    interactable.options.drop.enabled = options\n\n    return interactable\n  }\n\n  return interactable.options.drop\n}\n\nfunction dropCheckMethod (\n  interactable: Interactable,\n  dragEvent: InteractEvent,\n  event: PointerEventType,\n  draggable: Interactable,\n  draggableElement: Element,\n  dropElement: Element,\n  rect: any,\n) {\n  let dropped = false\n\n  // if the dropzone has no rect (eg. display: none)\n  // call the custom dropChecker or just return false\n  if (!(rect = rect || interactable.getRect(dropElement))) {\n    return interactable.options.drop.checker\n      ? interactable.options.drop.checker(\n        dragEvent,\n        event,\n        dropped,\n        interactable,\n        dropElement,\n        draggable,\n        draggableElement,\n      )\n      : false\n  }\n\n  const dropOverlap = interactable.options.drop.overlap\n\n  if (dropOverlap === 'pointer') {\n    const origin = getOriginXY(draggable, draggableElement, 'drag')\n    const page = pointerUtils.getPageXY(dragEvent)\n\n    page.x += origin.x\n    page.y += origin.y\n\n    const horizontal = page.x > rect.left && page.x < rect.right\n    const vertical = page.y > rect.top && page.y < rect.bottom\n\n    dropped = horizontal && vertical\n  }\n\n  const dragRect = draggable.getRect(draggableElement)\n\n  if (dragRect && dropOverlap === 'center') {\n    const cx = dragRect.left + dragRect.width / 2\n    const cy = dragRect.top + dragRect.height / 2\n\n    dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom\n  }\n\n  if (dragRect && is.number(dropOverlap)) {\n    const overlapArea =\n      Math.max(0, Math.min(rect.right, dragRect.right) - Math.max(rect.left, dragRect.left)) *\n      Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top, dragRect.top))\n\n    const overlapRatio = overlapArea / (dragRect.width * dragRect.height)\n\n    dropped = overlapRatio >= dropOverlap\n  }\n\n  if (interactable.options.drop.checker) {\n    dropped = interactable.options.drop.checker(\n      dragEvent,\n      event,\n      dropped,\n      interactable,\n      dropElement,\n      draggable,\n      draggableElement,\n    )\n  }\n\n  return dropped\n}\n\nconst drop: Plugin = {\n  id: 'actions/drop',\n  install,\n  listeners: {\n    'interactions:before-action-start': ({ interaction }) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      interaction.dropState = {\n        cur: {\n          dropzone: null,\n          element: null,\n        },\n        prev: {\n          dropzone: null,\n          element: null,\n        },\n        rejected: null,\n        events: null,\n        activeDrops: [],\n      }\n    },\n\n    'interactions:after-action-start': (\n      { interaction, event, iEvent: dragEvent }: DoPhaseArg<'drag', EventPhase>,\n      scope,\n    ) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const { dropState } = interaction\n\n      // reset active dropzones\n      dropState.activeDrops = null\n      dropState.events = null\n      dropState.activeDrops = getActiveDrops(scope, interaction.element)\n      dropState.events = getDropEvents(interaction, event, dragEvent)\n\n      if (dropState.events.activate) {\n        fireActivationEvents(dropState.activeDrops, dropState.events.activate)\n        scope.fire('actions/drop:start', { interaction, dragEvent })\n      }\n    },\n\n    'interactions:action-move': onEventCreated,\n\n    'interactions:after-action-move': (\n      { interaction, iEvent: dragEvent }: DoPhaseArg<'drag', EventPhase>,\n      scope,\n    ) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      fireDropEvents(interaction, interaction.dropState.events)\n\n      scope.fire('actions/drop:move', { interaction, dragEvent })\n      interaction.dropState.events = {}\n    },\n\n    'interactions:action-end': (arg: DoPhaseArg<'drag', EventPhase>, scope) => {\n      if (arg.interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const { interaction, iEvent: dragEvent } = arg\n\n      onEventCreated(arg, scope)\n      fireDropEvents(interaction, interaction.dropState.events)\n      scope.fire('actions/drop:end', { interaction, dragEvent })\n    },\n\n    'interactions:stop': ({ interaction }) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const { dropState } = interaction\n\n      if (dropState) {\n        dropState.activeDrops = null\n        dropState.events = null\n        dropState.cur.dropzone = null\n        dropState.cur.element = null\n        dropState.prev.dropzone = null\n        dropState.prev.element = null\n        dropState.rejected = false\n      }\n    },\n  },\n  getActiveDrops,\n  getDrop,\n  getDropEvents,\n  fireDropEvents,\n  defaults: {\n    enabled: false,\n    accept: null,\n    overlap: 'pointer',\n  } as DropzoneOptions,\n}\n\nexport default drop\n","import type { InteractEvent, EventPhase } from '@interactjs/core/InteractEvent'\nimport type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { Options } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { ActionMethod, GesturableOptions, Rect, PointerType } from '@interactjs/types/index'\nimport is from '@interactjs/utils/is'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nexport type GesturableMethod = ActionMethod<GesturableOptions>\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    gesture?: {\n      angle: number // angle from first to second touch\n      distance: number\n      scale: number // gesture.distance / gesture.startDistance\n      startAngle: number // angle of line joining two touches\n      startDistance: number // distance between two touches of touchStart\n    }\n  }\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    gesturable: GesturableMethod\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    gesture: GesturableOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface ActionMap {\n    gesture?: typeof gesture\n  }\n}\n\nexport interface GestureEvent extends InteractEvent<'gesture'> {\n  distance: number\n  angle: number\n  da: number // angle change\n  scale: number // ratio of distance start to current event\n  ds: number // scale change\n  box: Rect // enclosing box of all points\n  touches: PointerType[]\n}\n\nexport interface GestureSignalArg extends DoPhaseArg<'gesture', EventPhase> {\n  iEvent: GestureEvent\n  interaction: Interaction<'gesture'>\n}\n\nfunction install (scope: Scope) {\n  const { actions, Interactable, defaults } = scope\n\n  /**\n   * ```js\n   * interact(element).gesturable({\n   *     onstart: function (event) {},\n   *     onmove : function (event) {},\n   *     onend  : function (event) {},\n   *\n   *     // limit multiple gestures.\n   *     // See the explanation in {@link Interactable.draggable} example\n   *     max: Infinity,\n   *     maxPerElement: 1,\n   * })\n   *\n   * var isGestureable = interact(element).gesturable()\n   * ```\n   *\n   * Gets or sets whether multitouch gestures can be performed on the target\n   *\n   * @param {boolean | object} [options] true/false or An object with event\n   * listeners to be fired on gesture events (makes the Interactable gesturable)\n   * @return {boolean | Interactable} A boolean indicating if this can be the\n   * target of gesture events, or this Interactable\n   */\n  Interactable.prototype.gesturable = function (\n    this: InstanceType<typeof Interactable>,\n    options: GesturableOptions | boolean,\n  ) {\n    if (is.object(options)) {\n      this.options.gesture.enabled = options.enabled !== false\n      this.setPerAction('gesture', options)\n      this.setOnEvents('gesture', options)\n\n      return this\n    }\n\n    if (is.bool(options)) {\n      this.options.gesture.enabled = options\n\n      return this\n    }\n\n    return this.options.gesture as Options\n  } as GesturableMethod\n\n  actions.map.gesture = gesture\n  actions.methodDict.gesture = 'gesturable'\n\n  defaults.actions.gesture = gesture.defaults\n}\n\nfunction updateGestureProps ({ interaction, iEvent, phase }: GestureSignalArg) {\n  if (interaction.prepared.name !== 'gesture') return\n\n  const pointers = interaction.pointers.map((p) => p.pointer)\n  const starting = phase === 'start'\n  const ending = phase === 'end'\n  const deltaSource = interaction.interactable.options.deltaSource\n\n  iEvent.touches = [pointers[0], pointers[1]]\n\n  if (starting) {\n    iEvent.distance = pointerUtils.touchDistance(pointers, deltaSource)\n    iEvent.box = pointerUtils.touchBBox(pointers)\n    iEvent.scale = 1\n    iEvent.ds = 0\n    iEvent.angle = pointerUtils.touchAngle(pointers, deltaSource)\n    iEvent.da = 0\n\n    interaction.gesture.startDistance = iEvent.distance\n    interaction.gesture.startAngle = iEvent.angle\n  } else if (ending) {\n    const prevEvent = interaction.prevEvent as GestureEvent\n\n    iEvent.distance = prevEvent.distance\n    iEvent.box = prevEvent.box\n    iEvent.scale = prevEvent.scale\n    iEvent.ds = 0\n    iEvent.angle = prevEvent.angle\n    iEvent.da = 0\n  } else {\n    iEvent.distance = pointerUtils.touchDistance(pointers, deltaSource)\n    iEvent.box = pointerUtils.touchBBox(pointers)\n    iEvent.scale = iEvent.distance / interaction.gesture.startDistance\n    iEvent.angle = pointerUtils.touchAngle(pointers, deltaSource)\n\n    iEvent.ds = iEvent.scale - interaction.gesture.scale\n    iEvent.da = iEvent.angle - interaction.gesture.angle\n  }\n\n  interaction.gesture.distance = iEvent.distance\n  interaction.gesture.angle = iEvent.angle\n\n  if (is.number(iEvent.scale) && iEvent.scale !== Infinity && !isNaN(iEvent.scale)) {\n    interaction.gesture.scale = iEvent.scale\n  }\n}\n\nconst gesture: Plugin = {\n  id: 'actions/gesture',\n  before: ['actions/drag', 'actions/resize'],\n  install,\n  listeners: {\n    'interactions:action-start': updateGestureProps,\n    'interactions:action-move': updateGestureProps,\n    'interactions:action-end': updateGestureProps,\n\n    'interactions:new': ({ interaction }) => {\n      interaction.gesture = {\n        angle: 0,\n        distance: 0,\n        scale: 1,\n        startAngle: 0,\n        startDistance: 0,\n      }\n    },\n\n    'auto-start:check': (arg) => {\n      if (arg.interaction.pointers.length < 2) {\n        return undefined\n      }\n\n      const gestureOptions = arg.interactable.options.gesture\n\n      if (!(gestureOptions && gestureOptions.enabled)) {\n        return undefined\n      }\n\n      arg.action = { name: 'gesture' }\n\n      return false\n    },\n  },\n\n  defaults: {},\n\n  getCursor () {\n    return ''\n  },\n}\n\nexport default gesture\n","import type { EventPhase, InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type { ActionProps, Interaction } from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type {\n  ActionMethod,\n  ResizableOptions,\n  FullRect,\n  OrBoolean,\n  Point,\n  Rect,\n} from '@interactjs/types/index'\nimport * as dom from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\nexport type EdgeName = 'top' | 'left' | 'bottom' | 'right'\n\nexport type ResizableMethod = ActionMethod<ResizableOptions>\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    resizable: ResizableMethod\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    resizeAxes: 'x' | 'y' | 'xy'\n    resizeStartAspectRatio: number\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    resize: ResizableOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface ActionMap {\n    resize?: typeof resize\n  }\n}\n\nexport interface ResizeEvent<P extends EventPhase = EventPhase> extends InteractEvent<'resize', P> {\n  deltaRect?: FullRect\n  edges?: ActionProps['edges']\n}\n\nfunction install (scope: Scope) {\n  const {\n    actions,\n    browser,\n    /** @lends Interactable */\n    Interactable, // tslint:disable-line no-shadowed-variable\n    defaults,\n  } = scope\n\n  // Less Precision with touch input\n\n  resize.cursors = initCursors(browser)\n  resize.defaultMargin = browser.supportsTouch || browser.supportsPointerEvent ? 20 : 10\n\n  /**\n   * ```js\n   * interact(element).resizable({\n   *   onstart: function (event) {},\n   *   onmove : function (event) {},\n   *   onend  : function (event) {},\n   *\n   *   edges: {\n   *     top   : true,       // Use pointer coords to check for resize.\n   *     left  : false,      // Disable resizing from left edge.\n   *     bottom: '.resize-s',// Resize if pointer target matches selector\n   *     right : handleEl    // Resize if pointer target is the given Element\n   *   },\n   *\n   *     // Width and height can be adjusted independently. When `true`, width and\n   *     // height are adjusted at a 1:1 ratio.\n   *     square: false,\n   *\n   *     // Width and height can be adjusted independently. When `true`, width and\n   *     // height maintain the aspect ratio they had when resizing started.\n   *     preserveAspectRatio: false,\n   *\n   *   // a value of 'none' will limit the resize rect to a minimum of 0x0\n   *   // 'negate' will allow the rect to have negative width/height\n   *   // 'reposition' will keep the width/height positive by swapping\n   *   // the top and bottom edges and/or swapping the left and right edges\n   *   invert: 'none' || 'negate' || 'reposition'\n   *\n   *   // limit multiple resizes.\n   *   // See the explanation in the {@link Interactable.draggable} example\n   *   max: Infinity,\n   *   maxPerElement: 1,\n   * })\n   *\n   * var isResizeable = interact(element).resizable()\n   * ```\n   *\n   * Gets or sets whether resize actions can be performed on the target\n   *\n   * @param {boolean | object} [options] true/false or An object with event\n   * listeners to be fired on resize events (object makes the Interactable\n   * resizable)\n   * @return {boolean | Interactable} A boolean indicating if this can be the\n   * target of resize elements, or this Interactable\n   */\n  Interactable.prototype.resizable = function (this: Interactable, options: ResizableOptions | boolean) {\n    return resizable(this, options, scope)\n  } as ResizableMethod\n\n  actions.map.resize = resize\n  actions.methodDict.resize = 'resizable'\n\n  defaults.actions.resize = resize.defaults\n}\n\nfunction resizeChecker (arg) {\n  const { interaction, interactable, element, rect, buttons } = arg\n\n  if (!rect) {\n    return undefined\n  }\n\n  const page = extend({}, interaction.coords.cur.page)\n  const resizeOptions = interactable.options.resize\n\n  if (\n    !(resizeOptions && resizeOptions.enabled) ||\n    // check mouseButton setting if the pointer is down\n    (interaction.pointerIsDown &&\n      /mouse|pointer/.test(interaction.pointerType) &&\n      (buttons & resizeOptions.mouseButtons) === 0)\n  ) {\n    return undefined\n  }\n\n  // if using resize.edges\n  if (is.object(resizeOptions.edges)) {\n    const resizeEdges = {\n      left: false,\n      right: false,\n      top: false,\n      bottom: false,\n    }\n\n    for (const edge in resizeEdges) {\n      resizeEdges[edge] = checkResizeEdge(\n        edge,\n        resizeOptions.edges[edge],\n        page,\n        interaction._latestPointer.eventTarget,\n        element,\n        rect,\n        resizeOptions.margin || resize.defaultMargin,\n      )\n    }\n\n    resizeEdges.left = resizeEdges.left && !resizeEdges.right\n    resizeEdges.top = resizeEdges.top && !resizeEdges.bottom\n\n    if (resizeEdges.left || resizeEdges.right || resizeEdges.top || resizeEdges.bottom) {\n      arg.action = {\n        name: 'resize',\n        edges: resizeEdges,\n      }\n    }\n  } else {\n    const right = resizeOptions.axis !== 'y' && page.x > rect.right - resize.defaultMargin\n    const bottom = resizeOptions.axis !== 'x' && page.y > rect.bottom - resize.defaultMargin\n\n    if (right || bottom) {\n      arg.action = {\n        name: 'resize',\n        axes: (right ? 'x' : '') + (bottom ? 'y' : ''),\n      }\n    }\n  }\n\n  return arg.action ? false : undefined\n}\n\nfunction resizable (interactable: Interactable, options: OrBoolean<ResizableOptions> | boolean, scope: Scope) {\n  if (is.object(options)) {\n    interactable.options.resize.enabled = options.enabled !== false\n    interactable.setPerAction('resize', options)\n    interactable.setOnEvents('resize', options)\n\n    if (is.string(options.axis) && /^x$|^y$|^xy$/.test(options.axis)) {\n      interactable.options.resize.axis = options.axis\n    } else if (options.axis === null) {\n      interactable.options.resize.axis = scope.defaults.actions.resize.axis\n    }\n\n    if (is.bool(options.preserveAspectRatio)) {\n      interactable.options.resize.preserveAspectRatio = options.preserveAspectRatio\n    } else if (is.bool(options.square)) {\n      interactable.options.resize.square = options.square\n    }\n\n    return interactable\n  }\n  if (is.bool(options)) {\n    interactable.options.resize.enabled = options\n\n    return interactable\n  }\n  return interactable.options.resize\n}\n\nfunction checkResizeEdge (\n  name: string,\n  value: any,\n  page: Point,\n  element: Node,\n  interactableElement: Element,\n  rect: Rect,\n  margin: number,\n) {\n  // false, '', undefined, null\n  if (!value) {\n    return false\n  }\n\n  // true value, use pointer coords and element rect\n  if (value === true) {\n    // if dimensions are negative, \"switch\" edges\n    const width = is.number(rect.width) ? rect.width : rect.right - rect.left\n    const height = is.number(rect.height) ? rect.height : rect.bottom - rect.top\n\n    // don't use margin greater than half the relevent dimension\n    margin = Math.min(margin, Math.abs((name === 'left' || name === 'right' ? width : height) / 2))\n\n    if (width < 0) {\n      if (name === 'left') {\n        name = 'right'\n      } else if (name === 'right') {\n        name = 'left'\n      }\n    }\n    if (height < 0) {\n      if (name === 'top') {\n        name = 'bottom'\n      } else if (name === 'bottom') {\n        name = 'top'\n      }\n    }\n\n    if (name === 'left') {\n      return page.x < (width >= 0 ? rect.left : rect.right) + margin\n    }\n    if (name === 'top') {\n      return page.y < (height >= 0 ? rect.top : rect.bottom) + margin\n    }\n\n    if (name === 'right') {\n      return page.x > (width >= 0 ? rect.right : rect.left) - margin\n    }\n    if (name === 'bottom') {\n      return page.y > (height >= 0 ? rect.bottom : rect.top) - margin\n    }\n  }\n\n  // the remaining checks require an element\n  if (!is.element(element)) {\n    return false\n  }\n\n  return is.element(value)\n    ? // the value is an element to use as a resize handle\n    value === element\n    : // otherwise check if element matches value as selector\n    dom.matchesUpTo(element, value, interactableElement)\n}\n\n/* eslint-disable multiline-ternary */\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\nfunction initCursors (browser: typeof import('@interactjs/utils/browser').default) {\n  return browser.isIe9\n    ? {\n      x: 'e-resize',\n      y: 's-resize',\n      xy: 'se-resize',\n\n      top: 'n-resize',\n      left: 'w-resize',\n      bottom: 's-resize',\n      right: 'e-resize',\n      topleft: 'se-resize',\n      bottomright: 'se-resize',\n      topright: 'ne-resize',\n      bottomleft: 'ne-resize',\n    }\n    : {\n      x: 'ew-resize',\n      y: 'ns-resize',\n      xy: 'nwse-resize',\n\n      top: 'ns-resize',\n      left: 'ew-resize',\n      bottom: 'ns-resize',\n      right: 'ew-resize',\n      topleft: 'nwse-resize',\n      bottomright: 'nwse-resize',\n      topright: 'nesw-resize',\n      bottomleft: 'nesw-resize',\n    }\n}\n/* eslint-enable multiline-ternary */\n\nfunction start ({ iEvent, interaction }: { iEvent: InteractEvent<any, any>, interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) {\n    return\n  }\n\n  const resizeEvent = iEvent as ResizeEvent\n  const rect = interaction.rect\n\n  interaction._rects = {\n    start: extend({}, rect),\n    corrected: extend({}, rect),\n    previous: extend({}, rect),\n    delta: {\n      left: 0,\n      right: 0,\n      width: 0,\n      top: 0,\n      bottom: 0,\n      height: 0,\n    },\n  }\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = interaction._rects.corrected\n  resizeEvent.deltaRect = interaction._rects.delta\n}\n\nfunction move ({ iEvent, interaction }: { iEvent: InteractEvent<any, any>, interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) return\n\n  const resizeEvent = iEvent as ResizeEvent\n  const resizeOptions = interaction.interactable.options.resize\n  const invert = resizeOptions.invert\n  const invertible = invert === 'reposition' || invert === 'negate'\n\n  const current = interaction.rect\n  const { start: startRect, corrected, delta: deltaRect, previous } = interaction._rects\n\n  extend(previous, corrected)\n\n  if (invertible) {\n    // if invertible, copy the current rect\n    extend(corrected, current)\n\n    if (invert === 'reposition') {\n      // swap edge values if necessary to keep width/height positive\n      if (corrected.top > corrected.bottom) {\n        const swap = corrected.top\n\n        corrected.top = corrected.bottom\n        corrected.bottom = swap\n      }\n      if (corrected.left > corrected.right) {\n        const swap = corrected.left\n\n        corrected.left = corrected.right\n        corrected.right = swap\n      }\n    }\n  } else {\n    // if not invertible, restrict to minimum of 0x0 rect\n    corrected.top = Math.min(current.top, startRect.bottom)\n    corrected.bottom = Math.max(current.bottom, startRect.top)\n    corrected.left = Math.min(current.left, startRect.right)\n    corrected.right = Math.max(current.right, startRect.left)\n  }\n\n  corrected.width = corrected.right - corrected.left\n  corrected.height = corrected.bottom - corrected.top\n\n  for (const edge in corrected) {\n    deltaRect[edge] = corrected[edge] - previous[edge]\n  }\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = corrected\n  resizeEvent.deltaRect = deltaRect\n}\n\nfunction end ({ iEvent, interaction }: { iEvent: InteractEvent<any, any>, interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) return\n\n  const resizeEvent = iEvent as ResizeEvent\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = interaction._rects.corrected\n  resizeEvent.deltaRect = interaction._rects.delta\n}\n\nfunction updateEventAxes ({\n  iEvent,\n  interaction,\n}: {\n  iEvent: InteractEvent<any, any>\n  interaction: Interaction\n}) {\n  if (interaction.prepared.name !== 'resize' || !interaction.resizeAxes) return\n\n  const options = interaction.interactable.options\n  const resizeEvent = iEvent as ResizeEvent\n\n  if (options.resize.square) {\n    if (interaction.resizeAxes === 'y') {\n      resizeEvent.delta.x = resizeEvent.delta.y\n    } else {\n      resizeEvent.delta.y = resizeEvent.delta.x\n    }\n    resizeEvent.axes = 'xy'\n  } else {\n    resizeEvent.axes = interaction.resizeAxes\n\n    if (interaction.resizeAxes === 'x') {\n      resizeEvent.delta.y = 0\n    } else if (interaction.resizeAxes === 'y') {\n      resizeEvent.delta.x = 0\n    }\n  }\n}\n\nconst resize: Plugin = {\n  id: 'actions/resize',\n  before: ['actions/drag'],\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.resizeAxes = 'xy'\n    },\n\n    'interactions:action-start': (arg) => {\n      start(arg)\n      updateEventAxes(arg)\n    },\n    'interactions:action-move': (arg) => {\n      move(arg)\n      updateEventAxes(arg)\n    },\n    'interactions:action-end': end,\n    'auto-start:check': resizeChecker,\n  },\n\n  defaults: {\n    square: false,\n    preserveAspectRatio: false,\n    axis: 'xy',\n\n    // use default margin\n    margin: NaN,\n\n    // object with props left, right, top, bottom which are\n    // true/false values to resize when the pointer is over that edge,\n    // CSS selectors to match the handles for each direction\n    // or the Elements for each handle\n    edges: null,\n\n    // a value of 'none' will limit the resize rect to a minimum of 0x0\n    // 'negate' will alow the rect to have negative width/height\n    // 'reposition' will keep the width/height positive by swapping\n    // the top and bottom edges and/or swapping the left and right edges\n    invert: 'none',\n  } as ResizableOptions,\n\n  cursors: null as ReturnType<typeof initCursors>,\n\n  getCursor ({ edges, axis, name }: ActionProps) {\n    const cursors = resize.cursors\n    let result: string = null\n\n    if (axis) {\n      result = cursors[name + axis]\n    } else if (edges) {\n      let cursorKey = ''\n\n      for (const edge of ['top', 'bottom', 'left', 'right']) {\n        if (edges[edge]) {\n          cursorKey += edge\n        }\n      }\n\n      result = cursors[cursorKey]\n    }\n\n    return result\n  },\n\n  defaultMargin: null as number,\n}\n\nexport default resize\n","import type { Scope } from '@interactjs/core/scope'\n\nimport drag from './drag/plugin'\nimport drop from './drop/plugin'\nimport gesture from './gesture/plugin'\nimport resize from './resize/plugin'\n\nexport default {\n  id: 'actions',\n  install (scope: Scope) {\n    scope.usePlugin(gesture)\n    scope.usePlugin(resize)\n    scope.usePlugin(drag)\n    scope.usePlugin(drop)\n  },\n}\n","let lastTime = 0\nlet request: typeof requestAnimationFrame\nlet cancel: typeof cancelAnimationFrame\n\nfunction init (global: Window | typeof globalThis) {\n  request = global.requestAnimationFrame\n  cancel = global.cancelAnimationFrame\n\n  if (!request) {\n    const vendors = ['ms', 'moz', 'webkit', 'o']\n\n    for (const vendor of vendors) {\n      request = global[`${vendor}RequestAnimationFrame` as 'requestAnimationFrame']\n      cancel =\n        global[`${vendor}CancelAnimationFrame` as 'cancelAnimationFrame'] ||\n        global[`${vendor}CancelRequestAnimationFrame` as 'cancelAnimationFrame']\n    }\n  }\n\n  request = request && request.bind(global)\n  cancel = cancel && cancel.bind(global)\n\n  if (!request) {\n    request = (callback) => {\n      const currTime = Date.now()\n      const timeToCall = Math.max(0, 16 - (currTime - lastTime))\n      const token = global.setTimeout(() => {\n        // eslint-disable-next-line node/no-callback-literal\n        callback(currTime + timeToCall)\n      }, timeToCall)\n\n      lastTime = currTime + timeToCall\n      return token as any\n    }\n\n    cancel = (token) => clearTimeout(token)\n  }\n}\n\nexport default {\n  request: (callback: FrameRequestCallback) => request(callback),\n  cancel: (token: number) => cancel(token),\n  init,\n}\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { ActionName, Scope, Plugin } from '@interactjs/core/scope'\nimport type { PointerType } from '@interactjs/types/index'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport raf from '@interactjs/utils/raf'\nimport { getStringOptionResult } from '@interactjs/utils/rect'\nimport { getWindow } from '@interactjs/utils/window'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    autoScroll: typeof autoScroll\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    autoScroll?: typeof autoScroll\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    autoScroll?: AutoScrollOptions\n  }\n}\n\nexport interface AutoScrollOptions {\n  container?: Window | HTMLElement\n  margin?: number\n  distance?: number\n  interval?: number\n  speed?: number\n  enabled?: boolean\n}\n\nfunction install (scope: Scope) {\n  const { defaults, actions } = scope\n\n  scope.autoScroll = autoScroll\n  autoScroll.now = () => scope.now()\n\n  actions.phaselessTypes.autoscroll = true\n  defaults.perAction.autoScroll = autoScroll.defaults\n}\n\nconst autoScroll = {\n  defaults: {\n    enabled: false,\n    margin: 60,\n\n    // the item that is scrolled (Window or HTMLElement)\n    container: null as AutoScrollOptions['container'],\n\n    // the scroll speed in pixels per second\n    speed: 300,\n  } as AutoScrollOptions,\n\n  now: Date.now,\n\n  interaction: null as Interaction,\n  i: 0, // the handle returned by window.setInterval\n\n  // Direction each pulse is to scroll in\n  x: 0,\n  y: 0,\n\n  isScrolling: false,\n  prevTime: 0,\n  margin: 0,\n  speed: 0,\n\n  start (interaction: Interaction) {\n    autoScroll.isScrolling = true\n    raf.cancel(autoScroll.i)\n\n    interaction.autoScroll = autoScroll\n    autoScroll.interaction = interaction\n    autoScroll.prevTime = autoScroll.now()\n    autoScroll.i = raf.request(autoScroll.scroll)\n  },\n\n  stop () {\n    autoScroll.isScrolling = false\n    if (autoScroll.interaction) {\n      autoScroll.interaction.autoScroll = null\n    }\n    raf.cancel(autoScroll.i)\n  },\n\n  // scroll the window by the values in scroll.x/y\n  scroll () {\n    const { interaction } = autoScroll\n    const { interactable, element } = interaction\n    const actionName = interaction.prepared.name\n    const options = interactable.options[actionName].autoScroll\n    const container = getContainer(options.container, interactable, element)\n    const now = autoScroll.now()\n    // change in time in seconds\n    const dt = (now - autoScroll.prevTime) / 1000\n    // displacement\n    const s = options.speed * dt\n\n    if (s >= 1) {\n      const scrollBy = {\n        x: autoScroll.x * s,\n        y: autoScroll.y * s,\n      }\n\n      if (scrollBy.x || scrollBy.y) {\n        const prevScroll = getScroll(container)\n\n        if (is.window(container)) {\n          container.scrollBy(scrollBy.x, scrollBy.y)\n        } else if (container) {\n          container.scrollLeft += scrollBy.x\n          container.scrollTop += scrollBy.y\n        }\n\n        const curScroll = getScroll(container)\n        const delta = {\n          x: curScroll.x - prevScroll.x,\n          y: curScroll.y - prevScroll.y,\n        }\n\n        if (delta.x || delta.y) {\n          interactable.fire({\n            type: 'autoscroll',\n            target: element,\n            interactable,\n            delta,\n            interaction,\n            container,\n          })\n        }\n      }\n\n      autoScroll.prevTime = now\n    }\n\n    if (autoScroll.isScrolling) {\n      raf.cancel(autoScroll.i)\n      autoScroll.i = raf.request(autoScroll.scroll)\n    }\n  },\n  check (interactable: Interactable, actionName: ActionName) {\n    const options = interactable.options\n\n    return options[actionName].autoScroll?.enabled\n  },\n  onInteractionMove<T extends ActionName> ({\n    interaction,\n    pointer,\n  }: {\n    interaction: Interaction<T>\n    pointer: PointerType\n  }) {\n    if (\n      !(interaction.interacting() && autoScroll.check(interaction.interactable, interaction.prepared.name))\n    ) {\n      return\n    }\n\n    if (interaction.simulation) {\n      autoScroll.x = autoScroll.y = 0\n      return\n    }\n\n    let top: boolean\n    let right: boolean\n    let bottom: boolean\n    let left: boolean\n\n    const { interactable, element } = interaction\n    const actionName = interaction.prepared.name\n    const options = interactable.options[actionName].autoScroll\n    const container = getContainer(options.container, interactable, element)\n\n    if (is.window(container)) {\n      left = pointer.clientX < autoScroll.margin\n      top = pointer.clientY < autoScroll.margin\n      right = pointer.clientX > container.innerWidth - autoScroll.margin\n      bottom = pointer.clientY > container.innerHeight - autoScroll.margin\n    } else {\n      const rect = domUtils.getElementClientRect(container)\n\n      left = pointer.clientX < rect.left + autoScroll.margin\n      top = pointer.clientY < rect.top + autoScroll.margin\n      right = pointer.clientX > rect.right - autoScroll.margin\n      bottom = pointer.clientY > rect.bottom - autoScroll.margin\n    }\n\n    autoScroll.x = right ? 1 : left ? -1 : 0\n    autoScroll.y = bottom ? 1 : top ? -1 : 0\n\n    if (!autoScroll.isScrolling) {\n      // set the autoScroll properties to those of the target\n      autoScroll.margin = options.margin\n      autoScroll.speed = options.speed\n\n      autoScroll.start(interaction)\n    }\n  },\n}\n\nexport function getContainer (value: any, interactable: Interactable, element: Element) {\n  return (\n    (is.string(value) ? getStringOptionResult(value, interactable, element) : value) || getWindow(element)\n  )\n}\n\nexport function getScroll (container: any) {\n  if (is.window(container)) {\n    container = window.document.body\n  }\n\n  return { x: container.scrollLeft, y: container.scrollTop }\n}\n\nexport function getScrollSize (container: any) {\n  if (is.window(container)) {\n    container = window.document.body\n  }\n\n  return { x: container.scrollWidth, y: container.scrollHeight }\n}\n\nexport function getScrollSizeDelta<T extends ActionName> (\n  {\n    interaction,\n    element,\n  }: {\n    interaction: Partial<Interaction<T>>\n    element: Element\n  },\n  func: any,\n) {\n  const scrollOptions = interaction && interaction.interactable.options[interaction.prepared.name].autoScroll\n\n  if (!scrollOptions || !scrollOptions.enabled) {\n    func()\n    return { x: 0, y: 0 }\n  }\n\n  const scrollContainer = getContainer(scrollOptions.container, interaction.interactable, element)\n\n  const prevSize = getScroll(scrollContainer)\n  func()\n  const curSize = getScroll(scrollContainer)\n\n  return {\n    x: curSize.x - prevSize.x,\n    y: curSize.y - prevSize.y,\n  }\n}\n\nconst autoScrollPlugin: Plugin = {\n  id: 'auto-scroll',\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.autoScroll = null\n    },\n\n    'interactions:destroy': ({ interaction }) => {\n      interaction.autoScroll = null\n      autoScroll.stop()\n      if (autoScroll.interaction) {\n        autoScroll.interaction = null\n      }\n    },\n\n    'interactions:stop': autoScroll.stop,\n\n    'interactions:action-move': (arg: any) => autoScroll.onInteractionMove(arg),\n  },\n}\n\nexport default autoScrollPlugin\n","import type { ActionProps } from '@interactjs/core/Interaction'\nimport type { ActionName } from '@interactjs/core/scope'\n\nimport { window } from './window'\n\nexport function warnOnce<T> (this: T, method: (...args: any[]) => any, message: string) {\n  let warned = false\n\n  return function (this: T) {\n    if (!warned) {\n      ;(window as any).console.warn(message)\n      warned = true\n    }\n\n    return method.apply(this, arguments)\n  }\n}\n\nexport function copyAction<T extends ActionName> (dest: ActionProps<any>, src: ActionProps<T>) {\n  dest.name = src.name\n  dest.axis = src.axis\n  dest.edges = src.edges\n\n  return dest\n}\n\nexport const sign = (n: number) => (n >= 0 ? 1 : -1)\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction, ActionProps } from '@interactjs/core/Interaction'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { PointerType, PointerEventType, Element } from '@interactjs/types/index'\nimport is from '@interactjs/utils/is'\nimport { warnOnce } from '@interactjs/utils/misc'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    getAction: (\n      this: Interactable,\n      pointer: PointerType,\n      event: PointerEventType,\n      interaction: Interaction,\n      element: Element,\n    ) => ActionProps | null\n    styleCursor: typeof styleCursor\n    actionChecker: typeof actionChecker\n    ignoreFrom: {\n      (...args: any[]): Interactable\n      (): boolean\n    }\n    allowFrom: {\n      (...args: any[]): Interactable\n      (): boolean\n    }\n  }\n}\n\nfunction install (scope: Scope) {\n  const {\n    /** @lends Interactable */\n    Interactable, // tslint:disable-line no-shadowed-variable\n  } = scope\n\n  Interactable.prototype.getAction = function getAction (\n    this: Interactable,\n    pointer: PointerType,\n    event: PointerEventType,\n    interaction: Interaction,\n    element: Element,\n  ): ActionProps {\n    const action = defaultActionChecker(this, event, interaction, element, scope)\n\n    if (this.options.actionChecker) {\n      return this.options.actionChecker(pointer, event, action, this, element, interaction)\n    }\n\n    return action\n  }\n\n  /**\n   * If the target of the `mousedown`, `pointerdown` or `touchstart` event or any\n   * of it's parents match the given CSS selector or Element, no\n   * drag/resize/gesture is started.\n   *\n   * @deprecated\n   * Don't use this method. Instead set the `ignoreFrom` option for each action\n   * or for `pointerEvents`\n   *\n   * ```js\n   * interact(targett)\n   *   .draggable({\n   *     ignoreFrom: 'input, textarea, a[href]'',\n   *   })\n   *   .pointerEvents({\n   *     ignoreFrom: '[no-pointer]',\n   *   })\n   * ```\n   *\n   * @param {string | Element | null} [newValue] a CSS selector string, an\n   * Element or `null` to not ignore any elements\n   * @return {string | Element | object} The current ignoreFrom value or this\n   * Interactable\n   */\n  Interactable.prototype.ignoreFrom = warnOnce(function (this: Interactable, newValue) {\n    return this._backCompatOption('ignoreFrom', newValue)\n  }, 'Interactable.ignoreFrom() has been deprecated. Use Interactble.draggable({ignoreFrom: newValue}).')\n\n  /**\n   *\n   * A drag/resize/gesture is started only If the target of the `mousedown`,\n   * `pointerdown` or `touchstart` event or any of it's parents match the given\n   * CSS selector or Element.\n   *\n   * @deprecated\n   * Don't use this method. Instead set the `allowFrom` option for each action\n   * or for `pointerEvents`\n   *\n   * ```js\n   * interact(targett)\n   *   .resizable({\n   *     allowFrom: '.resize-handle',\n   *   .pointerEvents({\n   *     allowFrom: '.handle',,\n   *   })\n   * ```\n   *\n   * @param {string | Element | null} [newValue] a CSS selector string, an\n   * Element or `null` to allow from any element\n   * @return {string | Element | object} The current allowFrom value or this\n   * Interactable\n   */\n  Interactable.prototype.allowFrom = warnOnce(function (this: Interactable, newValue) {\n    return this._backCompatOption('allowFrom', newValue)\n  }, 'Interactable.allowFrom() has been deprecated. Use Interactble.draggable({allowFrom: newValue}).')\n\n  /**\n   * ```js\n   * interact('.resize-drag')\n   *   .resizable(true)\n   *   .draggable(true)\n   *   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n   *\n   *     if (interact.matchesSelector(event.target, '.drag-handle')) {\n   *       // force drag with handle target\n   *       action.name = drag\n   *     }\n   *     else {\n   *       // resize from the top and right edges\n   *       action.name  = 'resize'\n   *       action.edges = { top: true, right: true }\n   *     }\n   *\n   *     return action\n   * })\n   * ```\n   *\n   * Returns or sets the function used to check action to be performed on\n   * pointerDown\n   *\n   * @param {function | null} [checker] A function which takes a pointer event,\n   * defaultAction string, interactable, element and interaction as parameters\n   * and returns an object with name property 'drag' 'resize' or 'gesture' and\n   * optionally an `edges` object with boolean 'top', 'left', 'bottom' and right\n   * props.\n   * @return {Function | Interactable} The checker function or this Interactable\n   */\n  Interactable.prototype.actionChecker = actionChecker\n\n  /**\n   * Returns or sets whether the the cursor should be changed depending on the\n   * action that would be performed if the mouse were pressed and dragged.\n   *\n   * @param {boolean} [newValue]\n   * @return {boolean | Interactable} The current setting or this Interactable\n   */\n  Interactable.prototype.styleCursor = styleCursor\n}\n\nfunction defaultActionChecker (\n  interactable: Interactable,\n  event: PointerEventType,\n  interaction: Interaction,\n  element: Element,\n  scope: Scope,\n) {\n  const rect = interactable.getRect(element)\n  const buttons =\n    (event as MouseEvent).buttons ||\n    {\n      0: 1,\n      1: 4,\n      3: 8,\n      4: 16,\n    }[(event as MouseEvent).button as 0 | 1 | 3 | 4]\n  const arg = {\n    action: null,\n    interactable,\n    interaction,\n    element,\n    rect,\n    buttons,\n  }\n\n  scope.fire('auto-start:check', arg)\n\n  return arg.action\n}\n\nfunction styleCursor(this: Interactable): boolean\nfunction styleCursor(this: Interactable, newValue: boolean): typeof this\nfunction styleCursor (this: Interactable, newValue?: boolean) {\n  if (is.bool(newValue)) {\n    this.options.styleCursor = newValue\n\n    return this\n  }\n\n  if (newValue === null) {\n    delete this.options.styleCursor\n\n    return this\n  }\n\n  return this.options.styleCursor\n}\n\nfunction actionChecker (this: Interactable, checker: any) {\n  if (is.func(checker)) {\n    this.options.actionChecker = checker\n\n    return this\n  }\n\n  if (checker === null) {\n    delete this.options.actionChecker\n\n    return this\n  }\n\n  return this.options.actionChecker\n}\n\nexport default {\n  id: 'auto-start/interactableMethods',\n  install,\n}\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction, ActionProps } from '@interactjs/core/Interaction'\nimport type { Scope, SignalArgs, ActionName, Plugin } from '@interactjs/core/scope'\nimport type { CursorChecker, PointerType, PointerEventType, Element } from '@interactjs/types/index'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport { copyAction } from '@interactjs/utils/misc'\n\nimport InteractableMethods from './InteractableMethods'\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    maxInteractions: (newValue: any) => any\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    autoStart: AutoStart\n  }\n\n  interface SignalArgs {\n    'autoStart:before-start': Omit<SignalArgs['interactions:move'], 'interaction'> & {\n      interaction: Interaction<ActionName>\n    }\n    'autoStart:prepared': { interaction: Interaction }\n    'auto-start:check': CheckSignalArg\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface BaseDefaults {\n    actionChecker?: any\n    cursorChecker?: any\n    styleCursor?: any\n  }\n\n  interface PerActionDefaults {\n    manualStart?: boolean\n    max?: number\n    maxPerElement?: number\n    allowFrom?: string | Element\n    ignoreFrom?: string | Element\n    cursorChecker?: CursorChecker\n\n    // only allow left button by default\n    // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#Return_value\n    // TODO: docst\n    mouseButtons?: 0 | 1 | 2 | 4 | 8 | 16\n  }\n}\n\ninterface CheckSignalArg {\n  interactable: Interactable\n  interaction: Interaction\n  element: Element\n  action: ActionProps<ActionName>\n  buttons: number\n}\n\nexport interface AutoStart {\n  // Allow this many interactions to happen simultaneously\n  maxInteractions: number\n  withinInteractionLimit: typeof withinInteractionLimit\n  cursorElement: Element\n}\n\nfunction install (scope: Scope) {\n  const { interactStatic: interact, defaults } = scope\n\n  scope.usePlugin(InteractableMethods)\n\n  defaults.base.actionChecker = null\n  defaults.base.styleCursor = true\n\n  extend(defaults.perAction, {\n    manualStart: false,\n    max: Infinity,\n    maxPerElement: 1,\n    allowFrom: null,\n    ignoreFrom: null,\n\n    // only allow left button by default\n    // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#Return_value\n    mouseButtons: 1,\n  })\n\n  /**\n   * Returns or sets the maximum number of concurrent interactions allowed.  By\n   * default only 1 interaction is allowed at a time (for backwards\n   * compatibility). To allow multiple interactions on the same Interactables and\n   * elements, you need to enable it in the draggable, resizable and gesturable\n   * `'max'` and `'maxPerElement'` options.\n   *\n   * @alias module:interact.maxInteractions\n   *\n   * @param {number} [newValue] Any number. newValue <= 0 means no interactions.\n   */\n  interact.maxInteractions = (newValue: number) => maxInteractions(newValue, scope)\n\n  scope.autoStart = {\n    // Allow this many interactions to happen simultaneously\n    maxInteractions: Infinity,\n    withinInteractionLimit,\n    cursorElement: null,\n  }\n}\n\nfunction prepareOnDown (\n  { interaction, pointer, event, eventTarget }: SignalArgs['interactions:down'],\n  scope: Scope,\n) {\n  if (interaction.interacting()) return\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget, scope)\n  prepare(interaction, actionInfo, scope)\n}\n\nfunction prepareOnMove (\n  { interaction, pointer, event, eventTarget }: SignalArgs['interactions:move'],\n  scope: Scope,\n) {\n  if (interaction.pointerType !== 'mouse' || interaction.pointerIsDown || interaction.interacting()) return\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget as Element, scope)\n  prepare(interaction, actionInfo, scope)\n}\n\nfunction startOnMove (arg: SignalArgs['interactions:move'], scope: Scope) {\n  const { interaction } = arg\n\n  if (\n    !interaction.pointerIsDown ||\n    interaction.interacting() ||\n    !interaction.pointerWasMoved ||\n    !interaction.prepared.name\n  ) {\n    return\n  }\n\n  scope.fire('autoStart:before-start', arg)\n\n  const { interactable } = interaction\n  const actionName = (interaction as Interaction<ActionName>).prepared.name\n\n  if (actionName && interactable) {\n    // check manualStart and interaction limit\n    if (\n      interactable.options[actionName].manualStart ||\n      !withinInteractionLimit(interactable, interaction.element, interaction.prepared, scope)\n    ) {\n      interaction.stop()\n    } else {\n      interaction.start(interaction.prepared, interactable, interaction.element)\n      setInteractionCursor(interaction, scope)\n    }\n  }\n}\n\nfunction clearCursorOnStop ({ interaction }: { interaction: Interaction }, scope: Scope) {\n  const { interactable } = interaction\n\n  if (interactable && interactable.options.styleCursor) {\n    setCursor(interaction.element, '', scope)\n  }\n}\n\n// Check if the current interactable supports the action.\n// If so, return the validated action. Otherwise, return null\nfunction validateAction<T extends ActionName> (\n  action: ActionProps<T>,\n  interactable: Interactable,\n  element: Element,\n  eventTarget: Node,\n  scope: Scope,\n) {\n  if (\n    interactable.testIgnoreAllow(interactable.options[action.name], element, eventTarget) &&\n    interactable.options[action.name].enabled &&\n    withinInteractionLimit(interactable, element, action, scope)\n  ) {\n    return action\n  }\n\n  return null\n}\n\nfunction validateMatches (\n  interaction: Interaction,\n  pointer: PointerType,\n  event: PointerEventType,\n  matches: Interactable[],\n  matchElements: Element[],\n  eventTarget: Node,\n  scope: Scope,\n) {\n  for (let i = 0, len = matches.length; i < len; i++) {\n    const match = matches[i]\n    const matchElement = matchElements[i]\n    const matchAction = match.getAction(pointer, event, interaction, matchElement)\n\n    if (!matchAction) {\n      continue\n    }\n\n    const action = validateAction<ActionName>(matchAction, match, matchElement, eventTarget, scope)\n\n    if (action) {\n      return {\n        action,\n        interactable: match,\n        element: matchElement,\n      }\n    }\n  }\n\n  return { action: null, interactable: null, element: null }\n}\n\nfunction getActionInfo (\n  interaction: Interaction,\n  pointer: PointerType,\n  event: PointerEventType,\n  eventTarget: Node,\n  scope: Scope,\n) {\n  let matches: Interactable[] = []\n  let matchElements: Element[] = []\n\n  let element = eventTarget as Element\n\n  function pushMatches (interactable: Interactable) {\n    matches.push(interactable)\n    matchElements.push(element)\n  }\n\n  while (is.element(element)) {\n    matches = []\n    matchElements = []\n\n    scope.interactables.forEachMatch(element, pushMatches)\n\n    const actionInfo = validateMatches(\n      interaction,\n      pointer,\n      event,\n      matches,\n      matchElements,\n      eventTarget,\n      scope,\n    )\n\n    if (actionInfo.action && !actionInfo.interactable.options[actionInfo.action.name].manualStart) {\n      return actionInfo\n    }\n\n    element = domUtils.parentNode(element) as Element\n  }\n\n  return { action: null, interactable: null, element: null }\n}\n\nfunction prepare (\n  interaction: Interaction,\n  {\n    action,\n    interactable,\n    element,\n  }: {\n    action: ActionProps<any>\n    interactable: Interactable\n    element: Element\n  },\n  scope: Scope,\n) {\n  action = action || { name: null }\n\n  interaction.interactable = interactable\n  interaction.element = element\n  copyAction(interaction.prepared, action)\n\n  interaction.rect = interactable && action.name ? interactable.getRect(element) : null\n\n  setInteractionCursor(interaction, scope)\n\n  scope.fire('autoStart:prepared', { interaction })\n}\n\nfunction withinInteractionLimit<T extends ActionName> (\n  interactable: Interactable,\n  element: Element,\n  action: ActionProps<T>,\n  scope: Scope,\n) {\n  const options = interactable.options\n  const maxActions = options[action.name].max\n  const maxPerElement = options[action.name].maxPerElement\n  const autoStartMax = scope.autoStart.maxInteractions\n  let activeInteractions = 0\n  let interactableCount = 0\n  let elementCount = 0\n\n  // no actions if any of these values == 0\n  if (!(maxActions && maxPerElement && autoStartMax)) {\n    return false\n  }\n\n  for (const interaction of scope.interactions.list) {\n    const otherAction = interaction.prepared.name\n\n    if (!interaction.interacting()) {\n      continue\n    }\n\n    activeInteractions++\n\n    if (activeInteractions >= autoStartMax) {\n      return false\n    }\n\n    if (interaction.interactable !== interactable) {\n      continue\n    }\n\n    interactableCount += otherAction === action.name ? 1 : 0\n\n    if (interactableCount >= maxActions) {\n      return false\n    }\n\n    if (interaction.element === element) {\n      elementCount++\n\n      if (otherAction === action.name && elementCount >= maxPerElement) {\n        return false\n      }\n    }\n  }\n\n  return autoStartMax > 0\n}\n\nfunction maxInteractions (newValue: any, scope: Scope) {\n  if (is.number(newValue)) {\n    scope.autoStart.maxInteractions = newValue\n\n    return this\n  }\n\n  return scope.autoStart.maxInteractions\n}\n\nfunction setCursor (element: Element, cursor: string, scope: Scope) {\n  const { cursorElement: prevCursorElement } = scope.autoStart\n\n  if (prevCursorElement && prevCursorElement !== element) {\n    prevCursorElement.style.cursor = ''\n  }\n\n  element.ownerDocument.documentElement.style.cursor = cursor\n  element.style.cursor = cursor\n  scope.autoStart.cursorElement = cursor ? element : null\n}\n\nfunction setInteractionCursor<T extends ActionName> (interaction: Interaction<T>, scope: Scope) {\n  const { interactable, element, prepared } = interaction\n\n  if (!(interaction.pointerType === 'mouse' && interactable && interactable.options.styleCursor)) {\n    // clear previous target element cursor\n    if (scope.autoStart.cursorElement) {\n      setCursor(scope.autoStart.cursorElement, '', scope)\n    }\n\n    return\n  }\n\n  let cursor = ''\n\n  if (prepared.name) {\n    const cursorChecker = interactable.options[prepared.name].cursorChecker\n\n    if (is.func(cursorChecker)) {\n      cursor = cursorChecker(prepared, interactable, element, interaction._interacting)\n    } else {\n      cursor = scope.actions.map[prepared.name].getCursor(prepared)\n    }\n  }\n\n  setCursor(interaction.element, cursor || '', scope)\n}\n\nconst autoStart: Plugin = {\n  id: 'auto-start/base',\n  before: ['actions'],\n  install,\n  listeners: {\n    'interactions:down': prepareOnDown,\n    'interactions:move': (arg, scope) => {\n      prepareOnMove(arg, scope)\n      startOnMove(arg, scope)\n    },\n    'interactions:stop': clearCursorOnStop,\n  },\n  maxInteractions,\n  withinInteractionLimit,\n  validateAction,\n}\n\nexport default autoStart\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { SignalArgs, Scope, ActionName } from '@interactjs/core/scope'\nimport type { Element } from '@interactjs/types/index'\nimport { parentNode } from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\n\nimport autoStart from './base'\n\nfunction beforeStart ({ interaction, eventTarget, dx, dy }: SignalArgs['interactions:move'], scope: Scope) {\n  if (interaction.prepared.name !== 'drag') return\n\n  // check if a drag is in the correct axis\n  const absX = Math.abs(dx)\n  const absY = Math.abs(dy)\n  const targetOptions = interaction.interactable.options.drag\n  const startAxis = targetOptions.startAxis\n  const currentAxis = absX > absY ? 'x' : absX < absY ? 'y' : 'xy'\n\n  interaction.prepared.axis =\n    targetOptions.lockAxis === 'start'\n      ? (currentAxis[0] as 'x' | 'y') // always lock to one axis even if currentAxis === 'xy'\n      : targetOptions.lockAxis\n\n  // if the movement isn't in the startAxis of the interactable\n  if (currentAxis !== 'xy' && startAxis !== 'xy' && startAxis !== currentAxis) {\n    // cancel the prepared action\n    ;(interaction as Interaction<ActionName>).prepared.name = null\n\n    // then try to get a drag from another ineractable\n    let element = eventTarget as Element\n\n    const getDraggable = function (interactable: Interactable): Interactable | void {\n      if (interactable === interaction.interactable) return\n\n      const options = interaction.interactable.options.drag\n\n      if (!options.manualStart && interactable.testIgnoreAllow(options, element, eventTarget)) {\n        const action = interactable.getAction(\n          interaction.downPointer,\n          interaction.downEvent,\n          interaction,\n          element,\n        )\n\n        if (\n          action &&\n          action.name === 'drag' &&\n          checkStartAxis(currentAxis, interactable) &&\n          autoStart.validateAction(action, interactable, element, eventTarget, scope)\n        ) {\n          return interactable\n        }\n      }\n    }\n\n    // check all interactables\n    while (is.element(element)) {\n      const interactable = scope.interactables.forEachMatch(element, getDraggable)\n\n      if (interactable) {\n        ;(interaction as Interaction<ActionName>).prepared.name = 'drag'\n        interaction.interactable = interactable\n        interaction.element = element\n        break\n      }\n\n      element = parentNode(element) as Element\n    }\n  }\n}\n\nfunction checkStartAxis (startAxis: string, interactable: Interactable) {\n  if (!interactable) {\n    return false\n  }\n\n  const thisAxis = interactable.options.drag.startAxis\n\n  return startAxis === 'xy' || thisAxis === 'xy' || thisAxis === startAxis\n}\n\nexport default {\n  id: 'auto-start/dragAxis',\n  listeners: { 'autoStart:before-start': beforeStart },\n}\n","import type Interaction from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\n\nimport basePlugin from './base'\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    hold?: number\n    delay?: number\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    autoStartHoldTimer?: any\n  }\n}\n\nfunction install (scope: Scope) {\n  const { defaults } = scope\n\n  scope.usePlugin(basePlugin)\n\n  defaults.perAction.hold = 0\n  defaults.perAction.delay = 0\n}\n\nfunction getHoldDuration (interaction: Interaction) {\n  const actionName = interaction.prepared && interaction.prepared.name\n\n  if (!actionName) {\n    return null\n  }\n\n  const options = interaction.interactable.options\n\n  return options[actionName].hold || options[actionName].delay\n}\n\nconst hold: Plugin = {\n  id: 'auto-start/hold',\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.autoStartHoldTimer = null\n    },\n\n    'autoStart:prepared': ({ interaction }) => {\n      const hold = getHoldDuration(interaction)\n\n      if (hold > 0) {\n        interaction.autoStartHoldTimer = setTimeout(() => {\n          interaction.start(interaction.prepared, interaction.interactable, interaction.element)\n        }, hold)\n      }\n    },\n\n    'interactions:move': ({ interaction, duplicate }) => {\n      if (interaction.autoStartHoldTimer && interaction.pointerWasMoved && !duplicate) {\n        clearTimeout(interaction.autoStartHoldTimer)\n        interaction.autoStartHoldTimer = null\n      }\n    },\n\n    // prevent regular down->move autoStart\n    'autoStart:before-start': ({ interaction }) => {\n      const holdDuration = getHoldDuration(interaction)\n\n      if (holdDuration > 0) {\n        interaction.prepared.name = null\n      }\n    },\n  },\n  getHoldDuration,\n}\nexport default hold\n","import type { Scope } from '@interactjs/core/scope'\n\nimport autoStart from './base'\nimport dragAxis from './dragAxis'\nimport hold from './hold'\n\nexport default {\n  id: 'auto-start',\n  install (scope: Scope) {\n    scope.usePlugin(autoStart)\n    scope.usePlugin(hold)\n    scope.usePlugin(dragAxis)\n  },\n}\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { PointerEventType } from '@interactjs/types/index'\nimport { matchesSelector, nodeContains } from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport { getWindow } from '@interactjs/utils/window'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    preventDefault: typeof preventDefault\n    checkAndPreventDefault: (event: Event) => void\n  }\n}\n\ntype PreventDefaultValue = 'always' | 'never' | 'auto'\nfunction preventDefault(this: Interactable): PreventDefaultValue\nfunction preventDefault(this: Interactable, newValue: PreventDefaultValue): typeof this\nfunction preventDefault (this: Interactable, newValue?: PreventDefaultValue) {\n  if (/^(always|never|auto)$/.test(newValue)) {\n    this.options.preventDefault = newValue\n    return this\n  }\n\n  if (is.bool(newValue)) {\n    this.options.preventDefault = newValue ? 'always' : 'never'\n    return this\n  }\n\n  return this.options.preventDefault\n}\n\nfunction checkAndPreventDefault (interactable: Interactable, scope: Scope, event: Event) {\n  const setting = interactable.options.preventDefault\n\n  if (setting === 'never') return\n\n  if (setting === 'always') {\n    event.preventDefault()\n    return\n  }\n\n  // setting === 'auto'\n\n  // if the browser supports passive event listeners and isn't running on iOS,\n  // don't preventDefault of touch{start,move} events. CSS touch-action and\n  // user-select should be used instead of calling event.preventDefault().\n  if (scope.events.supportsPassive && /^touch(start|move)$/.test(event.type)) {\n    const doc = getWindow(event.target).document\n    const docOptions = scope.getDocOptions(doc)\n\n    if (!(docOptions && docOptions.events) || docOptions.events.passive !== false) {\n      return\n    }\n  }\n\n  // don't preventDefault of pointerdown events\n  if (/^(mouse|pointer|touch)*(down|start)/i.test(event.type)) {\n    return\n  }\n\n  // don't preventDefault on editable elements\n  if (\n    is.element(event.target) &&\n    matchesSelector(event.target, 'input,select,textarea,[contenteditable=true],[contenteditable=true] *')\n  ) {\n    return\n  }\n\n  event.preventDefault()\n}\n\nfunction onInteractionEvent ({ interaction, event }: { interaction: Interaction, event: PointerEventType }) {\n  if (interaction.interactable) {\n    interaction.interactable.checkAndPreventDefault(event as Event)\n  }\n}\n\nexport function install (scope: Scope) {\n  /** @lends Interactable */\n  const { Interactable } = scope\n\n  /**\n   * Returns or sets whether to prevent the browser's default behaviour in\n   * response to pointer events. Can be set to:\n   *  - `'always'` to always prevent\n   *  - `'never'` to never prevent\n   *  - `'auto'` to let interact.js try to determine what would be best\n   *\n   * @param {string} [newValue] `'always'`, `'never'` or `'auto'`\n   * @return {string | Interactable} The current setting or this Interactable\n   */\n  Interactable.prototype.preventDefault = preventDefault\n\n  Interactable.prototype.checkAndPreventDefault = function (event) {\n    return checkAndPreventDefault(this, scope, event)\n  }\n\n  // prevent native HTML5 drag on interact.js target elements\n  scope.interactions.docEvents.push({\n    type: 'dragstart',\n    listener (event) {\n      for (const interaction of scope.interactions.list) {\n        if (\n          interaction.element &&\n          (interaction.element === event.target || nodeContains(interaction.element, event.target))\n        ) {\n          interaction.interactable.checkAndPreventDefault(event)\n          return\n        }\n      }\n    },\n  })\n}\n\nexport default {\n  id: 'core/interactablePreventDefault',\n  install,\n  listeners: ['down', 'move', 'up', 'cancel'].reduce((acc, eventType) => {\n    acc[`interactions:${eventType}`] = onInteractionEvent\n    return acc\n  }, {} as any),\n}\n","export default {}\n","import type Interaction from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport visualizer from '@interactjs/dev-tools/visualizer/plugin'\nimport type { Element, OptionMethod } from '@interactjs/types/index'\nimport domObjects from '@interactjs/utils/domObjects'\nimport { parentNode } from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport * as win from '@interactjs/utils/window'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    logger: Logger\n  }\n}\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    visializer: typeof visualizer\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface BaseDefaults {\n    devTools?: DevToolsOptions\n  }\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    devTools: OptionMethod<DevToolsOptions>\n  }\n}\n\nexport interface DevToolsOptions {\n  ignore: { [P in keyof typeof CheckName]?: boolean }\n}\n\nexport interface Logger {\n  warn: (...args: any[]) => void\n  error: (...args: any[]) => void\n  log: (...args: any[]) => void\n}\n\nexport interface Check {\n  name: CheckName\n  text: string\n  perform: (interaction: Interaction) => boolean\n  getInfo: (interaction: Interaction) => any[]\n}\n\nenum CheckName {\n  touchAction = 'touchAction',\n  boxSizing = 'boxSizing',\n  noListeners = 'noListeners',\n}\n\nconst prefix = '[interact.js] '\nconst links = {\n  touchAction: 'https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action',\n  boxSizing: 'https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing',\n}\n\n// eslint-disable-next-line no-undef\nconst isProduction = process.env.NODE_ENV === 'production'\n\nfunction install (scope: Scope, { logger }: { logger?: Logger } = {}) {\n  const { Interactable, defaults } = scope\n\n  scope.logger = logger || console\n\n  defaults.base.devTools = {\n    ignore: {},\n  }\n\n  Interactable.prototype.devTools = function (options?: object) {\n    if (options) {\n      extend(this.options.devTools, options)\n      return this\n    }\n\n    return this.options.devTools\n  }\n\n  scope.usePlugin(visualizer)\n}\n\nconst checks: Check[] = [\n  {\n    name: CheckName.touchAction,\n    perform ({ element }) {\n      return !parentHasStyle(element, 'touchAction', /pan-|pinch|none/)\n    },\n    getInfo ({ element }) {\n      return [element, links.touchAction]\n    },\n    text: 'Consider adding CSS \"touch-action: none\" to this element\\n',\n  },\n\n  {\n    name: CheckName.boxSizing,\n    perform (interaction) {\n      const { element } = interaction\n\n      return (\n        interaction.prepared.name === 'resize' &&\n        element instanceof domObjects.HTMLElement &&\n        !hasStyle(element, 'boxSizing', /border-box/)\n      )\n    },\n    text: 'Consider adding CSS \"box-sizing: border-box\" to this resizable element',\n    getInfo ({ element }) {\n      return [element, links.boxSizing]\n    },\n  },\n\n  {\n    name: CheckName.noListeners,\n    perform (interaction) {\n      const actionName = interaction.prepared.name\n      const moveListeners = interaction.interactable.events.types[`${actionName}move`] || []\n\n      return !moveListeners.length\n    },\n    getInfo (interaction) {\n      return [interaction.prepared.name, interaction.interactable]\n    },\n    text: 'There are no listeners set for this action',\n  },\n]\n\nfunction hasStyle (element: HTMLElement, prop: keyof CSSStyleDeclaration, styleRe: RegExp) {\n  const value = element.style[prop] || win.window.getComputedStyle(element)[prop]\n  return styleRe.test((value || '').toString())\n}\n\nfunction parentHasStyle (element: Element, prop: keyof CSSStyleDeclaration, styleRe: RegExp) {\n  let parent = element as HTMLElement\n\n  while (is.element(parent)) {\n    if (hasStyle(parent, prop, styleRe)) {\n      return true\n    }\n\n    parent = parentNode(parent) as HTMLElement\n  }\n\n  return false\n}\n\nconst id = 'dev-tools'\nconst defaultExport: Plugin = isProduction\n  ? { id, install: () => {} }\n  : {\n    id,\n    install,\n    listeners: {\n      'interactions:action-start': ({ interaction }, scope) => {\n        for (const check of checks) {\n          const options = interaction.interactable && interaction.interactable.options\n\n          if (\n            !(options && options.devTools && options.devTools.ignore[check.name]) &&\n              check.perform(interaction)\n          ) {\n            scope.logger.warn(prefix + check.text, ...check.getInfo(interaction))\n          }\n        }\n      },\n    },\n    checks,\n    CheckName,\n    links,\n    prefix,\n  }\n\nexport default defaultExport\n","import * as arr from './arr'\nimport is from './is'\n\n// tslint:disable-next-line ban-types\nexport default function clone<T extends Object> (source: T): Partial<T> {\n  const dest = {} as Partial<T>\n\n  for (const prop in source) {\n    const value = source[prop]\n\n    if (is.plainObject(value)) {\n      dest[prop] = clone(value) as any\n    } else if (is.array(value)) {\n      dest[prop] = arr.from(value) as typeof value\n    } else {\n      dest[prop] = value\n    }\n  }\n\n  return dest\n}\n","import type { EventPhase } from '@interactjs/core/InteractEvent'\nimport type { Interaction, DoAnyPhaseArg } from '@interactjs/core/Interaction'\nimport type { EdgeOptions, FullRect, Point, Rect } from '@interactjs/types/index'\nimport clone from '@interactjs/utils/clone'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport type { Modifier, ModifierArg, ModifierState } from './base'\n\nexport interface ModificationResult {\n  delta: Point\n  rectDelta: Rect\n  coords: Point\n  rect: FullRect\n  eventProps: any[]\n  changed: boolean\n}\n\ninterface MethodArg {\n  phase: EventPhase\n  pageCoords: Point\n  rect: FullRect\n  coords: Point\n  preEnd?: boolean\n  skipModifiers?: number\n}\n\nexport default class Modification {\n  states: ModifierState[] = []\n  startOffset: Rect = { left: 0, right: 0, top: 0, bottom: 0 }\n  startDelta!: Point\n  result!: ModificationResult\n  endResult!: Point\n  edges!: EdgeOptions\n  readonly interaction: Readonly<Interaction>\n\n  constructor (interaction: Interaction) {\n    this.interaction = interaction\n    this.result = createResult()\n  }\n\n  start ({ phase }: { phase: EventPhase }, pageCoords: Point) {\n    const { interaction } = this\n    const modifierList = getModifierList(interaction)\n    this.prepareStates(modifierList)\n\n    this.edges = extend({}, interaction.edges)\n    this.startOffset = getRectOffset(interaction.rect, pageCoords)\n    this.startDelta = { x: 0, y: 0 }\n\n    const arg = this.fillArg({\n      phase,\n      pageCoords,\n      preEnd: false,\n    })\n\n    this.result = createResult()\n    this.startAll(arg)\n\n    const result = (this.result = this.setAll(arg))\n\n    return result\n  }\n\n  fillArg (arg: Partial<ModifierArg>) {\n    const { interaction } = this\n\n    arg.interaction = interaction\n    arg.interactable = interaction.interactable\n    arg.element = interaction.element\n    arg.rect = arg.rect || interaction.rect\n    arg.edges = this.edges\n    arg.startOffset = this.startOffset\n\n    return arg as ModifierArg\n  }\n\n  startAll (arg: MethodArg & Partial<ModifierArg>) {\n    for (const state of this.states) {\n      if (state.methods.start) {\n        arg.state = state\n        state.methods.start(arg as ModifierArg)\n      }\n    }\n  }\n\n  setAll (arg: MethodArg & Partial<ModifierArg>): ModificationResult {\n    const { phase, preEnd, skipModifiers, rect: unmodifiedRect } = arg\n\n    arg.coords = extend({}, arg.pageCoords)\n    arg.rect = extend({}, unmodifiedRect)\n\n    const states = skipModifiers ? this.states.slice(skipModifiers) : this.states\n\n    const newResult = createResult(arg.coords, arg.rect)\n\n    for (const state of states) {\n      const { options } = state\n      const lastModifierCoords = extend({}, arg.coords)\n      let returnValue = null\n\n      if (state.methods?.set && this.shouldDo(options, preEnd, phase)) {\n        arg.state = state\n        returnValue = state.methods.set(arg as ModifierArg<never>)\n\n        rectUtils.addEdges(this.interaction.edges, arg.rect, {\n          x: arg.coords.x - lastModifierCoords.x,\n          y: arg.coords.y - lastModifierCoords.y,\n        })\n      }\n\n      newResult.eventProps.push(returnValue)\n    }\n\n    newResult.delta.x = arg.coords.x - arg.pageCoords.x\n    newResult.delta.y = arg.coords.y - arg.pageCoords.y\n\n    newResult.rectDelta.left = arg.rect.left - unmodifiedRect.left\n    newResult.rectDelta.right = arg.rect.right - unmodifiedRect.right\n    newResult.rectDelta.top = arg.rect.top - unmodifiedRect.top\n    newResult.rectDelta.bottom = arg.rect.bottom - unmodifiedRect.bottom\n\n    const prevCoords = this.result.coords\n    const prevRect = this.result.rect\n\n    if (prevCoords && prevRect) {\n      const rectChanged =\n        newResult.rect.left !== prevRect.left ||\n        newResult.rect.right !== prevRect.right ||\n        newResult.rect.top !== prevRect.top ||\n        newResult.rect.bottom !== prevRect.bottom\n\n      newResult.changed =\n        rectChanged || prevCoords.x !== newResult.coords.x || prevCoords.y !== newResult.coords.y\n    }\n\n    return newResult\n  }\n\n  applyToInteraction (arg: { phase: EventPhase, rect?: Rect }) {\n    const { interaction } = this\n    const { phase } = arg\n    const curCoords = interaction.coords.cur\n    const startCoords = interaction.coords.start\n    const { result, startDelta } = this\n    const curDelta = result.delta\n\n    if (phase === 'start') {\n      extend(this.startDelta, result.delta)\n    }\n\n    for (const [coordsSet, delta] of [\n      [startCoords, startDelta],\n      [curCoords, curDelta],\n    ] as const) {\n      coordsSet.page.x += delta.x\n      coordsSet.page.y += delta.y\n      coordsSet.client.x += delta.x\n      coordsSet.client.y += delta.y\n    }\n\n    const { rectDelta } = this.result\n    const rect = arg.rect || interaction.rect\n\n    rect.left += rectDelta.left\n    rect.right += rectDelta.right\n    rect.top += rectDelta.top\n    rect.bottom += rectDelta.bottom\n\n    rect.width = rect.right - rect.left\n    rect.height = rect.bottom - rect.top\n  }\n\n  setAndApply (\n    arg: Partial<DoAnyPhaseArg> & {\n      phase: EventPhase\n      preEnd?: boolean\n      skipModifiers?: number\n      modifiedCoords?: Point\n    },\n  ): void | false {\n    const { interaction } = this\n    const { phase, preEnd, skipModifiers } = arg\n\n    const result = this.setAll(\n      this.fillArg({\n        preEnd,\n        phase,\n        pageCoords: arg.modifiedCoords || interaction.coords.cur.page,\n      }),\n    )\n\n    this.result = result\n\n    // don't fire an action move if a modifier would keep the event in the same\n    // cordinates as before\n    if (\n      !result.changed &&\n      (!skipModifiers || skipModifiers < this.states.length) &&\n      interaction.interacting()\n    ) {\n      return false\n    }\n\n    if (arg.modifiedCoords) {\n      const { page } = interaction.coords.cur\n      const adjustment = {\n        x: arg.modifiedCoords.x - page.x,\n        y: arg.modifiedCoords.y - page.y,\n      }\n\n      result.coords.x += adjustment.x\n      result.coords.y += adjustment.y\n      result.delta.x += adjustment.x\n      result.delta.y += adjustment.y\n    }\n\n    this.applyToInteraction(arg)\n  }\n\n  beforeEnd (arg: Omit<DoAnyPhaseArg, 'iEvent'> & { state?: ModifierState }): void | false {\n    const { interaction, event } = arg\n    const states = this.states\n\n    if (!states || !states.length) {\n      return\n    }\n\n    let doPreend = false\n\n    for (const state of states) {\n      arg.state = state\n      const { options, methods } = state\n\n      const endPosition = methods.beforeEnd && methods.beforeEnd((arg as unknown) as ModifierArg)\n\n      if (endPosition) {\n        this.endResult = endPosition\n        return false\n      }\n\n      doPreend = doPreend || (!doPreend && this.shouldDo(options, true, arg.phase, true))\n    }\n\n    if (doPreend) {\n      // trigger a final modified move before ending\n      interaction.move({ event, preEnd: true })\n    }\n  }\n\n  stop (arg: { interaction: Interaction }) {\n    const { interaction } = arg\n\n    if (!this.states || !this.states.length) {\n      return\n    }\n\n    const modifierArg: Partial<ModifierArg> = extend(\n      {\n        states: this.states,\n        interactable: interaction.interactable,\n        element: interaction.element,\n        rect: null,\n      },\n      arg,\n    )\n\n    this.fillArg(modifierArg)\n\n    for (const state of this.states) {\n      modifierArg.state = state\n\n      if (state.methods.stop) {\n        state.methods.stop(modifierArg as ModifierArg)\n      }\n    }\n\n    this.states = null\n    this.endResult = null\n  }\n\n  prepareStates (modifierList: Modifier[]) {\n    this.states = []\n\n    for (let index = 0; index < modifierList.length; index++) {\n      const { options, methods, name } = modifierList[index]\n\n      this.states.push({\n        options,\n        methods,\n        index,\n        name,\n      })\n    }\n\n    return this.states\n  }\n\n  restoreInteractionCoords ({ interaction: { coords, rect, modification } }: { interaction: Interaction }) {\n    if (!modification.result) return\n\n    const { startDelta } = modification\n    const { delta: curDelta, rectDelta } = modification.result\n\n    const coordsAndDeltas = [\n      [coords.start, startDelta],\n      [coords.cur, curDelta],\n    ]\n\n    for (const [coordsSet, delta] of coordsAndDeltas as any) {\n      coordsSet.page.x -= delta.x\n      coordsSet.page.y -= delta.y\n      coordsSet.client.x -= delta.x\n      coordsSet.client.y -= delta.y\n    }\n\n    rect.left -= rectDelta.left\n    rect.right -= rectDelta.right\n    rect.top -= rectDelta.top\n    rect.bottom -= rectDelta.bottom\n  }\n\n  shouldDo (options, preEnd?: boolean, phase?: string, requireEndOnly?: boolean) {\n    if (\n      // ignore disabled modifiers\n      !options ||\n      options.enabled === false ||\n      // check if we require endOnly option to fire move before end\n      (requireEndOnly && !options.endOnly) ||\n      // don't apply endOnly modifiers when not ending\n      (options.endOnly && !preEnd) ||\n      // check if modifier should run be applied on start\n      (phase === 'start' && !options.setStart)\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  copyFrom (other: Modification) {\n    this.startOffset = other.startOffset\n    this.startDelta = other.startDelta\n    this.edges = other.edges\n    this.states = other.states.map((s) => clone(s) as ModifierState)\n    this.result = createResult(extend({}, other.result.coords), extend({}, other.result.rect))\n  }\n\n  destroy () {\n    for (const prop in this) {\n      this[prop] = null\n    }\n  }\n}\n\nfunction createResult (coords?: Point, rect?: FullRect): ModificationResult {\n  return {\n    rect,\n    coords,\n    delta: { x: 0, y: 0 },\n    rectDelta: {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n    },\n    eventProps: [],\n    changed: true,\n  }\n}\n\nfunction getModifierList (interaction) {\n  const actionOptions = interaction.interactable.options[interaction.prepared.name]\n  const actionModifiers = actionOptions.modifiers\n\n  if (actionModifiers && actionModifiers.length) {\n    return actionModifiers\n  }\n\n  return ['snap', 'snapSize', 'snapEdges', 'restrict', 'restrictEdges', 'restrictSize']\n    .map((type) => {\n      const options = actionOptions[type]\n\n      return (\n        options &&\n        options.enabled && {\n          options,\n          methods: options._methods,\n        }\n      )\n    })\n    .filter((m) => !!m)\n}\n\nexport function getRectOffset (rect, coords) {\n  return rect\n    ? {\n      left: coords.x - rect.left,\n      top: coords.y - rect.top,\n      right: rect.right - coords.x,\n      bottom: rect.bottom - coords.y,\n    }\n    : {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n    }\n}\n","import type { EventPhase, InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { Plugin } from '@interactjs/core/scope'\nimport type { EdgeOptions, FullRect, Point, Rect } from '@interactjs/types/index'\n\nimport Modification from './Modification'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    modification?: Modification\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface InteractEvent {\n    modifiers?: Array<{\n      name: string\n      [key: string]: any\n    }>\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    modifiers?: Modifier[]\n  }\n}\n\nexport interface Modifier<\n  Defaults = any,\n  State extends ModifierState = any,\n  Name extends string = any,\n  Result = any\n> {\n  options: Defaults\n  methods: {\n    start?: (arg: ModifierArg<State>) => void\n    set?: (arg: ModifierArg<State>) => Result\n    beforeEnd?: (arg: ModifierArg<State>) => Point | void\n    stop?: (arg: ModifierArg<State>) => void\n  }\n  name?: Name\n  enable: () => Modifier<Defaults, State, Name, Result>\n  disable: () => Modifier<Defaults, State, Name, Result>\n}\n\nexport type ModifierState<Defaults = unknown, StateProps = unknown, Name extends string = any> = {\n  options: Defaults\n  methods?: Modifier<Defaults>['methods']\n  index?: number\n  name?: Name\n} & StateProps\n\nexport interface ModifierArg<State extends ModifierState = ModifierState> {\n  interaction: Interaction\n  interactable: Interactable\n  phase: EventPhase\n  rect: FullRect\n  edges: EdgeOptions\n  state: State\n  element: Element\n  pageCoords: Point\n  prevCoords: Point\n  prevRect?: FullRect\n  coords: Point\n  startOffset: Rect\n  preEnd?: boolean\n}\n\nexport interface ModifierModule<\n  Defaults extends { enabled?: boolean },\n  State extends ModifierState,\n  Result = unknown\n> {\n  defaults?: Defaults\n  start?(arg: ModifierArg<State>): void\n  set?(arg: ModifierArg<State>): Result\n  beforeEnd?(arg: ModifierArg<State>): Point | void\n  stop?(arg: ModifierArg<State>): void\n}\n\nexport interface ModifierFunction<\n  Defaults extends { enabled?: boolean },\n  State extends ModifierState,\n  Name extends string\n> {\n  (_options?: Partial<Defaults>): Modifier<Defaults, State, Name>\n  _defaults: Defaults\n  _methods: ModifierModule<Defaults, State>\n}\n\nexport function makeModifier<\n  Defaults extends { enabled?: boolean },\n  State extends ModifierState,\n  Name extends string,\n  Result\n> (module: ModifierModule<Defaults, State, Result>, name?: Name) {\n  const { defaults } = module\n  const methods = {\n    start: module.start,\n    set: module.set,\n    beforeEnd: module.beforeEnd,\n    stop: module.stop,\n  }\n\n  const modifier = (_options?: Partial<Defaults>) => {\n    const options = (_options || {}) as Defaults\n\n    options.enabled = options.enabled !== false\n\n    // add missing defaults to options\n    for (const prop in defaults) {\n      if (!(prop in options)) {\n        ;(options as any)[prop] = defaults[prop]\n      }\n    }\n\n    const m: Modifier<Defaults, State, Name, Result> = {\n      options,\n      methods,\n      name,\n      enable: () => {\n        options.enabled = true\n        return m\n      },\n      disable: () => {\n        options.enabled = false\n        return m\n      },\n    }\n\n    return m\n  }\n\n  if (name && typeof name === 'string') {\n    // for backwrads compatibility\n    modifier._defaults = defaults\n    modifier._methods = methods\n  }\n\n  return modifier\n}\n\nexport function addEventModifiers ({\n  iEvent,\n  interaction,\n}: {\n  iEvent: InteractEvent<any>\n  interaction: Interaction<any>\n}) {\n  const result = interaction.modification!.result\n\n  if (result) {\n    iEvent.modifiers = result.eventProps\n  }\n}\n\nconst modifiersBase: Plugin = {\n  id: 'modifiers/base',\n  before: ['actions'],\n  install: (scope) => {\n    scope.defaults.perAction.modifiers = []\n  },\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.modification = new Modification(interaction)\n    },\n\n    'interactions:before-action-start': (arg) => {\n      const modification = arg.interaction.modification!\n\n      modification.start(arg, arg.interaction.coords.start.page)\n      arg.interaction.edges = modification.edges\n      modification.applyToInteraction(arg)\n    },\n\n    'interactions:before-action-move': (arg) => arg.interaction.modification.setAndApply(arg),\n\n    'interactions:before-action-end': (arg) => arg.interaction.modification.beforeEnd(arg),\n\n    'interactions:action-start': addEventModifiers,\n    'interactions:action-move': addEventModifiers,\n    'interactions:action-end': addEventModifiers,\n\n    'interactions:after-action-start': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n    'interactions:after-action-move': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n\n    'interactions:stop': (arg) => arg.interaction.modification.stop(arg),\n  },\n}\n\nexport default modifiersBase\n","import type { Point, Listeners, OrBoolean, Element } from '@interactjs/types/index'\n\nexport interface Defaults {\n  base: BaseDefaults\n  perAction: PerActionDefaults\n  actions: ActionDefaults\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface ActionDefaults {}\n\nexport interface BaseDefaults {\n  preventDefault?: 'auto' | 'never' | string\n  deltaSource?: 'page' | 'client'\n  context?: Node\n}\n\nexport interface PerActionDefaults {\n  enabled?: boolean\n  origin?: Point | string | Element\n  listeners?: Listeners\n  allowFrom?: string | Element\n  ignoreFrom?: string | Element\n}\n\nexport type Options = Partial<BaseDefaults> &\nPartial<PerActionDefaults> &\n{\n  [P in keyof ActionDefaults]?: Partial<ActionDefaults[P]>\n}\n\n// export interface Options extends BaseDefaults, PerActionDefaults {}\n\nexport interface OptionsArg extends BaseDefaults, OrBoolean<Partial<ActionDefaults>> {}\n\nexport const defaults: Defaults = {\n  base: {\n    preventDefault: 'auto',\n    deltaSource: 'page',\n  },\n\n  perAction: {\n    enabled: false,\n    origin: { x: 0, y: 0 },\n  },\n\n  actions: {} as ActionDefaults,\n}\n","import type { ActionName } from '@interactjs/core/scope'\nimport type { Point, FullRect, PointerEventType, Element } from '@interactjs/types/index'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport hypot from '@interactjs/utils/hypot'\n\nimport { BaseEvent } from './BaseEvent'\nimport type { Interaction } from './Interaction'\nimport { defaults } from './options'\n\nexport type EventPhase = keyof PhaseMap\n\nexport interface PhaseMap {\n  start: true\n  move: true\n  end: true\n}\n\n// defined outside of class definition to avoid assignment of undefined during\n// construction\nexport interface InteractEvent {\n  pageX: number\n  pageY: number\n\n  clientX: number\n  clientY: number\n\n  dx: number\n  dy: number\n\n  velocityX: number\n  velocityY: number\n}\n\nexport class InteractEvent<\n  T extends ActionName = never,\n  P extends EventPhase = EventPhase\n> extends BaseEvent<T> {\n  target: Element\n  currentTarget: Element\n  relatedTarget: Element | null = null\n  screenX?: number\n  screenY?: number\n  button: number\n  buttons: number\n  ctrlKey: boolean\n  shiftKey: boolean\n  altKey: boolean\n  metaKey: boolean\n  page: Point\n  client: Point\n  delta: Point\n  rect: FullRect\n  x0: number\n  y0: number\n  t0: number\n  dt: number\n  duration: number\n  clientX0: number\n  clientY0: number\n  velocity: Point\n  speed: number\n  swipe: ReturnType<InteractEvent<T>['getSwipe']>\n  timeStamp: any\n  // resize\n  axes?: 'x' | 'y' | 'xy'\n  preEnd?: boolean\n\n  /** */\n  constructor (\n    interaction: Interaction<T>,\n    event: PointerEventType,\n    actionName: T,\n    phase: P,\n    element: Element,\n    preEnd?: boolean,\n    type?: string,\n  ) {\n    super(interaction)\n\n    element = element || interaction.element\n\n    const target = interaction.interactable\n    const deltaSource = (((target && target.options) || defaults) as any).deltaSource as 'page' | 'client'\n    const origin = getOriginXY(target, element, actionName)\n    const starting = phase === 'start'\n    const ending = phase === 'end'\n    const prevEvent = starting ? this : interaction.prevEvent\n    const coords = starting\n      ? interaction.coords.start\n      : ending\n        ? { page: prevEvent.page, client: prevEvent.client, timeStamp: interaction.coords.cur.timeStamp }\n        : interaction.coords.cur\n\n    this.page = extend({}, coords.page)\n    this.client = extend({}, coords.client)\n    this.rect = extend({}, interaction.rect)\n    this.timeStamp = coords.timeStamp\n\n    if (!ending) {\n      this.page.x -= origin.x\n      this.page.y -= origin.y\n\n      this.client.x -= origin.x\n      this.client.y -= origin.y\n    }\n\n    this.ctrlKey = event.ctrlKey\n    this.altKey = event.altKey\n    this.shiftKey = event.shiftKey\n    this.metaKey = event.metaKey\n    this.button = (event as MouseEvent).button\n    this.buttons = (event as MouseEvent).buttons\n    this.target = element\n    this.currentTarget = element\n    this.preEnd = preEnd\n    this.type = type || actionName + (phase || '')\n    this.interactable = target\n\n    this.t0 = starting ? interaction.pointers[interaction.pointers.length - 1].downTime : prevEvent.t0\n\n    this.x0 = interaction.coords.start.page.x - origin.x\n    this.y0 = interaction.coords.start.page.y - origin.y\n    this.clientX0 = interaction.coords.start.client.x - origin.x\n    this.clientY0 = interaction.coords.start.client.y - origin.y\n\n    if (starting || ending) {\n      this.delta = { x: 0, y: 0 }\n    } else {\n      this.delta = {\n        x: this[deltaSource].x - prevEvent[deltaSource].x,\n        y: this[deltaSource].y - prevEvent[deltaSource].y,\n      }\n    }\n\n    this.dt = interaction.coords.delta.timeStamp\n    this.duration = this.timeStamp - this.t0\n\n    // velocity and speed in pixels per second\n    this.velocity = extend({}, interaction.coords.velocity[deltaSource])\n    this.speed = hypot(this.velocity.x, this.velocity.y)\n\n    this.swipe = ending || phase === 'inertiastart' ? this.getSwipe() : null\n  }\n\n  getSwipe () {\n    const interaction = this._interaction\n\n    if (interaction.prevEvent.speed < 600 || this.timeStamp - interaction.prevEvent.timeStamp > 150) {\n      return null\n    }\n\n    let angle = (180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX)) / Math.PI\n    const overlap = 22.5\n\n    if (angle < 0) {\n      angle += 360\n    }\n\n    const left = 135 - overlap <= angle && angle < 225 + overlap\n    const up = 225 - overlap <= angle && angle < 315 + overlap\n\n    const right = !left && (315 - overlap <= angle || angle < 45 + overlap)\n    const down = !up && 45 - overlap <= angle && angle < 135 + overlap\n\n    return {\n      up,\n      down,\n      left,\n      right,\n      angle,\n      speed: interaction.prevEvent.speed,\n      velocity: {\n        x: interaction.prevEvent.velocityX,\n        y: interaction.prevEvent.velocityY,\n      },\n    }\n  }\n\n  preventDefault () {}\n\n  /**\n   * Don't call listeners on the remaining targets\n   */\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n\n  /**\n   * Don't call any other listeners (even on the current target)\n   */\n  stopPropagation () {\n    this.propagationStopped = true\n  }\n}\n\n// getters and setters defined here to support typescript 3.6 and below which\n// don't support getter and setters in .d.ts files\nObject.defineProperties(InteractEvent.prototype, {\n  pageX: {\n    get () {\n      return this.page.x\n    },\n    set (value) {\n      this.page.x = value\n    },\n  },\n  pageY: {\n    get () {\n      return this.page.y\n    },\n    set (value) {\n      this.page.y = value\n    },\n  },\n\n  clientX: {\n    get () {\n      return this.client.x\n    },\n    set (value) {\n      this.client.x = value\n    },\n  },\n  clientY: {\n    get () {\n      return this.client.y\n    },\n    set (value) {\n      this.client.y = value\n    },\n  },\n\n  dx: {\n    get () {\n      return this.delta.x\n    },\n    set (value) {\n      this.delta.x = value\n    },\n  },\n  dy: {\n    get () {\n      return this.delta.y\n    },\n    set (value) {\n      this.delta.y = value\n    },\n  },\n\n  velocityX: {\n    get () {\n      return this.velocity.x\n    },\n    set (value) {\n      this.velocity.x = value\n    },\n  },\n  velocityY: {\n    get () {\n      return this.velocity.y\n    },\n    set (value) {\n      this.velocity.y = value\n    },\n  },\n})\n","import type { PointerEventType, PointerType } from '@interactjs/types/index'\n\nexport class PointerInfo {\n  id: number\n  pointer: PointerType\n  event: PointerEventType\n  downTime: number\n  downTarget: Node\n\n  constructor (id: number, pointer: PointerType, event: PointerEventType, downTime: number, downTarget: Node) {\n    this.id = id\n    this.pointer = pointer\n    this.event = event\n    this.downTime = downTime\n    this.downTarget = downTarget\n  }\n}\n","import type { ActionDefaults } from '@interactjs/core/options'\nimport type {\n  Element,\n  EdgeOptions,\n  PointerEventType,\n  PointerType,\n  FullRect,\n  CoordsSet,\n} from '@interactjs/types/index'\nimport * as arr from '@interactjs/utils/arr'\nimport extend from '@interactjs/utils/extend'\nimport hypot from '@interactjs/utils/hypot'\nimport { warnOnce, copyAction } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport type { EventPhase } from './InteractEvent'\nimport { InteractEvent } from './InteractEvent'\nimport type { Interactable } from './Interactable'\nimport { PointerInfo } from './PointerInfo'\nimport type { ActionName, Scope } from './scope'\n\nexport interface ActionProps<T extends ActionName | null = never> {\n  name: T\n  axis?: 'x' | 'y' | 'xy' | null\n  edges?: EdgeOptions | null\n}\n\nexport enum _ProxyValues {\n  interactable = '',\n  element = '',\n  prepared = '',\n  pointerIsDown = '',\n  pointerWasMoved = '',\n  _proxy = '',\n}\n\nexport enum _ProxyMethods {\n  start = '',\n  move = '',\n  end = '',\n  stop = '',\n  interacting = '',\n}\n\nexport type PointerArgProps<T extends {} = {}> = {\n  pointer: PointerType\n  event: PointerEventType\n  eventTarget: Node\n  pointerIndex: number\n  pointerInfo: PointerInfo\n  interaction: Interaction<never>\n} & T\n\nexport interface DoPhaseArg<T extends ActionName, P extends EventPhase> {\n  event: PointerEventType\n  phase: EventPhase\n  interaction: Interaction<T>\n  iEvent: InteractEvent<T, P>\n  preEnd?: boolean\n  type?: string\n}\n\nexport type DoAnyPhaseArg = DoPhaseArg<ActionName, EventPhase>\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:new': { interaction: Interaction<ActionName> }\n    'interactions:down': PointerArgProps<{\n      type: 'down'\n    }>\n    'interactions:move': PointerArgProps<{\n      type: 'move'\n      dx: number\n      dy: number\n      duplicate: boolean\n    }>\n    'interactions:up': PointerArgProps<{\n      type: 'up'\n      curEventTarget: EventTarget\n    }>\n    'interactions:cancel': SignalArgs['interactions:up'] & {\n      type: 'cancel'\n      curEventTarget: EventTarget\n    }\n    'interactions:update-pointer': PointerArgProps<{\n      down: boolean\n    }>\n    'interactions:remove-pointer': PointerArgProps\n    'interactions:blur': { interaction: Interaction<never>, event: Event, type: 'blur' }\n    'interactions:before-action-start': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-start': DoAnyPhaseArg\n    'interactions:after-action-start': DoAnyPhaseArg\n    'interactions:before-action-move': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-move': DoAnyPhaseArg\n    'interactions:after-action-move': DoAnyPhaseArg\n    'interactions:before-action-end': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-end': DoAnyPhaseArg\n    'interactions:after-action-end': DoAnyPhaseArg\n    'interactions:stop': { interaction: Interaction }\n  }\n}\n\nexport type InteractionProxy<T extends ActionName | null = never> = Pick<\nInteraction<T>,\nkeyof typeof _ProxyValues | keyof typeof _ProxyMethods\n>\n\nlet idCounter = 0\n\nexport class Interaction<T extends ActionName | null = ActionName> {\n  // current interactable being interacted with\n  interactable: Interactable = null\n\n  // the target element of the interactable\n  element: Element = null\n  rect: FullRect\n  _rects?: {\n    start: FullRect\n    corrected: FullRect\n    previous: FullRect\n    delta: FullRect\n  }\n  edges: EdgeOptions\n\n  _scopeFire: Scope['fire']\n\n  // action that's ready to be fired on next move event\n  prepared: ActionProps<T> = {\n    name: null,\n    axis: null,\n    edges: null,\n  }\n\n  pointerType: string\n\n  // keep track of added pointers\n  pointers: PointerInfo[] = []\n\n  // pointerdown/mousedown/touchstart event\n  downEvent: PointerEventType = null\n\n  downPointer: PointerType = {} as PointerType\n\n  _latestPointer: {\n    pointer: PointerType\n    event: PointerEventType\n    eventTarget: Node\n  } = {\n    pointer: null,\n    event: null,\n    eventTarget: null,\n  }\n\n  // previous action event\n  prevEvent: InteractEvent<T, EventPhase> = null\n\n  pointerIsDown = false\n  pointerWasMoved = false\n  _interacting = false\n  _ending = false\n  _stopped = true\n  _proxy: InteractionProxy<T> = null\n\n  simulation = null\n\n  /** @internal */ get pointerMoveTolerance () {\n    return 1\n  }\n\n  /**\n   * @alias Interaction.prototype.move\n   */\n  doMove = warnOnce(function (this: Interaction, signalArg: any) {\n    this.move(signalArg)\n  }, 'The interaction.doMove() method has been renamed to interaction.move()')\n\n  coords: CoordsSet = {\n    // Starting InteractEvent pointer coordinates\n    start: pointerUtils.newCoords(),\n    // Previous native pointer move event coordinates\n    prev: pointerUtils.newCoords(),\n    // current native pointer move event coordinates\n    cur: pointerUtils.newCoords(),\n    // Change in coordinates and time of the pointer\n    delta: pointerUtils.newCoords(),\n    // pointer velocity\n    velocity: pointerUtils.newCoords(),\n  }\n\n  readonly _id: number = idCounter++\n\n  /** */\n  constructor ({ pointerType, scopeFire }: { pointerType?: string, scopeFire: Scope['fire'] }) {\n    this._scopeFire = scopeFire\n    this.pointerType = pointerType\n\n    const that = this\n\n    this._proxy = {} as InteractionProxy<T>\n\n    for (const key in _ProxyValues) {\n      Object.defineProperty(this._proxy, key, {\n        get () {\n          return that[key]\n        },\n      })\n    }\n\n    for (const key in _ProxyMethods) {\n      Object.defineProperty(this._proxy, key, {\n        value: (...args: any[]) => that[key](...args),\n      })\n    }\n\n    this._scopeFire('interactions:new', { interaction: this })\n  }\n\n  pointerDown (pointer: PointerType, event: PointerEventType, eventTarget: Node) {\n    const pointerIndex = this.updatePointer(pointer, event, eventTarget, true)\n    const pointerInfo = this.pointers[pointerIndex]\n\n    this._scopeFire('interactions:down', {\n      pointer,\n      event,\n      eventTarget,\n      pointerIndex,\n      pointerInfo,\n      type: 'down',\n      interaction: (this as unknown) as Interaction<never>,\n    })\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable({\n   *     // disable the default drag start by down->move\n   *     manualStart: true\n   *   })\n   *   // start dragging after the user holds the pointer down\n   *   .on('hold', function (event) {\n   *     var interaction = event.interaction\n   *\n   *     if (!interaction.interacting()) {\n   *       interaction.start({ name: 'drag' },\n   *                         event.interactable,\n   *                         event.currentTarget)\n   *     }\n   * })\n   * ```\n   *\n   * Start an action with the given Interactable and Element as tartgets. The\n   * action must be enabled for the target Interactable and an appropriate\n   * number of pointers must be held down - 1 for drag/resize, 2 for gesture.\n   *\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\n   *\n   * @param {object} action   The action to be performed - drag, resize, etc.\n   * @param {Interactable} target  The Interactable to target\n   * @param {Element} element The DOM Element to target\n   * @return {Boolean} Whether the interaction was successfully started\n   */\n  start<A extends ActionName> (action: ActionProps<A>, interactable: Interactable, element: Element): boolean {\n    if (\n      this.interacting() ||\n      !this.pointerIsDown ||\n      this.pointers.length < (action.name === 'gesture' ? 2 : 1) ||\n      !interactable.options[action.name as keyof ActionDefaults].enabled\n    ) {\n      return false\n    }\n\n    copyAction(this.prepared, action)\n\n    this.interactable = interactable\n    this.element = element\n    this.rect = interactable.getRect(element)\n    this.edges = this.prepared.edges\n      ? extend({}, this.prepared.edges)\n      : { left: true, right: true, top: true, bottom: true }\n    this._stopped = false\n    this._interacting =\n      this._doPhase({\n        interaction: this,\n        event: this.downEvent,\n        phase: 'start',\n      }) && !this._stopped\n\n    return this._interacting\n  }\n\n  pointerMove (pointer: PointerType, event: PointerEventType, eventTarget: Node) {\n    if (!this.simulation && !(this.modification && this.modification.endResult)) {\n      this.updatePointer(pointer, event, eventTarget, false)\n    }\n\n    const duplicateMove =\n      this.coords.cur.page.x === this.coords.prev.page.x &&\n      this.coords.cur.page.y === this.coords.prev.page.y &&\n      this.coords.cur.client.x === this.coords.prev.client.x &&\n      this.coords.cur.client.y === this.coords.prev.client.y\n\n    let dx: number\n    let dy: number\n\n    // register movement greater than pointerMoveTolerance\n    if (this.pointerIsDown && !this.pointerWasMoved) {\n      dx = this.coords.cur.client.x - this.coords.start.client.x\n      dy = this.coords.cur.client.y - this.coords.start.client.y\n\n      this.pointerWasMoved = hypot(dx, dy) > this.pointerMoveTolerance\n    }\n\n    const pointerIndex = this.getPointerIndex(pointer)\n    const signalArg = {\n      pointer,\n      pointerIndex,\n      pointerInfo: this.pointers[pointerIndex],\n      event,\n      type: 'move' as const,\n      eventTarget,\n      dx,\n      dy,\n      duplicate: duplicateMove,\n      interaction: (this as unknown) as Interaction<never>,\n    }\n\n    if (!duplicateMove) {\n      // set pointer coordinate, time changes and velocity\n      pointerUtils.setCoordVelocity(this.coords.velocity, this.coords.delta)\n    }\n\n    this._scopeFire('interactions:move', signalArg)\n\n    if (!duplicateMove && !this.simulation) {\n      // if interacting, fire an 'action-move' signal etc\n      if (this.interacting()) {\n        signalArg.type = null\n        this.move(signalArg)\n      }\n\n      if (this.pointerWasMoved) {\n        pointerUtils.copyCoords(this.coords.prev, this.coords.cur)\n      }\n    }\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('dragmove', function (event) {\n   *     if (someCondition) {\n   *       // change the snap settings\n   *       event.interactable.draggable({ snap: { targets: [] }})\n   *       // fire another move event with re-calculated snap\n   *       event.interaction.move()\n   *     }\n   *   })\n   * ```\n   *\n   * Force a move of the current action at the same coordinates. Useful if\n   * snap/restrict has been changed and you want a movement with the new\n   * settings.\n   */\n  move (signalArg?: any) {\n    if (!signalArg || !signalArg.event) {\n      pointerUtils.setZeroCoords(this.coords.delta)\n    }\n\n    signalArg = extend(\n      {\n        pointer: this._latestPointer.pointer,\n        event: this._latestPointer.event,\n        eventTarget: this._latestPointer.eventTarget,\n        interaction: this,\n      },\n      signalArg || {},\n    )\n\n    signalArg.phase = 'move'\n\n    this._doPhase(signalArg)\n  }\n\n  // End interact move events and stop auto-scroll unless simulation is running\n  pointerUp (pointer: PointerType, event: PointerEventType, eventTarget: Node, curEventTarget: EventTarget) {\n    let pointerIndex = this.getPointerIndex(pointer)\n\n    if (pointerIndex === -1) {\n      pointerIndex = this.updatePointer(pointer, event, eventTarget, false)\n    }\n\n    const type = /cancel$/i.test(event.type) ? 'cancel' : 'up'\n\n    this._scopeFire(`interactions:${type}` as 'interactions:up' | 'interactions:cancel', {\n      pointer,\n      pointerIndex,\n      pointerInfo: this.pointers[pointerIndex],\n      event,\n      eventTarget,\n      type: type as any,\n      curEventTarget,\n      interaction: (this as unknown) as Interaction<never>,\n    })\n\n    if (!this.simulation) {\n      this.end(event)\n    }\n\n    this.removePointer(pointer, event)\n  }\n\n  documentBlur (event: Event) {\n    this.end(event as any)\n    this._scopeFire('interactions:blur', {\n      event,\n      type: 'blur',\n      interaction: (this as unknown) as Interaction<never>,\n    })\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('move', function (event) {\n   *     if (event.pageX > 1000) {\n   *       // end the current action\n   *       event.interaction.end()\n   *       // stop all further listeners from being called\n   *       event.stopImmediatePropagation()\n   *     }\n   *   })\n   * ```\n   *\n   * @param {PointerEvent} [event]\n   */\n  end (event?: PointerEventType) {\n    this._ending = true\n    event = event || this._latestPointer.event\n    let endPhaseResult: boolean\n\n    if (this.interacting()) {\n      endPhaseResult = this._doPhase({\n        event,\n        interaction: this,\n        phase: 'end',\n      })\n    }\n\n    this._ending = false\n\n    if (endPhaseResult === true) {\n      this.stop()\n    }\n  }\n\n  currentAction () {\n    return this._interacting ? this.prepared.name : null\n  }\n\n  interacting () {\n    return this._interacting\n  }\n\n  /** */\n  stop () {\n    this._scopeFire('interactions:stop', { interaction: this })\n\n    this.interactable = this.element = null\n\n    this._interacting = false\n    this._stopped = true\n    this.prepared.name = this.prevEvent = null\n  }\n\n  getPointerIndex (pointer: PointerType) {\n    const pointerId = pointerUtils.getPointerId(pointer)\n\n    // mouse and pen interactions may have only one pointer\n    return this.pointerType === 'mouse' || this.pointerType === 'pen'\n      ? this.pointers.length - 1\n      : arr.findIndex(this.pointers, (curPointer) => curPointer.id === pointerId)\n  }\n\n  getPointerInfo (pointer: any) {\n    return this.pointers[this.getPointerIndex(pointer)]\n  }\n\n  updatePointer (pointer: PointerType, event: PointerEventType, eventTarget: Node, down?: boolean) {\n    const id = pointerUtils.getPointerId(pointer)\n    let pointerIndex = this.getPointerIndex(pointer)\n    let pointerInfo = this.pointers[pointerIndex]\n\n    down = down === false ? false : down || /(down|start)$/i.test(event.type)\n\n    if (!pointerInfo) {\n      pointerInfo = new PointerInfo(id, pointer, event, null, null)\n\n      pointerIndex = this.pointers.length\n      this.pointers.push(pointerInfo)\n    } else {\n      pointerInfo.pointer = pointer\n    }\n\n    pointerUtils.setCoords(\n      this.coords.cur,\n      this.pointers.map((p) => p.pointer),\n      this._now(),\n    )\n    pointerUtils.setCoordDeltas(this.coords.delta, this.coords.prev, this.coords.cur)\n\n    if (down) {\n      this.pointerIsDown = true\n\n      pointerInfo.downTime = this.coords.cur.timeStamp\n      pointerInfo.downTarget = eventTarget\n      pointerUtils.pointerExtend(this.downPointer, pointer)\n\n      if (!this.interacting()) {\n        pointerUtils.copyCoords(this.coords.start, this.coords.cur)\n        pointerUtils.copyCoords(this.coords.prev, this.coords.cur)\n\n        this.downEvent = event\n        this.pointerWasMoved = false\n      }\n    }\n\n    this._updateLatestPointer(pointer, event, eventTarget)\n\n    this._scopeFire('interactions:update-pointer', {\n      pointer,\n      event,\n      eventTarget,\n      down,\n      pointerInfo,\n      pointerIndex,\n      interaction: (this as unknown) as Interaction<never>,\n    })\n\n    return pointerIndex\n  }\n\n  removePointer (pointer: PointerType, event: PointerEventType) {\n    const pointerIndex = this.getPointerIndex(pointer)\n\n    if (pointerIndex === -1) return\n\n    const pointerInfo = this.pointers[pointerIndex]\n\n    this._scopeFire('interactions:remove-pointer', {\n      pointer,\n      event,\n      eventTarget: null,\n      pointerIndex,\n      pointerInfo,\n      interaction: (this as unknown) as Interaction<never>,\n    })\n\n    this.pointers.splice(pointerIndex, 1)\n    this.pointerIsDown = false\n  }\n\n  _updateLatestPointer (pointer: PointerType, event: PointerEventType, eventTarget: Node) {\n    this._latestPointer.pointer = pointer\n    this._latestPointer.event = event\n    this._latestPointer.eventTarget = eventTarget\n  }\n\n  destroy () {\n    this._latestPointer.pointer = null\n    this._latestPointer.event = null\n    this._latestPointer.eventTarget = null\n  }\n\n  _createPreparedEvent<P extends EventPhase> (\n    event: PointerEventType,\n    phase: P,\n    preEnd?: boolean,\n    type?: string,\n  ) {\n    return new InteractEvent<T, P>(this, event, this.prepared.name, phase, this.element, preEnd, type)\n  }\n\n  _fireEvent<P extends EventPhase> (iEvent: InteractEvent<T, P>) {\n    this.interactable.fire(iEvent)\n\n    if (!this.prevEvent || iEvent.timeStamp >= this.prevEvent.timeStamp) {\n      this.prevEvent = iEvent\n    }\n  }\n\n  _doPhase<P extends EventPhase> (\n    signalArg: Omit<DoPhaseArg<T, P>, 'iEvent'> & { iEvent?: InteractEvent<T, P> },\n  ) {\n    const { event, phase, preEnd, type } = signalArg\n    const { rect } = this\n\n    if (rect && phase === 'move') {\n      // update the rect changes due to pointer move\n      rectUtils.addEdges(this.edges, rect, this.coords.delta[this.interactable.options.deltaSource])\n\n      rect.width = rect.right - rect.left\n      rect.height = rect.bottom - rect.top\n    }\n\n    const beforeResult = this._scopeFire(`interactions:before-action-${phase}` as any, signalArg)\n\n    if (beforeResult === false) {\n      return false\n    }\n\n    const iEvent = (signalArg.iEvent = this._createPreparedEvent(event, phase, preEnd, type))\n\n    this._scopeFire(`interactions:action-${phase}` as any, signalArg)\n\n    if (phase === 'start') {\n      this.prevEvent = iEvent\n    }\n\n    this._fireEvent(iEvent)\n\n    this._scopeFire(`interactions:after-action-${phase}` as any, signalArg)\n\n    return true\n  }\n\n  _now () {\n    return Date.now()\n  }\n}\n\nexport default Interaction\nexport { PointerInfo }\n","import type Interaction from '@interactjs/core/Interaction'\nimport { _ProxyMethods } from '@interactjs/core/Interaction'\nimport type { Plugin } from '@interactjs/core/scope'\nimport type { Point } from '@interactjs/types/index'\nimport * as rectUtils from '@interactjs/utils/rect'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    offsetBy?: typeof offsetBy\n    offset: {\n      total: Point\n      pending: Point\n    }\n  }\n\n  enum _ProxyMethods {\n    offsetBy = '',\n  }\n}\n\n;(_ProxyMethods as any).offsetBy = ''\n\nexport function addTotal (interaction: Interaction) {\n  if (!interaction.pointerIsDown) {\n    return\n  }\n\n  addToCoords(interaction.coords.cur, interaction.offset.total)\n\n  interaction.offset.pending.x = 0\n  interaction.offset.pending.y = 0\n}\n\nfunction beforeAction ({ interaction }: { interaction: Interaction }) {\n  applyPending(interaction)\n}\n\nfunction beforeEnd ({ interaction }: { interaction: Interaction }): boolean | void {\n  const hadPending = applyPending(interaction)\n\n  if (!hadPending) return\n\n  interaction.move({ offset: true })\n  interaction.end()\n\n  return false\n}\n\nfunction end ({ interaction }: { interaction: Interaction }) {\n  interaction.offset.total.x = 0\n  interaction.offset.total.y = 0\n  interaction.offset.pending.x = 0\n  interaction.offset.pending.y = 0\n}\n\nexport function applyPending (interaction: Interaction) {\n  if (!hasPending(interaction)) {\n    return false\n  }\n\n  const { pending } = interaction.offset\n\n  addToCoords(interaction.coords.cur, pending)\n  addToCoords(interaction.coords.delta, pending)\n  rectUtils.addEdges(interaction.edges, interaction.rect, pending)\n\n  pending.x = 0\n  pending.y = 0\n\n  return true\n}\n\nfunction offsetBy (this: Interaction, { x, y }: Point) {\n  this.offset.pending.x += x\n  this.offset.pending.y += y\n\n  this.offset.total.x += x\n  this.offset.total.y += y\n}\n\nfunction addToCoords ({ page, client }, { x, y }: Point) {\n  page.x += x\n  page.y += y\n  client.x += x\n  client.y += y\n}\n\nfunction hasPending (interaction: Interaction) {\n  return !!(interaction.offset.pending.x || interaction.offset.pending.y)\n}\n\nconst offset: Plugin = {\n  id: 'offset',\n  before: ['modifiers', 'pointer-events', 'actions', 'inertia'],\n  install (scope) {\n    scope.Interaction.prototype.offsetBy = offsetBy\n  },\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.offset = {\n        total: { x: 0, y: 0 },\n        pending: { x: 0, y: 0 },\n      }\n    },\n    'interactions:update-pointer': ({ interaction }) => addTotal(interaction),\n    'interactions:before-action-start': beforeAction,\n    'interactions:before-action-move': beforeAction,\n    'interactions:before-action-end': beforeEnd,\n    'interactions:stop': end,\n  },\n}\n\nexport default offset\n","import type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { ActionName, Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport Modification from '@interactjs/modifiers/Modification'\nimport * as modifiers from '@interactjs/modifiers/base'\nimport offset from '@interactjs/offset/plugin'\nimport type { Point, PointerEventType } from '@interactjs/types/index'\nimport * as dom from '@interactjs/utils/domUtils'\nimport hypot from '@interactjs/utils/hypot'\nimport is from '@interactjs/utils/is'\nimport { copyCoords } from '@interactjs/utils/pointerUtils'\nimport raf from '@interactjs/utils/raf'\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface PhaseMap {\n    resume?: true\n    inertiastart?: true\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    inertia?: InertiaState\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    inertia?: {\n      enabled?: boolean\n      resistance?: number // the lambda in exponential decay\n      minSpeed?: number // target speed must be above this for inertia to start\n      endSpeed?: number // the speed at which inertia is slow enough to stop\n      allowResume?: true // allow resuming an action in inertia phase\n      smoothEndDuration?: number // animate to snap/restrict endOnly if there's no inertia\n    }\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:before-action-inertiastart': Omit<DoPhaseArg<ActionName, 'inertiastart'>, 'iEvent'>\n    'interactions:action-inertiastart': DoPhaseArg<ActionName, 'inertiastart'>\n    'interactions:after-action-inertiastart': DoPhaseArg<ActionName, 'inertiastart'>\n    'interactions:before-action-resume': Omit<DoPhaseArg<ActionName, 'resume'>, 'iEvent'>\n    'interactions:action-resume': DoPhaseArg<ActionName, 'resume'>\n    'interactions:after-action-resume': DoPhaseArg<ActionName, 'resume'>\n  }\n}\n\nfunction install (scope: Scope) {\n  const { defaults } = scope\n\n  scope.usePlugin(offset)\n  scope.usePlugin(modifiers.default)\n  scope.actions.phases.inertiastart = true\n  scope.actions.phases.resume = true\n\n  defaults.perAction.inertia = {\n    enabled: false,\n    resistance: 10, // the lambda in exponential decay\n    minSpeed: 100, // target speed must be above this for inertia to start\n    endSpeed: 10, // the speed at which inertia is slow enough to stop\n    allowResume: true, // allow resuming an action in inertia phase\n    smoothEndDuration: 300, // animate to snap/restrict endOnly if there's no inertia\n  }\n}\n\nexport class InertiaState {\n  active = false\n  isModified = false\n  smoothEnd = false\n  allowResume = false\n\n  modification!: Modification\n  modifierCount = 0\n  modifierArg!: modifiers.ModifierArg\n\n  startCoords!: Point\n  t0 = 0\n  v0 = 0\n\n  te = 0\n  targetOffset!: Point\n  modifiedOffset!: Point\n  currentOffset!: Point\n\n  lambda_v0? = 0 // eslint-disable-line camelcase\n  one_ve_v0? = 0 // eslint-disable-line camelcase\n  timeout!: number\n  readonly interaction: Interaction\n\n  constructor (interaction: Interaction) {\n    this.interaction = interaction\n  }\n\n  start (event: PointerEventType) {\n    const { interaction } = this\n    const options = getOptions(interaction)\n\n    if (!options || !options.enabled) {\n      return false\n    }\n\n    const { client: velocityClient } = interaction.coords.velocity\n    const pointerSpeed = hypot(velocityClient.x, velocityClient.y)\n    const modification = this.modification || (this.modification = new Modification(interaction))\n\n    modification.copyFrom(interaction.modification)\n\n    this.t0 = interaction._now()\n    this.allowResume = options.allowResume\n    this.v0 = pointerSpeed\n    this.currentOffset = { x: 0, y: 0 }\n    this.startCoords = interaction.coords.cur.page\n\n    this.modifierArg = modification.fillArg({\n      pageCoords: this.startCoords,\n      preEnd: true,\n      phase: 'inertiastart',\n    })\n\n    const thrown =\n      this.t0 - interaction.coords.cur.timeStamp < 50 &&\n      pointerSpeed > options.minSpeed &&\n      pointerSpeed > options.endSpeed\n\n    if (thrown) {\n      this.startInertia()\n    } else {\n      modification.result = modification.setAll(this.modifierArg)\n\n      if (!modification.result.changed) {\n        return false\n      }\n\n      this.startSmoothEnd()\n    }\n\n    // force modification change\n    interaction.modification.result.rect = null\n\n    // bring inertiastart event to the target coords\n    interaction.offsetBy(this.targetOffset)\n    interaction._doPhase({\n      interaction,\n      event,\n      phase: 'inertiastart',\n    })\n    interaction.offsetBy({ x: -this.targetOffset.x, y: -this.targetOffset.y })\n    // force modification change\n    interaction.modification.result.rect = null\n\n    this.active = true\n    interaction.simulation = this\n\n    return true\n  }\n\n  startInertia () {\n    const startVelocity = this.interaction.coords.velocity.client\n    const options = getOptions(this.interaction)\n    const lambda = options.resistance\n    const inertiaDur = -Math.log(options.endSpeed / this.v0) / lambda\n\n    this.targetOffset = {\n      x: (startVelocity.x - inertiaDur) / lambda,\n      y: (startVelocity.y - inertiaDur) / lambda,\n    }\n\n    this.te = inertiaDur\n    this.lambda_v0 = lambda / this.v0\n    this.one_ve_v0 = 1 - options.endSpeed / this.v0\n\n    const { modification, modifierArg } = this\n\n    modifierArg.pageCoords = {\n      x: this.startCoords.x + this.targetOffset.x,\n      y: this.startCoords.y + this.targetOffset.y,\n    }\n\n    modification.result = modification.setAll(modifierArg)\n\n    if (modification.result.changed) {\n      this.isModified = true\n      this.modifiedOffset = {\n        x: this.targetOffset.x + modification.result.delta.x,\n        y: this.targetOffset.y + modification.result.delta.y,\n      }\n    }\n\n    this.onNextFrame(() => this.inertiaTick())\n  }\n\n  startSmoothEnd () {\n    this.smoothEnd = true\n    this.isModified = true\n    this.targetOffset = {\n      x: this.modification.result.delta.x,\n      y: this.modification.result.delta.y,\n    }\n\n    this.onNextFrame(() => this.smoothEndTick())\n  }\n\n  onNextFrame (tickFn: () => void) {\n    this.timeout = raf.request(() => {\n      if (this.active) {\n        tickFn()\n      }\n    })\n  }\n\n  inertiaTick () {\n    const { interaction } = this\n    const options = getOptions(interaction)\n    const lambda = options.resistance\n    const t = (interaction._now() - this.t0) / 1000\n\n    if (t < this.te) {\n      const progress = 1 - (Math.exp(-lambda * t) - this.lambda_v0) / this.one_ve_v0\n      let newOffset: Point\n\n      if (this.isModified) {\n        newOffset = getQuadraticCurvePoint(\n          0,\n          0,\n          this.targetOffset.x,\n          this.targetOffset.y,\n          this.modifiedOffset.x,\n          this.modifiedOffset.y,\n          progress,\n        )\n      } else {\n        newOffset = {\n          x: this.targetOffset.x * progress,\n          y: this.targetOffset.y * progress,\n        }\n      }\n\n      const delta = { x: newOffset.x - this.currentOffset.x, y: newOffset.y - this.currentOffset.y }\n\n      this.currentOffset.x += delta.x\n      this.currentOffset.y += delta.y\n\n      interaction.offsetBy(delta)\n      interaction.move()\n\n      this.onNextFrame(() => this.inertiaTick())\n    } else {\n      interaction.offsetBy({\n        x: this.modifiedOffset.x - this.currentOffset.x,\n        y: this.modifiedOffset.y - this.currentOffset.y,\n      })\n\n      this.end()\n    }\n  }\n\n  smoothEndTick () {\n    const { interaction } = this\n    const t = interaction._now() - this.t0\n    const { smoothEndDuration: duration } = getOptions(interaction)\n\n    if (t < duration) {\n      const newOffset = {\n        x: easeOutQuad(t, 0, this.targetOffset.x, duration),\n        y: easeOutQuad(t, 0, this.targetOffset.y, duration),\n      }\n      const delta = {\n        x: newOffset.x - this.currentOffset.x,\n        y: newOffset.y - this.currentOffset.y,\n      }\n\n      this.currentOffset.x += delta.x\n      this.currentOffset.y += delta.y\n\n      interaction.offsetBy(delta)\n      interaction.move({ skipModifiers: this.modifierCount })\n\n      this.onNextFrame(() => this.smoothEndTick())\n    } else {\n      interaction.offsetBy({\n        x: this.targetOffset.x - this.currentOffset.x,\n        y: this.targetOffset.y - this.currentOffset.y,\n      })\n\n      this.end()\n    }\n  }\n\n  resume ({ pointer, event, eventTarget }: SignalArgs['interactions:down']) {\n    const { interaction } = this\n\n    // undo inertia changes to interaction coords\n    interaction.offsetBy({\n      x: -this.currentOffset.x,\n      y: -this.currentOffset.y,\n    })\n\n    // update pointer at pointer down position\n    interaction.updatePointer(pointer, event, eventTarget, true)\n\n    // fire resume signals and event\n    interaction._doPhase({\n      interaction,\n      event,\n      phase: 'resume',\n    })\n    copyCoords(interaction.coords.prev, interaction.coords.cur)\n\n    this.stop()\n  }\n\n  end () {\n    this.interaction.move()\n    this.interaction.end()\n    this.stop()\n  }\n\n  stop () {\n    this.active = this.smoothEnd = false\n    this.interaction.simulation = null\n    raf.cancel(this.timeout)\n  }\n}\n\nfunction start ({ interaction, event }: DoPhaseArg<ActionName, 'end'>) {\n  if (!interaction._interacting || interaction.simulation) {\n    return null\n  }\n\n  const started = interaction.inertia.start(event)\n\n  // prevent action end if inertia or smoothEnd\n  return started ? false : null\n}\n\n// Check if the down event hits the current inertia target\n// control should be return to the user\nfunction resume (arg: SignalArgs['interactions:down']) {\n  const { interaction, eventTarget } = arg\n  const state = interaction.inertia\n\n  if (!state.active) return\n\n  let element = eventTarget as Node\n\n  // climb up the DOM tree from the event target\n  while (is.element(element)) {\n    // if interaction element is the current inertia target element\n    if (element === interaction.element) {\n      state.resume(arg)\n      break\n    }\n\n    element = dom.parentNode(element)\n  }\n}\n\nfunction stop ({ interaction }: { interaction: Interaction }) {\n  const state = interaction.inertia\n\n  if (state.active) {\n    state.stop()\n  }\n}\n\nfunction getOptions ({ interactable, prepared }: Interaction) {\n  return interactable && interactable.options && prepared.name && interactable.options[prepared.name].inertia\n}\n\nconst inertia: Plugin = {\n  id: 'inertia',\n  before: ['modifiers', 'actions'],\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.inertia = new InertiaState(interaction)\n    },\n\n    'interactions:before-action-end': start,\n    'interactions:down': resume,\n    'interactions:stop': stop,\n\n    'interactions:before-action-resume': (arg) => {\n      const { modification } = arg.interaction\n\n      modification.stop(arg)\n      modification.start(arg, arg.interaction.coords.cur.page)\n      modification.applyToInteraction(arg)\n    },\n\n    'interactions:before-action-inertiastart': (arg) => arg.interaction.modification.setAndApply(arg),\n    'interactions:action-resume': modifiers.addEventModifiers,\n    'interactions:action-inertiastart': modifiers.addEventModifiers,\n    'interactions:after-action-inertiastart': (arg) =>\n      arg.interaction.modification.restoreInteractionCoords(arg),\n    'interactions:after-action-resume': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n  },\n}\n\n// http://stackoverflow.com/a/5634528/2280888\nfunction _getQBezierValue (t: number, p1: number, p2: number, p3: number) {\n  const iT = 1 - t\n  return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3\n}\n\nfunction getQuadraticCurvePoint (\n  startX: number,\n  startY: number,\n  cpX: number,\n  cpY: number,\n  endX: number,\n  endY: number,\n  position: number,\n) {\n  return {\n    x: _getQBezierValue(position, startX, cpX, endX),\n    y: _getQBezierValue(position, startY, cpY, endY),\n  }\n}\n\n// http://gizma.com/easing/\nfunction easeOutQuad (t: number, b: number, c: number, d: number) {\n  t /= d\n  return -c * t * (t - 2) + b\n}\n\nexport default inertia\n","import type { Listener, ListenersArg, Rect } from '@interactjs/types/index'\nimport * as arr from '@interactjs/utils/arr'\nimport extend from '@interactjs/utils/extend'\nimport type { NormalizedListeners } from '@interactjs/utils/normalizeListeners'\nimport normalize from '@interactjs/utils/normalizeListeners'\n\nfunction fireUntilImmediateStopped (event: any, listeners: Listener[]) {\n  for (const listener of listeners) {\n    if (event.immediatePropagationStopped) {\n      break\n    }\n\n    listener(event)\n  }\n}\n\nexport class Eventable {\n  options: any\n  types: NormalizedListeners = {}\n  propagationStopped = false\n  immediatePropagationStopped = false\n  global: any\n\n  constructor (options?: { [index: string]: any }) {\n    this.options = extend({}, options || {})\n  }\n\n  fire<T extends { type: string, propagationStopped?: boolean }> (event: T) {\n    let listeners: Listener[]\n    const global = this.global\n\n    // Interactable#on() listeners\n    // tslint:disable no-conditional-assignment\n    if ((listeners = this.types[event.type])) {\n      fireUntilImmediateStopped(event, listeners)\n    }\n\n    // interact.on() listeners\n    if (!event.propagationStopped && global && (listeners = global[event.type])) {\n      fireUntilImmediateStopped(event, listeners)\n    }\n  }\n\n  on (type: string, listener: ListenersArg) {\n    const listeners = normalize(type, listener)\n\n    for (type in listeners) {\n      this.types[type] = arr.merge(this.types[type] || [], listeners[type])\n    }\n  }\n\n  off (type: string, listener: ListenersArg) {\n    const listeners = normalize(type, listener)\n\n    for (type in listeners) {\n      const eventList = this.types[type]\n\n      if (!eventList || !eventList.length) {\n        continue\n      }\n\n      for (const subListener of listeners[type]) {\n        const index = eventList.indexOf(subListener)\n\n        if (index !== -1) {\n          eventList.splice(index, 1)\n        }\n      }\n    }\n  }\n\n  getRect (_element: Element): Rect {\n    return null\n  }\n}\n","import type { Actions } from '@interactjs/core/scope'\n\nexport default function isNonNativeEvent (type: string, actions: Actions) {\n  if (actions.phaselessTypes[type]) {\n    return true\n  }\n\n  for (const name in actions.map) {\n    if (type.indexOf(name) === 0 && type.substr(name.length) in actions.phases) {\n      return true\n    }\n  }\n\n  return false\n}\n","/** @module interact */\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Context, EventTypes, Listener, ListenersArg, Target, Element } from '@interactjs/types/index'\nimport browser from '@interactjs/utils/browser'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport { warnOnce } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport type { Interactable } from './Interactable'\nimport isNonNativeEvent from './isNonNativeEvent'\nimport type { Options } from './options'\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    (target: Target, options?: Options): Interactable\n    getPointerAverage: typeof pointerUtils.pointerAverage\n    getTouchBBox: typeof pointerUtils.touchBBox\n    getTouchDistance: typeof pointerUtils.touchDistance\n    getTouchAngle: typeof pointerUtils.touchAngle\n    getElementRect: typeof domUtils.getElementRect\n    getElementClientRect: typeof domUtils.getElementClientRect\n    matchesSelector: typeof domUtils.matchesSelector\n    closest: typeof domUtils.closest\n    /** @internal */ globalEvents: any\n    version: string\n    /** @internal */ scope: Scope\n    use(\n      plugin: Plugin,\n      options?: {\n        [key: string]: any\n      },\n    ): any\n    isSet(target: Element, options?: any): boolean\n    on(type: string | EventTypes, listener: ListenersArg, options?: object): any\n    off(type: EventTypes, listener: any, options?: object): any\n    debug(): any\n    supportsTouch(): boolean\n    supportsPointerEvent(): boolean\n    stop(): any\n    pointerMoveTolerance(newValue?: number): any\n    addDocument(doc: Document, options?: object): void\n    removeDocument(doc: Document): void\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\ntype _InteractStatic = import('@interactjs/core/InteractStatic').InteractStatic\n\nexport function createInteractStatic (scope: Scope): _InteractStatic {\n  /**\n   * ```js\n   * interact('#draggable').draggable(true)\n   *\n   * var rectables = interact('rect')\n   * rectables\n   *   .gesturable(true)\n   *   .on('gesturemove', function (event) {\n   *       // ...\n   *   })\n   * ```\n   *\n   * The methods of this variable can be used to set elements as interactables\n   * and also to change various default settings.\n   *\n   * Calling it as a function and passing an element or a valid CSS selector\n   * string returns an Interactable object which has various methods to configure\n   * it.\n   *\n   * @global\n   *\n   * @param {Element | string} target The HTML or SVG Element to interact with\n   * or CSS selector\n   * @return {Interactable}\n   */\n  const interact = ((target: Target, options: Options) => {\n    let interactable = scope.interactables.get(target, options)\n\n    if (!interactable) {\n      interactable = scope.interactables.new(target, options)\n      interactable.events.global = interact.globalEvents\n    }\n\n    return interactable\n  }) as _InteractStatic\n\n  // expose the functions used to calculate multi-touch properties\n  interact.getPointerAverage = pointerUtils.pointerAverage\n  interact.getTouchBBox = pointerUtils.touchBBox\n  interact.getTouchDistance = pointerUtils.touchDistance\n  interact.getTouchAngle = pointerUtils.touchAngle\n\n  interact.getElementRect = domUtils.getElementRect\n  interact.getElementClientRect = domUtils.getElementClientRect\n  interact.matchesSelector = domUtils.matchesSelector\n  interact.closest = domUtils.closest\n\n  interact.globalEvents = {} as any\n\n  // eslint-disable-next-line no-undef\n  interact.version = process.env.npm_package_version\n  interact.scope = scope\n  /**\n   * Use a plugin\n   *\n   * @alias module:interact.use\n   *\n   */\n  interact.use = function (plugin, options) {\n    this.scope.usePlugin(plugin, options)\n\n    return this\n  }\n\n  /**\n   * Check if an element or selector has been set with the {@link interact}\n   * function\n   *\n   * @alias module:interact.isSet\n   *\n   * @param {Target} target The Element or string being searched for\n   * @param {object} options\n   * @return {boolean} Indicates if the element or CSS selector was previously\n   * passed to interact\n   */\n  interact.isSet = function (target: Target, options?: { context?: Context }): boolean {\n    return !!this.scope.interactables.get(target, options && options.context)\n  }\n\n  /**\n   * @deprecated\n   * Add a global listener for an InteractEvent or adds a DOM event to `document`\n   *\n   * @alias module:interact.on\n   *\n   * @param {string | array | object} type The types of events to listen for\n   * @param {function} listener The function event (s)\n   * @param {object | boolean} [options] object or useCapture flag for\n   * addEventListener\n   * @return {object} interact\n   */\n  interact.on = warnOnce(function on (type: string | EventTypes, listener: ListenersArg, options?: object) {\n    if (is.string(type) && type.search(' ') !== -1) {\n      type = type.trim().split(/ +/)\n    }\n\n    if (is.array(type)) {\n      for (const eventType of type as any[]) {\n        this.on(eventType, listener, options)\n      }\n\n      return this\n    }\n\n    if (is.object(type)) {\n      for (const prop in type) {\n        this.on(prop, (type as any)[prop], listener)\n      }\n\n      return this\n    }\n\n    // if it is an InteractEvent type, add listener to globalEvents\n    if (isNonNativeEvent(type, this.scope.actions)) {\n      // if this type of event was never bound\n      if (!this.globalEvents[type]) {\n        this.globalEvents[type] = [listener]\n      } else {\n        this.globalEvents[type].push(listener)\n      }\n    }\n    // If non InteractEvent type, addEventListener to document\n    else {\n      this.scope.events.add(this.scope.document, type, listener as Listener, { options })\n    }\n\n    return this\n  }, 'The interact.on() method is being deprecated')\n\n  /**\n   * @deprecated\n   * Removes a global InteractEvent listener or DOM event from `document`\n   *\n   * @alias module:interact.off\n   *\n   * @param {string | array | object} type The types of events that were listened\n   * for\n   * @param {function} listener The listener function to be removed\n   * @param {object | boolean} options [options] object or useCapture flag for\n   * removeEventListener\n   * @return {object} interact\n   */\n  interact.off = warnOnce(function off (type: EventTypes, listener: any, options?: object) {\n    if (is.string(type) && type.search(' ') !== -1) {\n      type = type.trim().split(/ +/)\n    }\n\n    if (is.array(type)) {\n      for (const eventType of type) {\n        this.off(eventType, listener, options)\n      }\n\n      return this\n    }\n\n    if (is.object(type)) {\n      for (const prop in type) {\n        this.off(prop, type[prop], listener)\n      }\n\n      return this\n    }\n\n    if (isNonNativeEvent(type, this.scope.actions)) {\n      let index: number\n\n      if (type in this.globalEvents && (index = this.globalEvents[type].indexOf(listener)) !== -1) {\n        this.globalEvents[type].splice(index, 1)\n      }\n    } else {\n      this.scope.events.remove(this.scope.document, type, listener, options)\n    }\n\n    return this\n  }, 'The interact.off() method is being deprecated')\n\n  interact.debug = function () {\n    return this.scope\n  }\n\n  /**\n   * @alias module:interact.supportsTouch\n   *\n   * @return {boolean} Whether or not the browser supports touch input\n   */\n  interact.supportsTouch = function () {\n    return browser.supportsTouch\n  }\n\n  /**\n   * @alias module:interact.supportsPointerEvent\n   *\n   * @return {boolean} Whether or not the browser supports PointerEvents\n   */\n  interact.supportsPointerEvent = function () {\n    return browser.supportsPointerEvent\n  }\n\n  /**\n   * Cancels all interactions (end events are not fired)\n   *\n   * @alias module:interact.stop\n   *\n   * @return {object} interact\n   */\n  interact.stop = function () {\n    for (const interaction of this.scope.interactions.list) {\n      interaction.stop()\n    }\n\n    return this\n  }\n\n  /**\n   * Returns or sets the distance the pointer must be moved before an action\n   * sequence occurs. This also affects tolerance for tap events.\n   *\n   * @alias module:interact.pointerMoveTolerance\n   *\n   * @param {number} [newValue] The movement from the start position must be greater than this value\n   * @return {interact | number}\n   */\n  interact.pointerMoveTolerance = function (newValue?: number) {\n    if (is.number(newValue)) {\n      this.scope.interactions.pointerMoveTolerance = newValue\n\n      return this\n    }\n\n    return this.scope.interactions.pointerMoveTolerance\n  }\n\n  interact.addDocument = function (doc: Document, options?: object) {\n    this.scope.addDocument(doc, options)\n  }\n\n  interact.removeDocument = function (doc: Document) {\n    this.scope.removeDocument(doc)\n  }\n\n  return interact\n}\n","/* eslint-disable no-dupe-class-members */\nimport type { ActionMap, ActionName, Actions, Scope } from '@interactjs/core/scope'\nimport type {\n  Context,\n  Element,\n  Target,\n  Listeners,\n  OrBoolean,\n  EventTypes,\n  ListenersArg,\n  ActionMethod,\n} from '@interactjs/types/index'\nimport * as arr from '@interactjs/utils/arr'\nimport browser from '@interactjs/utils/browser'\nimport clone from '@interactjs/utils/clone'\nimport { getElementRect, matchesUpTo, nodeContains, trySelector } from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport normalizeListeners from '@interactjs/utils/normalizeListeners'\nimport { getWindow } from '@interactjs/utils/window'\n\nimport { Eventable } from './Eventable'\nimport isNonNativeEvent from './isNonNativeEvent'\nimport type { ActionDefaults, Defaults, OptionsArg, PerActionDefaults } from './options'\nimport { Options } from './options'\n\ntype IgnoreValue = string | Element | boolean\ntype DeltaSource = 'page' | 'client'\n\n/** */\nexport class Interactable implements Partial<Eventable> {\n  /** @internal */ get _defaults (): Defaults {\n    return {\n      base: {},\n      perAction: {},\n      actions: {} as ActionDefaults,\n    }\n  }\n\n  readonly options!: Required<Options>\n  readonly _actions: Actions\n  readonly target: Target\n  readonly events = new Eventable()\n  readonly _context: Context\n  readonly _win: Window\n  readonly _doc: Document\n  readonly _scopeEvents: Scope['events']\n\n  /** @internal */ _rectChecker?: typeof Interactable.prototype.getRect\n\n  /** */\n  constructor (\n    target: Target,\n    options: any,\n    defaultContext: Document | Element,\n    scopeEvents: Scope['events'],\n  ) {\n    this._actions = options.actions\n    this.target = target\n    this._context = options.context || defaultContext\n    this._win = getWindow(trySelector(target) ? this._context : target)\n    this._doc = this._win.document\n    this._scopeEvents = scopeEvents\n\n    this.set(options)\n  }\n\n  setOnEvents (actionName: ActionName, phases: NonNullable<any>) {\n    if (is.func(phases.onstart)) {\n      this.on(`${actionName}start`, phases.onstart)\n    }\n    if (is.func(phases.onmove)) {\n      this.on(`${actionName}move`, phases.onmove)\n    }\n    if (is.func(phases.onend)) {\n      this.on(`${actionName}end`, phases.onend)\n    }\n    if (is.func(phases.oninertiastart)) {\n      this.on(`${actionName}inertiastart`, phases.oninertiastart)\n    }\n\n    return this\n  }\n\n  updatePerActionListeners (actionName: ActionName, prev: Listeners, cur: Listeners) {\n    if (is.array(prev) || is.object(prev)) {\n      this.off(actionName, prev)\n    }\n\n    if (is.array(cur) || is.object(cur)) {\n      this.on(actionName, cur)\n    }\n  }\n\n  setPerAction (actionName: ActionName, options: OrBoolean<Options>) {\n    const defaults = this._defaults\n\n    // for all the default per-action options\n    for (const optionName_ in options) {\n      const optionName = optionName_ as keyof PerActionDefaults\n      const actionOptions = this.options[actionName]\n      const optionValue: any = options[optionName]\n\n      // remove old event listeners and add new ones\n      if (optionName === 'listeners') {\n        this.updatePerActionListeners(actionName, actionOptions.listeners, optionValue as Listeners)\n      }\n\n      // if the option value is an array\n      if (is.array(optionValue)) {\n        ;(actionOptions[optionName] as any) = arr.from(optionValue)\n      }\n      // if the option value is an object\n      else if (is.plainObject(optionValue)) {\n        // copy the object\n        ;(actionOptions[optionName] as any) = extend(\n          actionOptions[optionName] || ({} as any),\n          clone(optionValue),\n        )\n\n        // set anabled field to true if it exists in the defaults\n        if (\n          is.object(defaults.perAction[optionName]) &&\n          'enabled' in (defaults.perAction[optionName] as any)\n        ) {\n          ;(actionOptions[optionName] as any).enabled = optionValue.enabled !== false\n        }\n      }\n      // if the option value is a boolean and the default is an object\n      else if (is.bool(optionValue) && is.object(defaults.perAction[optionName])) {\n        ;(actionOptions[optionName] as any).enabled = optionValue\n      }\n      // if it's anything else, do a plain assignment\n      else {\n        ;(actionOptions[optionName] as any) = optionValue\n      }\n    }\n  }\n\n  /**\n   * The default function to get an Interactables bounding rect. Can be\n   * overridden using {@link Interactable.rectChecker}.\n   *\n   * @param {Element} [element] The element to measure.\n   * @return {Rect} The object's bounding rectangle.\n   */\n  getRect (element: Element) {\n    element = element || (is.element(this.target) ? this.target : null)\n\n    if (is.string(this.target)) {\n      element = element || this._context.querySelector(this.target)\n    }\n\n    return getElementRect(element)\n  }\n\n  /**\n   * Returns or sets the function used to calculate the interactable's\n   * element's rectangle\n   *\n   * @param {function} [checker] A function which returns this Interactable's\n   * bounding rectangle. See {@link Interactable.getRect}\n   * @return {function | object} The checker function or this Interactable\n   */\n  rectChecker(): (element: Element) => any | null\n  rectChecker(checker: (element: Element) => any): this\n  rectChecker (checker?: (element: Element) => any) {\n    if (is.func(checker)) {\n      this._rectChecker = checker\n\n      this.getRect = (element) => {\n        const rect = extend({}, this._rectChecker(element))\n\n        if (!(('width' in rect) as unknown)) {\n          rect.width = rect.right - rect.left\n          rect.height = rect.bottom - rect.top\n        }\n\n        return rect\n      }\n\n      return this\n    }\n\n    if (checker === null) {\n      delete this.getRect\n      delete this._rectChecker\n\n      return this\n    }\n\n    return this.getRect\n  }\n\n  _backCompatOption (optionName: keyof Options, newValue: any) {\n    if (trySelector(newValue) || is.object(newValue)) {\n      ;(this.options[optionName] as any) = newValue\n\n      for (const action in this._actions.map) {\n        ;(this.options[action as keyof ActionMap] as any)[optionName] = newValue\n      }\n\n      return this\n    }\n\n    return this.options[optionName]\n  }\n\n  /**\n   * Gets or sets the origin of the Interactable's element.  The x and y\n   * of the origin will be subtracted from action event coordinates.\n   *\n   * @param {Element | object | string} [origin] An HTML or SVG Element whose\n   * rect will be used, an object eg. { x: 0, y: 0 } or string 'parent', 'self'\n   * or any CSS selector\n   *\n   * @return {object} The current origin or this Interactable\n   */\n  origin (newValue: any) {\n    return this._backCompatOption('origin', newValue)\n  }\n\n  /**\n   * Returns or sets the mouse coordinate types used to calculate the\n   * movement of the pointer.\n   *\n   * @param {string} [newValue] Use 'client' if you will be scrolling while\n   * interacting; Use 'page' if you want autoScroll to work\n   * @return {string | object} The current deltaSource or this Interactable\n   */\n  deltaSource(): DeltaSource\n  deltaSource(newValue: DeltaSource): this\n  deltaSource (newValue?: DeltaSource) {\n    if (newValue === 'page' || newValue === 'client') {\n      this.options.deltaSource = newValue\n\n      return this\n    }\n\n    return this.options.deltaSource\n  }\n\n  /**\n   * Gets the selector context Node of the Interactable. The default is\n   * `window.document`.\n   *\n   * @return {Node} The context Node of this Interactable\n   */\n  context () {\n    return this._context\n  }\n\n  inContext (element: Document | Node) {\n    return this._context === element.ownerDocument || nodeContains(this._context, element)\n  }\n\n  testIgnoreAllow (\n    this: Interactable,\n    options: { ignoreFrom?: IgnoreValue, allowFrom?: IgnoreValue },\n    targetNode: Node,\n    eventTarget: Node,\n  ) {\n    return (\n      !this.testIgnore(options.ignoreFrom, targetNode, eventTarget) &&\n      this.testAllow(options.allowFrom, targetNode, eventTarget)\n    )\n  }\n\n  testAllow (this: Interactable, allowFrom: IgnoreValue, targetNode: Node, element: Node) {\n    if (!allowFrom) {\n      return true\n    }\n\n    if (!is.element(element)) {\n      return false\n    }\n\n    if (is.string(allowFrom)) {\n      return matchesUpTo(element, allowFrom, targetNode)\n    } else if (is.element(allowFrom)) {\n      return nodeContains(allowFrom, element)\n    }\n\n    return false\n  }\n\n  testIgnore (this: Interactable, ignoreFrom: IgnoreValue, targetNode: Node, element: Node) {\n    if (!ignoreFrom || !is.element(element)) {\n      return false\n    }\n\n    if (is.string(ignoreFrom)) {\n      return matchesUpTo(element, ignoreFrom, targetNode)\n    } else if (is.element(ignoreFrom)) {\n      return nodeContains(ignoreFrom, element)\n    }\n\n    return false\n  }\n\n  /**\n   * Calls listeners for the given InteractEvent type bound globally\n   * and directly to this Interactable\n   *\n   * @param {InteractEvent} iEvent The InteractEvent object to be fired on this\n   * Interactable\n   * @return {Interactable} this Interactable\n   */\n  fire<E extends { type: string }> (iEvent: E) {\n    this.events.fire(iEvent)\n\n    return this\n  }\n\n  _onOff (method: 'on' | 'off', typeArg: EventTypes, listenerArg?: ListenersArg | null, options?: any) {\n    if (is.object(typeArg) && !is.array(typeArg)) {\n      options = listenerArg\n      listenerArg = null\n    }\n\n    const addRemove = method === 'on' ? 'add' : 'remove'\n    const listeners = normalizeListeners(typeArg, listenerArg)\n\n    for (let type in listeners) {\n      if (type === 'wheel') {\n        type = browser.wheelEvent\n      }\n\n      for (const listener of listeners[type]) {\n        // if it is an action event type\n        if (isNonNativeEvent(type, this._actions)) {\n          this.events[method](type, listener)\n        }\n        // delegated event\n        else if (is.string(this.target)) {\n          this._scopeEvents[`${addRemove}Delegate` as 'addDelegate' | 'removeDelegate'](\n            this.target,\n            this._context,\n            type,\n            listener,\n            options,\n          )\n        }\n        // remove listener from this Interactable's element\n        else {\n          this._scopeEvents[addRemove](this.target, type, listener, options)\n        }\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Binds a listener for an InteractEvent, pointerEvent or DOM event.\n   *\n   * @param {string | array | object} types The types of events to listen\n   * for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * addEventListener\n   * @return {Interactable} This Interactable\n   */\n  on (types: EventTypes, listener?: ListenersArg, options?: any) {\n    return this._onOff('on', types, listener, options)\n  }\n\n  /**\n   * Removes an InteractEvent, pointerEvent or DOM event listener.\n   *\n   * @param {string | array | object} types The types of events that were\n   * listened for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * removeEventListener\n   * @return {Interactable} This Interactable\n   */\n  off (types: string | string[] | EventTypes, listener?: ListenersArg, options?: any) {\n    return this._onOff('off', types, listener, options)\n  }\n\n  /**\n   * Reset the options of this Interactable\n   *\n   * @param {object} options The new settings to apply\n   * @return {object} This Interactable\n   */\n  set (options: OptionsArg) {\n    const defaults = this._defaults\n\n    if (!is.object(options)) {\n      options = {}\n    }\n\n    ;(this.options as Required<Options>) = clone(defaults.base) as Required<Options>\n\n    for (const actionName_ in this._actions.methodDict) {\n      const actionName = actionName_ as ActionName\n      const methodName = this._actions.methodDict[actionName]\n\n      this.options[actionName] = {}\n      this.setPerAction(actionName, extend(extend({}, defaults.perAction), defaults.actions[actionName]))\n      ;(this[methodName] as ActionMethod<unknown>)(options[actionName])\n    }\n\n    for (const setting in options) {\n      if (is.func((this as any)[setting])) {\n        ;(this as any)[setting](options[setting as keyof typeof options])\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Remove this interactable from the list of interactables and remove it's\n   * action capabilities and event listeners\n   */\n  unset () {\n    if (is.string(this.target)) {\n      // remove delegated events\n      for (const type in this._scopeEvents.delegatedEvents) {\n        const delegated = this._scopeEvents.delegatedEvents[type]\n\n        for (let i = delegated.length - 1; i >= 0; i--) {\n          const { selector, context, listeners } = delegated[i]\n\n          if (selector === this.target && context === this._context) {\n            delegated.splice(i, 1)\n          }\n\n          for (let l = listeners.length - 1; l >= 0; l--) {\n            this._scopeEvents.removeDelegate(\n              this.target,\n              this._context,\n              type,\n              listeners[l][0],\n              listeners[l][1],\n            )\n          }\n        }\n      }\n    } else {\n      this._scopeEvents.remove(this.target as Node, 'all')\n    }\n  }\n}\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { OptionsArg, Options } from '@interactjs/core/options'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { Target, Context } from '@interactjs/types/index'\nimport * as arr from '@interactjs/utils/arr'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactable:new': {\n      interactable: Interactable\n      target: Target\n      options: OptionsArg\n      win: Window\n    }\n  }\n}\n\ninterface InteractableScopeProp {\n  context: Context\n  interactable: Interactable\n}\n\nexport class InteractableSet {\n  // all set interactables\n  list: Interactable[] = []\n\n  selectorMap: {\n    [selector: string]: InteractableScopeProp[]\n  } = {}\n\n  scope: Scope\n\n  constructor (scope: Scope) {\n    this.scope = scope\n    scope.addListeners({\n      'interactable:unset': ({ interactable }) => {\n        const { target, _context: context } = interactable\n        const targetMappings: InteractableScopeProp[] = is.string(target)\n          ? this.selectorMap[target]\n          : (target as any)[this.scope.id]\n\n        const targetIndex = arr.findIndex(targetMappings, (m) => m.context === context)\n        if (targetMappings[targetIndex]) {\n          // Destroying mappingInfo's context and interactable\n          targetMappings[targetIndex].context = null\n          targetMappings[targetIndex].interactable = null\n        }\n        targetMappings.splice(targetIndex, 1)\n      },\n    })\n  }\n\n  new (target: Target, options?: any): Interactable {\n    options = extend(options || {}, {\n      actions: this.scope.actions,\n    })\n    const interactable = new this.scope.Interactable(target, options, this.scope.document, this.scope.events)\n    const mappingInfo = { context: interactable._context, interactable }\n\n    this.scope.addDocument(interactable._doc)\n    this.list.push(interactable)\n\n    if (is.string(target)) {\n      if (!this.selectorMap[target]) {\n        this.selectorMap[target] = []\n      }\n      this.selectorMap[target].push(mappingInfo)\n    } else {\n      if (!(interactable.target as any)[this.scope.id]) {\n        Object.defineProperty(target, this.scope.id, {\n          value: [],\n          configurable: true,\n        })\n      }\n\n      ;(target as any)[this.scope.id].push(mappingInfo)\n    }\n\n    this.scope.fire('interactable:new', {\n      target,\n      options,\n      interactable,\n      win: this.scope._win,\n    })\n\n    return interactable\n  }\n\n  get (target: Target, options?: Options) {\n    const context = (options && options.context) || this.scope.document\n    const isSelector = is.string(target)\n    const targetMappings: InteractableScopeProp[] = isSelector\n      ? this.selectorMap[target as string]\n      : (target as any)[this.scope.id]\n\n    if (!targetMappings) {\n      return null\n    }\n\n    const found = arr.find(\n      targetMappings,\n      (m) => m.context === context && (isSelector || m.interactable.inContext(target as any)),\n    )\n\n    return found && found.interactable\n  }\n\n  forEachMatch<T> (node: Node, callback: (interactable: Interactable) => T) {\n    for (const interactable of this.list) {\n      let ret: void | T\n\n      if (\n        (is.string(interactable.target)\n          ? // target is a selector and the element matches\n          is.element(node) && domUtils.matchesSelector(node, interactable.target)\n          : // target is the element\n          node === interactable.target) &&\n        // the element is in context\n        interactable.inContext(node)\n      ) {\n        ret = callback(interactable)\n      }\n\n      if (ret !== undefined) {\n        return ret\n      }\n    }\n  }\n}\n","import type { Scope } from '@interactjs/core/scope'\nimport type { Element } from '@interactjs/types/index'\nimport * as arr from '@interactjs/utils/arr'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport pExtend from '@interactjs/utils/pointerExtend'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    events: ReturnType<typeof install>\n  }\n}\n\ntype Listener = (event: Event | FakeEvent) => any\n\nfunction install (scope: Scope) {\n  const targets: Array<{\n    eventTarget: EventTarget\n    events: { [type: string]: Listener[] }\n  }> = []\n\n  const delegatedEvents: {\n    [type: string]: Array<{\n      selector: string\n      context: Node\n      listeners: Array<[Listener, { capture: boolean, passive: boolean }]>\n    }>\n  } = {}\n  const documents: Document[] = []\n\n  const eventsMethods = {\n    add,\n    remove,\n\n    addDelegate,\n    removeDelegate,\n\n    delegateListener,\n    delegateUseCapture,\n    delegatedEvents,\n    documents,\n\n    targets,\n\n    supportsOptions: false,\n    supportsPassive: false,\n  }\n\n  // check if browser supports passive events and options arg\n  scope.document?.createElement('div').addEventListener('test', null, {\n    get capture () {\n      return (eventsMethods.supportsOptions = true)\n    },\n    get passive () {\n      return (eventsMethods.supportsPassive = true)\n    },\n  })\n\n  scope.events = eventsMethods\n\n  function add (eventTarget: EventTarget, type: string, listener: Listener, optionalArg?: boolean | any) {\n    const options = getOptions(optionalArg)\n    let target = arr.find(targets, (t) => t.eventTarget === eventTarget)\n\n    if (!target) {\n      target = {\n        eventTarget,\n        events: {},\n      }\n\n      targets.push(target)\n    }\n\n    if (!target.events[type]) {\n      target.events[type] = []\n    }\n\n    if (eventTarget.addEventListener && !arr.contains(target.events[type], listener)) {\n      eventTarget.addEventListener(\n        type,\n        listener as any,\n        eventsMethods.supportsOptions ? options : options.capture,\n      )\n      target.events[type].push(listener)\n    }\n  }\n\n  function remove (\n    eventTarget: EventTarget,\n    type: string,\n    listener?: 'all' | Listener,\n    optionalArg?: boolean | any,\n  ) {\n    const options = getOptions(optionalArg)\n    const targetIndex = arr.findIndex(targets, (t) => t.eventTarget === eventTarget)\n    const target = targets[targetIndex]\n\n    if (!target || !target.events) {\n      return\n    }\n\n    if (type === 'all') {\n      for (type in target.events) {\n        if (target.events.hasOwnProperty(type)) {\n          remove(eventTarget, type, 'all')\n        }\n      }\n      return\n    }\n\n    let typeIsEmpty = false\n    const typeListeners = target.events[type]\n\n    if (typeListeners) {\n      if (listener === 'all') {\n        for (let i = typeListeners.length - 1; i >= 0; i--) {\n          remove(eventTarget, type, typeListeners[i], options)\n        }\n        return\n      } else {\n        for (let i = 0; i < typeListeners.length; i++) {\n          if (typeListeners[i] === listener) {\n            eventTarget.removeEventListener(\n              type,\n              listener as any,\n              eventsMethods.supportsOptions ? options : options.capture,\n            )\n            typeListeners.splice(i, 1)\n\n            if (typeListeners.length === 0) {\n              delete target.events[type]\n              typeIsEmpty = true\n            }\n\n            break\n          }\n        }\n      }\n    }\n\n    if (typeIsEmpty && !Object.keys(target.events).length) {\n      targets.splice(targetIndex, 1)\n    }\n  }\n\n  function addDelegate (selector: string, context: Node, type: string, listener: Listener, optionalArg?: any) {\n    const options = getOptions(optionalArg)\n    if (!delegatedEvents[type]) {\n      delegatedEvents[type] = []\n\n      // add delegate listener functions\n      for (const doc of documents) {\n        add(doc, type, delegateListener)\n        add(doc, type, delegateUseCapture, true)\n      }\n    }\n\n    const delegates = delegatedEvents[type]\n    let delegate = arr.find(delegates, (d) => d.selector === selector && d.context === context)\n\n    if (!delegate) {\n      delegate = { selector, context, listeners: [] }\n      delegates.push(delegate)\n    }\n\n    delegate.listeners.push([listener, options])\n  }\n\n  function removeDelegate (\n    selector: string,\n    context: Document | Element,\n    type: string,\n    listener?: Listener,\n    optionalArg?: any,\n  ) {\n    const options = getOptions(optionalArg)\n    const delegates = delegatedEvents[type]\n    let matchFound = false\n    let index: number\n\n    if (!delegates) return\n\n    // count from last index of delegated to 0\n    for (index = delegates.length - 1; index >= 0; index--) {\n      const cur = delegates[index]\n      // look for matching selector and context Node\n      if (cur.selector === selector && cur.context === context) {\n        const { listeners } = cur\n\n        // each item of the listeners array is an array: [function, capture, passive]\n        for (let i = listeners.length - 1; i >= 0; i--) {\n          const [fn, { capture, passive }] = listeners[i]\n\n          // check if the listener functions and capture and passive flags match\n          if (fn === listener && capture === options.capture && passive === options.passive) {\n            // remove the listener from the array of listeners\n            listeners.splice(i, 1)\n\n            // if all listeners for this target have been removed\n            // remove the target from the delegates array\n            if (!listeners.length) {\n              delegates.splice(index, 1)\n\n              // remove delegate function from context\n              remove(context, type, delegateListener)\n              remove(context, type, delegateUseCapture, true)\n            }\n\n            // only remove one listener\n            matchFound = true\n            break\n          }\n        }\n\n        if (matchFound) {\n          break\n        }\n      }\n    }\n  }\n\n  // bound to the interactable context when a DOM event\n  // listener is added to a selector interactable\n  function delegateListener (event: Event | FakeEvent, optionalArg?: any) {\n    const options = getOptions(optionalArg)\n    const fakeEvent = new FakeEvent(event as Event)\n    const delegates = delegatedEvents[event.type]\n    const [eventTarget] = pointerUtils.getEventTargets(event as Event)\n    let element: Node = eventTarget\n\n    // climb up document tree looking for selector matches\n    while (is.element(element)) {\n      for (let i = 0; i < delegates.length; i++) {\n        const cur = delegates[i]\n        const { selector, context } = cur\n\n        if (\n          domUtils.matchesSelector(element, selector) &&\n          domUtils.nodeContains(context, eventTarget) &&\n          domUtils.nodeContains(context, element)\n        ) {\n          const { listeners } = cur\n\n          fakeEvent.currentTarget = element\n\n          for (const [fn, { capture, passive }] of listeners) {\n            if (capture === options.capture && passive === options.passive) {\n              fn(fakeEvent)\n            }\n          }\n        }\n      }\n\n      element = domUtils.parentNode(element)\n    }\n  }\n\n  function delegateUseCapture (this: Element, event: Event | FakeEvent) {\n    return delegateListener.call(this, event, true)\n  }\n\n  // for type inferrence\n  return eventsMethods\n}\n\nclass FakeEvent implements Partial<Event> {\n  currentTarget: Node\n  originalEvent: Event\n  type: string\n\n  constructor (originalEvent: Event) {\n    this.originalEvent = originalEvent\n    // duplicate the event so that currentTarget can be changed\n    pExtend(this, originalEvent)\n  }\n\n  preventOriginalDefault () {\n    this.originalEvent.preventDefault()\n  }\n\n  stopPropagation () {\n    this.originalEvent.stopPropagation()\n  }\n\n  stopImmediatePropagation () {\n    this.originalEvent.stopImmediatePropagation()\n  }\n}\n\nfunction getOptions (param: { [index: string]: any } | boolean): { capture: boolean, passive: boolean } {\n  if (!is.object(param)) {\n    return { capture: !!param, passive: false }\n  }\n\n  const options = extend({}, param) as any\n\n  options.capture = !!param.capture\n  options.passive = !!param.passive\n\n  return options\n}\n\nexport default {\n  id: 'events',\n  install,\n}\n","import type Interaction from '@interactjs/core/Interaction'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { PointerType } from '@interactjs/types/index'\nimport * as dom from '@interactjs/utils/domUtils'\n\nexport interface SearchDetails {\n  pointer: PointerType\n  pointerId: number\n  pointerType: string\n  eventType: string\n  eventTarget: EventTarget\n  curEventTarget: EventTarget\n  scope: Scope\n}\n\nconst finder = {\n  methodOrder: ['simulationResume', 'mouseOrPen', 'hasPointer', 'idle'] as const,\n\n  search (details: SearchDetails) {\n    for (const method of finder.methodOrder) {\n      const interaction = finder[method](details)\n\n      if (interaction) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // try to resume simulation with a new pointer\n  simulationResume ({ pointerType, eventType, eventTarget, scope }: SearchDetails) {\n    if (!/down|start/i.test(eventType)) {\n      return null\n    }\n\n    for (const interaction of scope.interactions.list) {\n      let element = eventTarget as Node\n\n      if (\n        interaction.simulation &&\n        interaction.simulation.allowResume &&\n        interaction.pointerType === pointerType\n      ) {\n        while (element) {\n          // if the element is the interaction element\n          if (element === interaction.element) {\n            return interaction\n          }\n          element = dom.parentNode(element)\n        }\n      }\n    }\n\n    return null\n  },\n\n  // if it's a mouse or pen interaction\n  mouseOrPen ({ pointerId, pointerType, eventType, scope }: SearchDetails) {\n    if (pointerType !== 'mouse' && pointerType !== 'pen') {\n      return null\n    }\n\n    let firstNonActive\n\n    for (const interaction of scope.interactions.list) {\n      if (interaction.pointerType === pointerType) {\n        // if it's a down event, skip interactions with running simulations\n        if (interaction.simulation && !hasPointerId(interaction, pointerId)) {\n          continue\n        }\n\n        // if the interaction is active, return it immediately\n        if (interaction.interacting()) {\n          return interaction\n        }\n        // otherwise save it and look for another active interaction\n        else if (!firstNonActive) {\n          firstNonActive = interaction\n        }\n      }\n    }\n\n    // if no active mouse interaction was found use the first inactive mouse\n    // interaction\n    if (firstNonActive) {\n      return firstNonActive\n    }\n\n    // find any mouse or pen interaction.\n    // ignore the interaction if the eventType is a *down, and a simulation\n    // is active\n    for (const interaction of scope.interactions.list) {\n      if (interaction.pointerType === pointerType && !(/down/i.test(eventType) && interaction.simulation)) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // get interaction that has this pointer\n  hasPointer ({ pointerId, scope }: SearchDetails) {\n    for (const interaction of scope.interactions.list) {\n      if (hasPointerId(interaction, pointerId)) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // get first idle interaction with a matching pointerType\n  idle ({ pointerType, scope }: SearchDetails) {\n    for (const interaction of scope.interactions.list) {\n      // if there's already a pointer held down\n      if (interaction.pointers.length === 1) {\n        const target = interaction.interactable\n        // don't add this pointer if there is a target interactable and it\n        // isn't gesturable\n        if (target && !(target.options.gesture && target.options.gesture.enabled)) {\n          continue\n        }\n      }\n      // maximum of 2 pointers per interaction\n      else if (interaction.pointers.length >= 2) {\n        continue\n      }\n\n      if (!interaction.interacting() && pointerType === interaction.pointerType) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n}\n\nfunction hasPointerId (interaction: Interaction, pointerId: number) {\n  return interaction.pointers.some(({ id }) => id === pointerId)\n}\n\nexport default finder\n","import type { Scope, ActionName, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type { Listener } from '@interactjs/types/index'\nimport browser from '@interactjs/utils/browser'\nimport domObjects from '@interactjs/utils/domObjects'\nimport { nodeContains } from '@interactjs/utils/domUtils'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport InteractionBase from './Interaction'\nimport interactablePreventDefault from './interactablePreventDefault'\nimport type { SearchDetails } from './interactionFinder'\nimport finder from './interactionFinder'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    Interaction: typeof InteractionBase\n    interactions: {\n      new: <T extends ActionName>(options: any) => InteractionBase<T>\n      list: Array<InteractionBase<ActionName>>\n      listeners: { [type: string]: Listener }\n      docEvents: Array<{ type: string, listener: Listener }>\n      pointerMoveTolerance: number\n    }\n    prevTouchTime: number\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:find': {\n      interaction: InteractionBase\n      searchDetails: SearchDetails\n    }\n  }\n}\n\nconst methodNames = [\n  'pointerDown',\n  'pointerMove',\n  'pointerUp',\n  'updatePointer',\n  'removePointer',\n  'windowBlur',\n]\n\nfunction install (scope: Scope) {\n  const listeners = {} as any\n\n  for (const method of methodNames) {\n    listeners[method] = doOnInteractions(method, scope)\n  }\n\n  const pEventTypes = browser.pEventTypes\n  let docEvents: typeof scope.interactions.docEvents\n\n  if (domObjects.PointerEvent) {\n    docEvents = [\n      { type: pEventTypes.down, listener: releasePointersOnRemovedEls },\n      { type: pEventTypes.down, listener: listeners.pointerDown },\n      { type: pEventTypes.move, listener: listeners.pointerMove },\n      { type: pEventTypes.up, listener: listeners.pointerUp },\n      { type: pEventTypes.cancel, listener: listeners.pointerUp },\n    ]\n  } else {\n    docEvents = [\n      { type: 'mousedown', listener: listeners.pointerDown },\n      { type: 'mousemove', listener: listeners.pointerMove },\n      { type: 'mouseup', listener: listeners.pointerUp },\n\n      { type: 'touchstart', listener: releasePointersOnRemovedEls },\n      { type: 'touchstart', listener: listeners.pointerDown },\n      { type: 'touchmove', listener: listeners.pointerMove },\n      { type: 'touchend', listener: listeners.pointerUp },\n      { type: 'touchcancel', listener: listeners.pointerUp },\n    ]\n  }\n\n  docEvents.push({\n    type: 'blur',\n    listener (event) {\n      for (const interaction of scope.interactions.list) {\n        interaction.documentBlur(event)\n      }\n    },\n  })\n\n  // for ignoring browser's simulated mouse events\n  scope.prevTouchTime = 0\n\n  scope.Interaction = class <T extends ActionName> extends InteractionBase<T> {\n    get pointerMoveTolerance () {\n      return scope.interactions.pointerMoveTolerance\n    }\n\n    set pointerMoveTolerance (value) {\n      scope.interactions.pointerMoveTolerance = value\n    }\n\n    _now () {\n      return scope.now()\n    }\n  }\n\n  scope.interactions = {\n    // all active and idle interactions\n    list: [],\n    new<T extends ActionName> (options: { pointerType?: string, scopeFire?: Scope['fire'] }) {\n      options.scopeFire = (name, arg) => scope.fire(name, arg)\n\n      const interaction = new scope.Interaction<T>(options as Required<typeof options>)\n\n      scope.interactions.list.push(interaction)\n      return interaction\n    },\n    listeners,\n    docEvents,\n    pointerMoveTolerance: 1,\n  }\n\n  function releasePointersOnRemovedEls () {\n    // for all inactive touch interactions with pointers down\n    for (const interaction of scope.interactions.list) {\n      if (!interaction.pointerIsDown || interaction.pointerType !== 'touch' || interaction._interacting) {\n        continue\n      }\n\n      // if a pointer is down on an element that is no longer in the DOM tree\n      for (const pointer of interaction.pointers) {\n        if (!scope.documents.some(({ doc }) => nodeContains(doc, pointer.downTarget))) {\n          // remove the pointer from the interaction\n          interaction.removePointer(pointer.pointer, pointer.event)\n        }\n      }\n    }\n  }\n\n  scope.usePlugin(interactablePreventDefault)\n}\n\nfunction doOnInteractions (method: string, scope: Scope) {\n  return function (event: Event) {\n    const interactions = scope.interactions.list\n\n    const pointerType = pointerUtils.getPointerType(event)\n    const [eventTarget, curEventTarget] = pointerUtils.getEventTargets(event)\n    const matches: any[] = [] // [ [pointer, interaction], ...]\n\n    if (/^touch/.test(event.type)) {\n      scope.prevTouchTime = scope.now()\n\n      // @ts-expect-error\n      for (const changedTouch of event.changedTouches) {\n        const pointer = changedTouch\n        const pointerId = pointerUtils.getPointerId(pointer)\n        const searchDetails: SearchDetails = {\n          pointer,\n          pointerId,\n          pointerType,\n          eventType: event.type,\n          eventTarget,\n          curEventTarget,\n          scope,\n        }\n        const interaction = getInteraction(searchDetails)\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ])\n      }\n    } else {\n      let invalidPointer = false\n\n      if (!browser.supportsPointerEvent && /mouse/.test(event.type)) {\n        // ignore mouse events while touch interactions are active\n        for (let i = 0; i < interactions.length && !invalidPointer; i++) {\n          invalidPointer = interactions[i].pointerType !== 'mouse' && interactions[i].pointerIsDown\n        }\n\n        // try to ignore mouse events that are simulated by the browser\n        // after a touch event\n        invalidPointer =\n          invalidPointer ||\n          scope.now() - scope.prevTouchTime < 500 ||\n          // on iOS and Firefox Mobile, MouseEvent.timeStamp is zero if simulated\n          event.timeStamp === 0\n      }\n\n      if (!invalidPointer) {\n        const searchDetails = {\n          pointer: event as PointerEvent,\n          pointerId: pointerUtils.getPointerId(event as PointerEvent),\n          pointerType,\n          eventType: event.type,\n          curEventTarget,\n          eventTarget,\n          scope,\n        }\n\n        const interaction = getInteraction(searchDetails)\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ])\n      }\n    }\n\n    // eslint-disable-next-line no-shadow\n    for (const [pointer, eventTarget, curEventTarget, interaction] of matches) {\n      interaction[method](pointer, event, eventTarget, curEventTarget)\n    }\n  }\n}\n\nfunction getInteraction (searchDetails: SearchDetails) {\n  const { pointerType, scope } = searchDetails\n\n  const foundInteraction = finder.search(searchDetails)\n  const signalArg = { interaction: foundInteraction, searchDetails }\n\n  scope.fire('interactions:find', signalArg)\n\n  return signalArg.interaction || scope.interactions.new({ pointerType })\n}\n\nfunction onDocSignal<T extends 'scope:add-document' | 'scope:remove-document'> (\n  { doc, scope, options }: SignalArgs[T],\n  eventMethodName: 'add' | 'remove',\n) {\n  const {\n    interactions: { docEvents },\n    events,\n  } = scope\n  const eventMethod = events[eventMethodName]\n\n  if (scope.browser.isIOS && !options.events) {\n    options.events = { passive: false }\n  }\n\n  // delegate event listener\n  for (const eventType in events.delegatedEvents) {\n    eventMethod(doc, eventType, events.delegateListener)\n    eventMethod(doc, eventType, events.delegateUseCapture, true)\n  }\n\n  const eventOptions = options && options.events\n\n  for (const { type, listener } of docEvents) {\n    eventMethod(doc, type, listener, eventOptions)\n  }\n}\n\nconst interactions: Plugin = {\n  id: 'core/interactions',\n  install,\n  listeners: {\n    'scope:add-document': (arg) => onDocSignal(arg, 'add'),\n    'scope:remove-document': (arg) => onDocSignal(arg, 'remove'),\n    'interactable:unset': ({ interactable }, scope) => {\n      // Stop and destroy related interactions when an Interactable is unset\n      for (let i = scope.interactions.list.length - 1; i >= 0; i--) {\n        const interaction = scope.interactions.list[i]\n\n        if (interaction.interactable !== interactable) {\n          continue\n        }\n\n        interaction.stop()\n        scope.fire('interactions:destroy', { interaction })\n        interaction.destroy()\n\n        if (scope.interactions.list.length > 2) {\n          scope.interactions.list.splice(i, 1)\n        }\n      }\n    },\n  },\n  onDocSignal,\n  doOnInteractions,\n  methodNames,\n}\n\nexport default interactions\n","import type Interaction from '@interactjs/core/Interaction'\nimport browser from '@interactjs/utils/browser'\nimport clone from '@interactjs/utils/clone'\nimport domObjects from '@interactjs/utils/domObjects'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport raf from '@interactjs/utils/raf'\nimport * as win from '@interactjs/utils/window'\n\nimport { Eventable } from './Eventable'\nimport type { PhaseMap } from './InteractEvent'\nimport { InteractEvent } from './InteractEvent'\nimport { createInteractStatic } from './InteractStatic'\nimport type { Interactable } from './Interactable'\nimport { Interactable as InteractableBase } from './Interactable'\nimport { InteractableSet } from './InteractableSet'\nimport events from './events'\nimport interactions from './interactions'\nimport type { OptionsArg } from './options'\nimport { defaults } from './options'\n\nexport interface SignalArgs {\n  'scope:add-document': DocSignalArg\n  'scope:remove-document': DocSignalArg\n  'interactable:unset': { interactable: InteractableBase }\n  'interactable:set': { interactable: InteractableBase, options: OptionsArg }\n  'interactions:destroy': { interaction: Interaction }\n}\n\nexport type ListenerName = keyof SignalArgs\n\nexport type ListenerMap = {\n  [P in ListenerName]?: (arg: SignalArgs[P], scope: Scope, signalName: P) => void | boolean\n}\n\ninterface DocSignalArg {\n  doc: Document\n  window: Window\n  scope: Scope\n  options: Record<string, any>\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface ActionMap {}\nexport type ActionName = keyof ActionMap\n\nexport interface Actions {\n  map: ActionMap\n  phases: PhaseMap\n  methodDict: { [P in ActionName]?: keyof Interactable }\n  phaselessTypes: { [type: string]: true }\n}\n\nexport interface Plugin {\n  [key: string]: any\n  id?: string\n  listeners?: ListenerMap\n  before?: string[]\n  install?(scope: Scope, options?: any): void\n}\n\nexport class Scope {\n  id = `__interact_scope_${Math.floor(Math.random() * 100)}`\n  isInitialized = false\n  listenerMaps: Array<{\n    map: ListenerMap\n    id: string\n  }> = []\n\n  browser = browser\n  defaults = clone(defaults) as typeof defaults\n  Eventable = Eventable\n  actions: Actions = {\n    map: {},\n    phases: {\n      start: true,\n      move: true,\n      end: true,\n    },\n    methodDict: {},\n    phaselessTypes: {},\n  }\n\n  interactStatic = createInteractStatic(this)\n  InteractEvent = InteractEvent\n  Interactable: typeof InteractableBase\n  interactables = new InteractableSet(this)\n\n  // main window\n  _win!: Window\n\n  // main document\n  document!: Document\n\n  // main window\n  window!: Window\n\n  // all documents being listened to\n  documents: Array<{ doc: Document, options: any }> = []\n\n  _plugins: {\n    list: Plugin[]\n    map: { [id: string]: Plugin }\n  } = {\n    list: [],\n    map: {},\n  }\n\n  constructor () {\n    const scope = this\n\n    this.Interactable = class extends InteractableBase {\n      get _defaults () {\n        return scope.defaults\n      }\n\n      set<T extends InteractableBase> (this: T, options: OptionsArg) {\n        super.set(options)\n\n        scope.fire('interactable:set', {\n          options,\n          interactable: this,\n        })\n\n        return this\n      }\n\n      unset (this: InteractableBase) {\n        super.unset()\n        scope.interactables.list.splice(scope.interactables.list.indexOf(this), 1)\n\n        scope.fire('interactable:unset', { interactable: this })\n      }\n    }\n  }\n\n  addListeners (map: ListenerMap, id?: string) {\n    this.listenerMaps.push({ id, map })\n  }\n\n  fire<T extends ListenerName> (name: T, arg: SignalArgs[T]): void | false {\n    for (const {\n      map: { [name]: listener },\n    } of this.listenerMaps) {\n      if (!!listener && listener(arg as any, this, name as never) === false) {\n        return false\n      }\n    }\n  }\n\n  onWindowUnload = (event: BeforeUnloadEvent) => this.removeDocument(event.target as Document)\n\n  init (window: Window | typeof globalThis) {\n    return this.isInitialized ? this : initScope(this, window)\n  }\n\n  pluginIsInstalled (plugin: Plugin) {\n    return this._plugins.map[plugin.id] || this._plugins.list.indexOf(plugin) !== -1\n  }\n\n  usePlugin (plugin: Plugin, options?: { [key: string]: any }) {\n    if (!this.isInitialized) {\n      return this\n    }\n\n    if (this.pluginIsInstalled(plugin)) {\n      return this\n    }\n\n    if (plugin.id) {\n      this._plugins.map[plugin.id] = plugin\n    }\n    this._plugins.list.push(plugin)\n\n    if (plugin.install) {\n      plugin.install(this, options)\n    }\n\n    if (plugin.listeners && plugin.before) {\n      let index = 0\n      const len = this.listenerMaps.length\n      const before = plugin.before.reduce((acc, id) => {\n        acc[id] = true\n        acc[pluginIdRoot(id)] = true\n        return acc\n      }, {})\n\n      for (; index < len; index++) {\n        const otherId = this.listenerMaps[index].id\n\n        if (before[otherId] || before[pluginIdRoot(otherId)]) {\n          break\n        }\n      }\n\n      this.listenerMaps.splice(index, 0, { id: plugin.id, map: plugin.listeners })\n    } else if (plugin.listeners) {\n      this.listenerMaps.push({ id: plugin.id, map: plugin.listeners })\n    }\n\n    return this\n  }\n\n  addDocument (doc: Document, options?: any): void | false {\n    // do nothing if document is already known\n    if (this.getDocIndex(doc) !== -1) {\n      return false\n    }\n\n    const window = win.getWindow(doc)\n\n    options = options ? extend({}, options) : {}\n\n    this.documents.push({ doc, options })\n    this.events.documents.push(doc)\n\n    // don't add an unload event for the main document\n    // so that the page may be cached in browser history\n    if (doc !== this.document) {\n      this.events.add(window, 'unload', this.onWindowUnload)\n    }\n\n    this.fire('scope:add-document', { doc, window, scope: this, options })\n  }\n\n  removeDocument (doc: Document) {\n    const index = this.getDocIndex(doc)\n\n    const window = win.getWindow(doc)\n    const options = this.documents[index].options\n\n    this.events.remove(window, 'unload', this.onWindowUnload)\n\n    this.documents.splice(index, 1)\n    this.events.documents.splice(index, 1)\n\n    this.fire('scope:remove-document', { doc, window, scope: this, options })\n  }\n\n  getDocIndex (doc: Document) {\n    for (let i = 0; i < this.documents.length; i++) {\n      if (this.documents[i].doc === doc) {\n        return i\n      }\n    }\n\n    return -1\n  }\n\n  getDocOptions (doc: Document) {\n    const docIndex = this.getDocIndex(doc)\n\n    return docIndex === -1 ? null : this.documents[docIndex].options\n  }\n\n  now () {\n    return (((this.window as any).Date as typeof Date) || Date).now()\n  }\n}\n\nexport function initScope (scope: Scope, window: Window | typeof globalThis) {\n  scope.isInitialized = true\n\n  if (is.window(window)) {\n    win.init(window)\n  }\n\n  domObjects.init(window)\n  browser.init(window)\n  raf.init(window)\n\n  // @ts-expect-error\n  scope.window = window\n  scope.document = window.document\n\n  scope.usePlugin(interactions)\n  scope.usePlugin(events)\n\n  return scope\n}\n\nfunction pluginIdRoot (id: string) {\n  return id && id.replace(/\\/.*$/, '')\n}\n","import { Scope } from '@interactjs/core/scope'\n\nconst scope = new Scope()\n\nconst interact = scope.interactStatic\n\nexport default interact\n\nconst _global = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : this\nscope.init(_global)\n","export default () => {}\n","export default () => {}\n","import type { SnapFunction, SnapTarget } from '@interactjs/modifiers/snap/pointer'\nimport type { Rect, Point } from '@interactjs/types/index'\n\nexport type GridOptions = (Partial<Rect> | Point) & {\n  range?: number\n  limits?: Rect\n  offset?: Point\n}\n\nexport default (grid: GridOptions) => {\n  const coordFields = ([\n    ['x', 'y'],\n    ['left', 'top'],\n    ['right', 'bottom'],\n    ['width', 'height'],\n  ] as const).filter(([xField, yField]) => xField in grid || yField in grid)\n\n  const gridFunc: SnapFunction & {\n    grid: typeof grid\n    coordFields: typeof coordFields\n  } = (x, y) => {\n    const {\n      range,\n      limits = {\n        left: -Infinity,\n        right: Infinity,\n        top: -Infinity,\n        bottom: Infinity,\n      },\n      offset = { x: 0, y: 0 },\n    } = grid\n\n    const result: SnapTarget & {\n      grid: typeof grid\n    } = { range, grid, x: null as number, y: null as number }\n\n    for (const [xField, yField] of coordFields) {\n      const gridx = Math.round((x - offset.x) / (grid as any)[xField])\n      const gridy = Math.round((y - offset.y) / (grid as any)[yField])\n\n      result[xField] = Math.max(limits.left, Math.min(limits.right, gridx * (grid as any)[xField] + offset.x))\n      result[yField] = Math.max(limits.top, Math.min(limits.bottom, gridy * (grid as any)[yField] + offset.y))\n    }\n\n    return result\n  }\n\n  gridFunc.grid = grid\n  gridFunc.coordFields = coordFields\n\n  return gridFunc\n}\n","import type { Plugin } from '@interactjs/core/scope'\nimport extend from '@interactjs/utils/extend'\n\nimport * as allSnappers from './all'\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    snappers: typeof allSnappers\n    createSnapGrid: typeof allSnappers.grid\n  }\n}\n\nconst snappersPlugin: Plugin = {\n  id: 'snappers',\n  install (scope) {\n    const { interactStatic: interact } = scope\n\n    interact.snappers = extend(interact.snappers || {}, allSnappers)\n    interact.createSnapGrid = interact.snappers.grid\n  },\n}\n\nexport default snappersPlugin\n","/**\n * @module modifiers/aspectRatio\n *\n * @description\n * This module forces elements to be resized with a specified dx/dy ratio.\n *\n * ```js\n * interact(target).resizable({\n *   modifiers: [\n *     interact.modifiers.snapSize({\n *       targets: [ interact.snappers.grid({ x: 20, y: 20 }) ],\n *     }),\n *     interact.aspectRatio({ ratio: 'preserve' }),\n *   ],\n * });\n * ```\n */\n\nimport type { Point, Rect, EdgeOptions } from '@interactjs/types/index'\nimport extend from '@interactjs/utils/extend'\nimport { addEdges } from '@interactjs/utils/rect'\n\nimport Modification from './Modification'\nimport type { Modifier, ModifierModule, ModifierState } from './base'\nimport { makeModifier } from './base'\n\nexport interface AspectRatioOptions {\n  ratio?: number | 'preserve'\n  equalDelta?: boolean\n  modifiers?: Modifier[]\n  enabled?: boolean\n}\n\nexport type AspectRatioState = ModifierState<\nAspectRatioOptions,\n{\n  startCoords: Point\n  startRect: Rect\n  linkedEdges: EdgeOptions\n  ratio: number\n  equalDelta: boolean\n  xIsPrimaryAxis: boolean\n  edgeSign: 1 | -1\n  subModification: Modification\n}\n>\n\nconst aspectRatio: ModifierModule<AspectRatioOptions, AspectRatioState> = {\n  start (arg) {\n    const { state, rect, edges: originalEdges, pageCoords: coords } = arg\n    let { ratio } = state.options\n    const { equalDelta, modifiers } = state.options\n\n    if (ratio === 'preserve') {\n      ratio = rect.width / rect.height\n    }\n\n    state.startCoords = extend({}, coords)\n    state.startRect = extend({}, rect)\n    state.ratio = ratio\n    state.equalDelta = equalDelta\n\n    const linkedEdges = (state.linkedEdges = {\n      top: originalEdges.top || (originalEdges.left && !originalEdges.bottom),\n      left: originalEdges.left || (originalEdges.top && !originalEdges.right),\n      bottom: originalEdges.bottom || (originalEdges.right && !originalEdges.top),\n      right: originalEdges.right || (originalEdges.bottom && !originalEdges.left),\n    })\n\n    state.xIsPrimaryAxis = !!(originalEdges.left || originalEdges.right)\n\n    if (state.equalDelta) {\n      state.edgeSign = ((linkedEdges.left ? 1 : -1) * (linkedEdges.top ? 1 : -1)) as 1 | -1\n    } else {\n      const negativeSecondaryEdge = state.xIsPrimaryAxis ? linkedEdges.top : linkedEdges.left\n      state.edgeSign = negativeSecondaryEdge ? -1 : 1\n    }\n\n    extend(arg.edges, linkedEdges)\n\n    if (!modifiers || !modifiers.length) return\n\n    const subModification = new Modification(arg.interaction)\n\n    subModification.copyFrom(arg.interaction.modification)\n    subModification.prepareStates(modifiers)\n\n    state.subModification = subModification\n    subModification.startAll({ ...arg })\n  },\n\n  set (arg) {\n    const { state, rect, coords } = arg\n    const initialCoords = extend({}, coords)\n    const aspectMethod = state.equalDelta ? setEqualDelta : setRatio\n\n    aspectMethod(state, state.xIsPrimaryAxis, coords, rect)\n\n    if (!state.subModification) {\n      return null\n    }\n\n    const correctedRect = extend({}, rect)\n\n    addEdges(state.linkedEdges, correctedRect, {\n      x: coords.x - initialCoords.x,\n      y: coords.y - initialCoords.y,\n    })\n\n    const result = state.subModification.setAll({\n      ...arg,\n      rect: correctedRect,\n      edges: state.linkedEdges,\n      pageCoords: coords,\n      prevCoords: coords,\n      prevRect: correctedRect,\n    })\n\n    const { delta } = result\n\n    if (result.changed) {\n      const xIsCriticalAxis = Math.abs(delta.x) > Math.abs(delta.y)\n\n      // do aspect modification again with critical edge axis as primary\n      aspectMethod(state, xIsCriticalAxis, result.coords, result.rect)\n      extend(coords, result.coords)\n    }\n\n    return result.eventProps\n  },\n\n  defaults: {\n    ratio: 'preserve',\n    equalDelta: false,\n    modifiers: [],\n    enabled: false,\n  },\n}\n\nfunction setEqualDelta ({ startCoords, edgeSign }: AspectRatioState, xIsPrimaryAxis: boolean, coords: Point) {\n  if (xIsPrimaryAxis) {\n    coords.y = startCoords.y + (coords.x - startCoords.x) * edgeSign\n  } else {\n    coords.x = startCoords.x + (coords.y - startCoords.y) * edgeSign\n  }\n}\n\nfunction setRatio (\n  { startRect, startCoords, ratio, edgeSign }: AspectRatioState,\n  xIsPrimaryAxis: boolean,\n  coords: Point,\n  rect: Rect,\n) {\n  if (xIsPrimaryAxis) {\n    const newHeight = rect.width / ratio\n\n    coords.y = startCoords.y + (newHeight - startRect.height) * edgeSign\n  } else {\n    const newWidth = rect.height * ratio\n\n    coords.x = startCoords.x + (newWidth - startRect.width) * edgeSign\n  }\n}\n\nexport default makeModifier(aspectRatio, 'aspectRatio')\nexport { aspectRatio }\n","import type { ModifierFunction } from '@interactjs/modifiers/base'\n\nconst noop = ((() => {}) as unknown) as ModifierFunction<any, any, 'noop'>\n\nnoop._defaults = {}\n\nexport default noop\n","import type Interaction from '@interactjs/core/Interaction'\nimport type { RectResolvable, Rect, Point } from '@interactjs/types/index'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport type { ModifierArg, ModifierModule, ModifierState } from '../base'\nimport { makeModifier } from '../base'\n\nexport interface RestrictOptions {\n  // where to drag over\n  restriction: RectResolvable<[number, number, Interaction]>\n  // what part of self is allowed to drag over\n  elementRect: Rect\n  offset: Rect\n  // restrict just before the end drag\n  endOnly: boolean\n  enabled?: boolean\n}\n\nexport type RestrictState = ModifierState<\nRestrictOptions,\n{\n  offset: Rect\n}\n>\n\nfunction start ({ rect, startOffset, state, interaction, pageCoords }: ModifierArg<RestrictState>) {\n  const { options } = state\n  const { elementRect } = options\n  const offset: Rect = extend(\n    {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n    },\n    options.offset || {},\n  )\n\n  if (rect && elementRect) {\n    const restriction = getRestrictionRect(options.restriction, interaction, pageCoords)\n\n    if (restriction) {\n      const widthDiff = restriction.right - restriction.left - rect.width\n      const heightDiff = restriction.bottom - restriction.top - rect.height\n\n      if (widthDiff < 0) {\n        offset.left += widthDiff\n        offset.right += widthDiff\n      }\n      if (heightDiff < 0) {\n        offset.top += heightDiff\n        offset.bottom += heightDiff\n      }\n    }\n\n    offset.left += startOffset.left - rect.width * elementRect.left\n    offset.top += startOffset.top - rect.height * elementRect.top\n\n    offset.right += startOffset.right - rect.width * (1 - elementRect.right)\n    offset.bottom += startOffset.bottom - rect.height * (1 - elementRect.bottom)\n  }\n\n  state.offset = offset\n}\n\nfunction set ({ coords, interaction, state }: ModifierArg<RestrictState>) {\n  const { options, offset } = state\n\n  const restriction = getRestrictionRect(options.restriction, interaction, coords)\n\n  if (!restriction) return\n\n  const rect = rectUtils.xywhToTlbr(restriction)\n\n  coords.x = Math.max(Math.min(rect.right - offset.right, coords.x), rect.left + offset.left)\n  coords.y = Math.max(Math.min(rect.bottom - offset.bottom, coords.y), rect.top + offset.top)\n}\n\nexport function getRestrictionRect (\n  value: RectResolvable<[number, number, Interaction]>,\n  interaction: Interaction,\n  coords?: Point,\n) {\n  if (is.func(value)) {\n    return rectUtils.resolveRectLike(value, interaction.interactable, interaction.element, [\n      coords.x,\n      coords.y,\n      interaction,\n    ])\n  } else {\n    return rectUtils.resolveRectLike(value, interaction.interactable, interaction.element)\n  }\n}\n\nconst defaults: RestrictOptions = {\n  restriction: null,\n  elementRect: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrict: ModifierModule<RestrictOptions, RestrictState> = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrict, 'restrict')\nexport { restrict }\n","// This module adds the options.resize.restrictEdges setting which sets min and\n// max for the top, left, bottom and right edges of the target being resized.\n//\n// interact(target).resize({\n//   edges: { top: true, left: true },\n//   restrictEdges: {\n//     inner: { top: 200, left: 200, right: 400, bottom: 400 },\n//     outer: { top:   0, left:   0, right: 600, bottom: 600 },\n//   },\n// })\n\nimport type { Point, Rect } from '@interactjs/types/index'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport type { ModifierArg, ModifierState } from '../base'\nimport { makeModifier } from '../base'\n\nimport type { RestrictOptions } from './pointer'\nimport { getRestrictionRect } from './pointer'\n\nexport interface RestrictEdgesOptions {\n  inner: RestrictOptions['restriction']\n  outer: RestrictOptions['restriction']\n  offset?: RestrictOptions['offset']\n  endOnly: boolean\n  enabled?: boolean\n}\n\nexport type RestrictEdgesState = ModifierState<\nRestrictEdgesOptions,\n{\n  inner: Rect\n  outer: Rect\n  offset: RestrictEdgesOptions['offset']\n}\n>\n\nconst noInner = { top: +Infinity, left: +Infinity, bottom: -Infinity, right: -Infinity }\nconst noOuter = { top: -Infinity, left: -Infinity, bottom: +Infinity, right: +Infinity }\n\nfunction start ({ interaction, startOffset, state }: ModifierArg<RestrictEdgesState>) {\n  const { options } = state\n  let offset: Point\n\n  if (options) {\n    const offsetRect = getRestrictionRect(options.offset, interaction, interaction.coords.start.page)\n\n    offset = rectUtils.rectToXY(offsetRect)\n  }\n\n  offset = offset || { x: 0, y: 0 }\n\n  state.offset = {\n    top: offset.y + startOffset.top,\n    left: offset.x + startOffset.left,\n    bottom: offset.y - startOffset.bottom,\n    right: offset.x - startOffset.right,\n  }\n}\n\nfunction set ({ coords, edges, interaction, state }: ModifierArg<RestrictEdgesState>) {\n  const { offset, options } = state\n\n  if (!edges) {\n    return\n  }\n\n  const page = extend({}, coords)\n  const inner = getRestrictionRect(options.inner, interaction, page) || ({} as Rect)\n  const outer = getRestrictionRect(options.outer, interaction, page) || ({} as Rect)\n\n  fixRect(inner, noInner)\n  fixRect(outer, noOuter)\n\n  if (edges.top) {\n    coords.y = Math.min(Math.max(outer.top + offset.top, page.y), inner.top + offset.top)\n  } else if (edges.bottom) {\n    coords.y = Math.max(Math.min(outer.bottom + offset.bottom, page.y), inner.bottom + offset.bottom)\n  }\n  if (edges.left) {\n    coords.x = Math.min(Math.max(outer.left + offset.left, page.x), inner.left + offset.left)\n  } else if (edges.right) {\n    coords.x = Math.max(Math.min(outer.right + offset.right, page.x), inner.right + offset.right)\n  }\n}\n\nfunction fixRect (rect: Rect, defaults: Rect) {\n  for (const edge of ['top', 'left', 'bottom', 'right']) {\n    if (!(edge in rect)) {\n      rect[edge] = defaults[edge]\n    }\n  }\n\n  return rect\n}\n\nconst defaults: RestrictEdgesOptions = {\n  inner: null,\n  outer: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrictEdges = {\n  noInner,\n  noOuter,\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrictEdges, 'restrictEdges')\nexport { restrictEdges }\n","import extend from '@interactjs/utils/extend'\n\nimport { makeModifier } from '../base'\n\nimport { restrict } from './pointer'\n\nconst defaults = extend(\n  {\n    get elementRect () {\n      return { top: 0, left: 0, bottom: 1, right: 1 }\n    },\n    set elementRect (_) {},\n  },\n  restrict.defaults,\n)\n\nconst restrictRect = {\n  start: restrict.start,\n  set: restrict.set,\n  defaults,\n}\n\nexport default makeModifier(restrictRect, 'restrictRect')\nexport { restrictRect }\n","import type { Point, Rect, Size } from '@interactjs/types/index'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport type { ModifierArg, ModifierState } from '../base'\nimport { makeModifier } from '../base'\n\nimport type { RestrictEdgesState } from './edges'\nimport { restrictEdges } from './edges'\nimport type { RestrictOptions } from './pointer'\nimport { getRestrictionRect } from './pointer'\n\nconst noMin = { width: -Infinity, height: -Infinity }\nconst noMax = { width: +Infinity, height: +Infinity }\n\nexport interface RestrictSizeOptions {\n  min?: Size | Point | RestrictOptions['restriction']\n  max?: Size | Point | RestrictOptions['restriction']\n  endOnly: boolean\n  enabled?: boolean\n}\n\nfunction start (arg: ModifierArg<RestrictEdgesState>) {\n  return restrictEdges.start(arg)\n}\n\nexport type RestrictSizeState = RestrictEdgesState &\nModifierState<\nRestrictSizeOptions & { inner: Rect, outer: Rect },\n{\n  min: Rect\n  max: Rect\n}\n>\n\nfunction set (arg: ModifierArg<RestrictSizeState>) {\n  const { interaction, state, rect, edges } = arg\n  const { options } = state\n\n  if (!edges) {\n    return\n  }\n\n  const minSize =\n    rectUtils.tlbrToXywh(getRestrictionRect(options.min as any, interaction, arg.coords)) || noMin\n  const maxSize =\n    rectUtils.tlbrToXywh(getRestrictionRect(options.max as any, interaction, arg.coords)) || noMax\n\n  state.options = {\n    endOnly: options.endOnly,\n    inner: extend({}, restrictEdges.noInner),\n    outer: extend({}, restrictEdges.noOuter),\n  }\n\n  if (edges.top) {\n    state.options.inner.top = rect.bottom - minSize.height\n    state.options.outer.top = rect.bottom - maxSize.height\n  } else if (edges.bottom) {\n    state.options.inner.bottom = rect.top + minSize.height\n    state.options.outer.bottom = rect.top + maxSize.height\n  }\n  if (edges.left) {\n    state.options.inner.left = rect.right - minSize.width\n    state.options.outer.left = rect.right - maxSize.width\n  } else if (edges.right) {\n    state.options.inner.right = rect.left + minSize.width\n    state.options.outer.right = rect.left + maxSize.width\n  }\n\n  restrictEdges.set(arg)\n\n  state.options = options\n}\n\nconst defaults: RestrictSizeOptions = {\n  min: null,\n  max: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrictSize = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrictSize, 'restrictSize')\nexport { restrictSize }\n","import type { Interaction, InteractionProxy } from '@interactjs/core/Interaction'\nimport type { ActionName } from '@interactjs/core/scope'\nimport type { Point, RectResolvable, Element } from '@interactjs/types/index'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport hypot from '@interactjs/utils/hypot'\nimport is from '@interactjs/utils/is'\nimport { resolveRectLike, rectToXY } from '@interactjs/utils/rect'\n\nimport type { ModifierArg, ModifierState } from '../base'\nimport { makeModifier } from '../base'\n\nexport interface Offset {\n  x: number\n  y: number\n  index: number\n  relativePoint?: Point | null\n}\n\nexport interface SnapPosition {\n  x?: number\n  y?: number\n  range?: number\n  offset?: Offset\n  [index: string]: any\n}\n\nexport type SnapFunction = (\n  x: number,\n  y: number,\n  interaction: InteractionProxy<ActionName>,\n  offset: Offset,\n  index: number,\n) => SnapPosition\nexport type SnapTarget = SnapPosition | SnapFunction\nexport interface SnapOptions {\n  targets: SnapTarget[] | null\n  // target range\n  range: number\n  // self points for snapping. [0,0] = top left, [1,1] = bottom right\n  relativePoints: Point[] | null\n  // startCoords = offset snapping from drag start page position\n  offset: Point | RectResolvable<[Interaction]> | 'startCoords' | null\n  offsetWithOrigin?: boolean\n  origin: RectResolvable<[Element]> | Point | null\n  endOnly?: boolean\n  enabled?: boolean\n}\n\nexport type SnapState = ModifierState<\nSnapOptions,\n{\n  offsets?: Offset[]\n  closest?: any\n  targetFields?: string[][]\n}\n>\n\nfunction start (arg: ModifierArg<SnapState>) {\n  const { interaction, interactable, element, rect, state, startOffset } = arg\n  const { options } = state\n  const origin = options.offsetWithOrigin ? getOrigin(arg) : { x: 0, y: 0 }\n\n  let snapOffset: Point\n\n  if (options.offset === 'startCoords') {\n    snapOffset = {\n      x: interaction.coords.start.page.x,\n      y: interaction.coords.start.page.y,\n    }\n  } else {\n    const offsetRect = resolveRectLike(options.offset as any, interactable, element, [interaction])\n\n    snapOffset = rectToXY(offsetRect) || { x: 0, y: 0 }\n    snapOffset.x += origin.x\n    snapOffset.y += origin.y\n  }\n\n  const { relativePoints } = options\n\n  state.offsets =\n    rect && relativePoints && relativePoints.length\n      ? relativePoints.map((relativePoint, index) => ({\n        index,\n        relativePoint,\n        x: startOffset.left - rect.width * relativePoint.x + snapOffset.x,\n        y: startOffset.top - rect.height * relativePoint.y + snapOffset.y,\n      }))\n      : [\n        {\n          index: 0,\n          relativePoint: null,\n          x: snapOffset.x,\n          y: snapOffset.y,\n        },\n      ]\n}\n\nfunction set (arg: ModifierArg<SnapState>) {\n  const { interaction, coords, state } = arg\n  const { options, offsets } = state\n\n  const origin = getOriginXY(interaction.interactable, interaction.element, interaction.prepared.name)\n  const page = extend({}, coords)\n  const targets = []\n\n  if (!options.offsetWithOrigin) {\n    page.x -= origin.x\n    page.y -= origin.y\n  }\n\n  for (const offset of offsets) {\n    const relativeX = page.x - offset.x\n    const relativeY = page.y - offset.y\n\n    for (let index = 0, len = options.targets.length; index < len; index++) {\n      const snapTarget = options.targets[index]\n      let target: SnapPosition\n\n      if (is.func(snapTarget)) {\n        target = snapTarget(relativeX, relativeY, interaction._proxy, offset, index)\n      } else {\n        target = snapTarget\n      }\n\n      if (!target) {\n        continue\n      }\n\n      targets.push({\n        x: (is.number(target.x) ? target.x : relativeX) + offset.x,\n        y: (is.number(target.y) ? target.y : relativeY) + offset.y,\n\n        range: is.number(target.range) ? target.range : options.range,\n        source: snapTarget,\n        index,\n        offset,\n      })\n    }\n  }\n\n  const closest = {\n    target: null,\n    inRange: false,\n    distance: 0,\n    range: 0,\n    delta: { x: 0, y: 0 },\n  }\n\n  for (const target of targets) {\n    const range = target.range\n    const dx = target.x - page.x\n    const dy = target.y - page.y\n    const distance = hypot(dx, dy)\n    let inRange = distance <= range\n\n    // Infinite targets count as being out of range\n    // compared to non infinite ones that are in range\n    if (range === Infinity && closest.inRange && closest.range !== Infinity) {\n      inRange = false\n    }\n\n    if (\n      !closest.target ||\n      (inRange\n        ? // is the closest target in range?\n        closest.inRange && range !== Infinity\n          ? // the pointer is relatively deeper in this target\n          distance / range < closest.distance / closest.range\n          : // this target has Infinite range and the closest doesn't\n          (range === Infinity && closest.range !== Infinity) ||\n            // OR this target is closer that the previous closest\n            distance < closest.distance\n        : // The other is not in range and the pointer is closer to this target\n        !closest.inRange && distance < closest.distance)\n    ) {\n      closest.target = target\n      closest.distance = distance\n      closest.range = range\n      closest.inRange = inRange\n      closest.delta.x = dx\n      closest.delta.y = dy\n    }\n  }\n\n  if (closest.inRange) {\n    coords.x = closest.target.x\n    coords.y = closest.target.y\n  }\n\n  state.closest = closest\n  return closest\n}\n\nfunction getOrigin (arg: Partial<ModifierArg<SnapState>>) {\n  const { element } = arg.interaction\n  const optionsOrigin = rectToXY(resolveRectLike(arg.state.options.origin as any, null, null, [element]))\n  const origin = optionsOrigin || getOriginXY(arg.interactable, element, arg.interaction.prepared.name)\n\n  return origin\n}\n\nconst defaults: SnapOptions = {\n  range: Infinity,\n  targets: null,\n  offset: null,\n  offsetWithOrigin: true,\n  origin: null,\n  relativePoints: null,\n  endOnly: false,\n  enabled: false,\n}\nconst snap = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(snap, 'snap')\nexport { snap }\n","// This module allows snapping of the size of targets during resize\n// interactions.\n\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\nimport type { ModifierArg } from '../base'\nimport { makeModifier } from '../base'\n\nimport type { SnapOptions, SnapState } from './pointer'\nimport { snap } from './pointer'\n\nexport type SnapSizeOptions = Pick<SnapOptions, 'targets' | 'offset' | 'endOnly' | 'range' | 'enabled'>\n\nfunction start (arg: ModifierArg<SnapState>) {\n  const { state, edges } = arg\n  const { options } = state\n\n  if (!edges) {\n    return null\n  }\n\n  arg.state = {\n    options: {\n      targets: null,\n      relativePoints: [\n        {\n          x: edges.left ? 0 : 1,\n          y: edges.top ? 0 : 1,\n        },\n      ],\n      offset: options.offset || 'self',\n      origin: { x: 0, y: 0 },\n      range: options.range,\n    },\n  }\n\n  state.targetFields = state.targetFields || [\n    ['width', 'height'],\n    ['x', 'y'],\n  ]\n\n  snap.start(arg)\n  state.offsets = arg.state.offsets\n\n  arg.state = state\n}\n\nfunction set (arg) {\n  const { interaction, state, coords } = arg\n  const { options, offsets } = state\n  const relative = {\n    x: coords.x - offsets[0].x,\n    y: coords.y - offsets[0].y,\n  }\n\n  state.options = extend({}, options)\n  state.options.targets = []\n\n  for (const snapTarget of options.targets || []) {\n    let target\n\n    if (is.func(snapTarget)) {\n      target = snapTarget(relative.x, relative.y, interaction)\n    } else {\n      target = snapTarget\n    }\n\n    if (!target) {\n      continue\n    }\n\n    for (const [xField, yField] of state.targetFields) {\n      if (xField in target || yField in target) {\n        target.x = target[xField]\n        target.y = target[yField]\n\n        break\n      }\n    }\n\n    state.options.targets.push(target)\n  }\n\n  const returnValue = snap.set(arg)\n\n  state.options = options\n\n  return returnValue\n}\n\nconst defaults: SnapSizeOptions = {\n  range: Infinity,\n  targets: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst snapSize = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(snapSize, 'snapSize')\nexport { snapSize }\n","/**\n * @module modifiers/snapEdges\n *\n * @description\n * WOW> This module allows snapping of the edges of targets during resize\n * interactions.\n *\n * ```js\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [interact.snappers.grid({ x: 100, y: 50 })],\n *   },\n * })\n *\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [\n *       interact.snappers.grid({\n *        top: 50,\n *        left: 50,\n *        bottom: 100,\n *        right: 100,\n *       }),\n *     ],\n *   },\n * })\n * ```\n */\n\nimport clone from '@interactjs/utils/clone'\nimport extend from '@interactjs/utils/extend'\n\nimport type { ModifierArg, ModifierModule } from '../base'\nimport { makeModifier } from '../base'\n\nimport type { SnapOptions, SnapState } from './pointer'\nimport { snapSize } from './size'\n\nexport type SnapEdgesOptions = Pick<SnapOptions, 'targets' | 'range' | 'offset' | 'endOnly' | 'enabled'>\n\nfunction start (arg: ModifierArg<SnapState>) {\n  const { edges } = arg\n\n  if (!edges) {\n    return null\n  }\n\n  arg.state.targetFields = arg.state.targetFields || [\n    [edges.left ? 'left' : 'right', edges.top ? 'top' : 'bottom'],\n  ]\n\n  return snapSize.start(arg)\n}\n\nconst snapEdges: ModifierModule<SnapEdgesOptions, SnapState, ReturnType<typeof snapSize.set>> = {\n  start,\n  set: snapSize.set,\n  defaults: extend(clone(snapSize.defaults), {\n    targets: null,\n    range: null,\n    offset: { x: 0, y: 0 },\n  } as const),\n}\n\nexport default makeModifier(snapEdges, 'snapEdges')\nexport { snapEdges }\n","/* eslint-disable node/no-extraneous-import, import/no-unresolved */\nimport aspectRatio from './aspectRatio'\nimport avoid from './avoid/avoid'\nimport restrictEdges from './restrict/edges'\nimport restrict from './restrict/pointer'\nimport restrictRect from './restrict/rect'\nimport restrictSize from './restrict/size'\nimport rubberband from './rubberband/rubberband'\nimport snapEdges from './snap/edges'\nimport snap from './snap/pointer'\nimport snapSize from './snap/size'\nimport spring from './spring/spring'\nimport transform from './transform/transform'\n\nexport default {\n  aspectRatio,\n  restrictEdges,\n  restrict,\n  restrictRect,\n  restrictSize,\n  snapEdges,\n  snap,\n  snapSize,\n\n  spring,\n  avoid,\n  transform,\n  rubberband,\n}\n","import type { Plugin } from '@interactjs/core/scope'\nimport snappers from '@interactjs/snappers/plugin'\n\nimport all from './all'\nimport base from './base'\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    modifiers: typeof all\n  }\n}\n\nconst modifiers: Plugin = {\n  id: 'modifiers',\n  install (scope) {\n    const { interactStatic: interact } = scope\n\n    scope.usePlugin(base)\n    scope.usePlugin(snappers)\n\n    interact.modifiers = all\n\n    // for backwrads compatibility\n    for (const type in all) {\n      const { _defaults, _methods } = all[type as keyof typeof all]\n\n      ;(_defaults as any)._methods = _methods\n      ;(scope.defaults.perAction as any)[type] = _defaults\n    }\n  },\n}\n\nexport default modifiers\n","import { BaseEvent } from '@interactjs/core/BaseEvent'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { PointerEventType, PointerType, Point } from '@interactjs/types/index'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nexport default class PointerEvent<T extends string = any> extends BaseEvent<never> {\n  type: T\n  originalEvent: PointerEventType\n  pointerId: number\n  pointerType: string\n  double: boolean\n  pageX: number\n  pageY: number\n  clientX: number\n  clientY: number\n  dt: number\n  eventable: any;\n  [key: string]: any\n\n  /** */\n  constructor (\n    type: T,\n    pointer: PointerType | PointerEvent<any>,\n    event: PointerEventType,\n    eventTarget: Node,\n    interaction: Interaction<never>,\n    timeStamp: number,\n  ) {\n    super(interaction)\n    pointerUtils.pointerExtend(this, event)\n\n    if (event !== pointer) {\n      pointerUtils.pointerExtend(this, pointer)\n    }\n\n    this.timeStamp = timeStamp\n    this.originalEvent = event\n    this.type = type\n    this.pointerId = pointerUtils.getPointerId(pointer)\n    this.pointerType = pointerUtils.getPointerType(pointer)\n    this.target = eventTarget\n    this.currentTarget = null\n\n    if (type === 'tap') {\n      const pointerIndex = interaction.getPointerIndex(pointer)\n      this.dt = this.timeStamp - interaction.pointers[pointerIndex].downTime\n\n      const interval = this.timeStamp - interaction.tapTime\n\n      this.double = !!(\n        interaction.prevTap &&\n        interaction.prevTap.type !== 'doubletap' &&\n        interaction.prevTap.target === this.target &&\n        interval < 500\n      )\n    } else if (type === 'doubletap') {\n      this.dt = (pointer as PointerEvent<'tap'>).timeStamp - interaction.tapTime\n    }\n  }\n\n  _subtractOrigin ({ x: originX, y: originY }: Point) {\n    this.pageX -= originX\n    this.pageY -= originY\n    this.clientX -= originX\n    this.clientY -= originY\n\n    return this\n  }\n\n  _addOrigin ({ x: originX, y: originY }: Point) {\n    this.pageX += originX\n    this.pageY += originY\n    this.clientX += originX\n    this.clientY += originY\n\n    return this\n  }\n\n  /**\n   * Prevent the default behaviour of the original Event\n   */\n  preventDefault () {\n    this.originalEvent.preventDefault()\n  }\n}\n\nexport { PointerEvent }\n","import type { Eventable } from '@interactjs/core/Eventable'\nimport type { Interaction } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type { Point, PointerType, PointerEventType, Element } from '@interactjs/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\n\nimport { PointerEvent } from './PointerEvent'\n\nexport type EventTargetList = Array<{\n  node: Node\n  eventable: Eventable\n  props: { [key: string]: any }\n}>\n\nexport interface PointerEventOptions extends PerActionDefaults {\n  enabled?: undefined // not used\n  holdDuration?: number\n  ignoreFrom?: any\n  allowFrom?: any\n  origin?: Point | string | Element\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    pointerEvents: typeof pointerEvents\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    prevTap?: PointerEvent<string>\n    tapTime?: number\n  }\n}\n\ndeclare module '@interactjs/core/PointerInfo' {\n  interface PointerInfo {\n    hold?: {\n      duration: number\n      timeout: any\n    }\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    pointerEvents: Options\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'pointerEvents:new': { pointerEvent: PointerEvent<any> }\n    'pointerEvents:fired': {\n      interaction: Interaction<null>\n      pointer: PointerType | PointerEvent<any>\n      event: PointerEventType | PointerEvent<any>\n      eventTarget: Node\n      pointerEvent: PointerEvent<any>\n      targets?: EventTargetList\n      type: string\n    }\n    'pointerEvents:collect-targets': {\n      interaction: Interaction<any>\n      pointer: PointerType | PointerEvent<any>\n      event: PointerEventType | PointerEvent<any>\n      eventTarget: Node\n      targets?: EventTargetList\n      type: string\n      path: Node[]\n      node: null\n    }\n  }\n}\n\nconst defaults: PointerEventOptions = {\n  holdDuration: 600,\n  ignoreFrom: null,\n  allowFrom: null,\n  origin: { x: 0, y: 0 },\n}\n\nconst pointerEvents: Plugin = {\n  id: 'pointer-events/base',\n  before: ['inertia', 'modifiers', 'auto-start', 'actions'],\n  install,\n  listeners: {\n    'interactions:new': addInteractionProps,\n    'interactions:update-pointer': addHoldInfo,\n    'interactions:move': moveAndClearHold,\n    'interactions:down': (arg, scope) => {\n      downAndStartHold(arg, scope)\n      fire(arg, scope)\n    },\n    'interactions:up': (arg, scope) => {\n      clearHold(arg)\n      fire(arg, scope)\n      tapAfterUp(arg, scope)\n    },\n    'interactions:cancel': (arg, scope) => {\n      clearHold(arg)\n      fire(arg, scope)\n    },\n  },\n  PointerEvent,\n  fire,\n  collectEventTargets,\n  defaults,\n  types: {\n    down: true,\n    move: true,\n    up: true,\n    cancel: true,\n    tap: true,\n    doubletap: true,\n    hold: true,\n  } as { [type: string]: true },\n}\n\nfunction fire<T extends string> (\n  arg: {\n    pointer: PointerType | PointerEvent<any>\n    event: PointerEventType | PointerEvent<any>\n    eventTarget: Node\n    interaction: Interaction<never>\n    type: T\n    targets?: EventTargetList\n  },\n  scope: Scope,\n) {\n  const { interaction, pointer, event, eventTarget, type, targets = collectEventTargets(arg, scope) } = arg\n\n  const pointerEvent = new PointerEvent(type, pointer, event, eventTarget, interaction, scope.now())\n\n  scope.fire('pointerEvents:new', { pointerEvent })\n\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    targets,\n    type,\n    pointerEvent,\n  }\n\n  for (let i = 0; i < targets.length; i++) {\n    const target = targets[i]\n\n    for (const prop in target.props || {}) {\n      ;(pointerEvent as any)[prop] = target.props[prop]\n    }\n\n    const origin = getOriginXY(target.eventable, target.node)\n\n    pointerEvent._subtractOrigin(origin)\n    pointerEvent.eventable = target.eventable\n    pointerEvent.currentTarget = target.node\n\n    target.eventable.fire(pointerEvent)\n\n    pointerEvent._addOrigin(origin)\n\n    if (\n      pointerEvent.immediatePropagationStopped ||\n      (pointerEvent.propagationStopped &&\n        i + 1 < targets.length &&\n        targets[i + 1].node !== pointerEvent.currentTarget)\n    ) {\n      break\n    }\n  }\n\n  scope.fire('pointerEvents:fired', signalArg)\n\n  if (type === 'tap') {\n    // if pointerEvent should make a double tap, create and fire a doubletap\n    // PointerEvent and use that as the prevTap\n    const prevTap = pointerEvent.double\n      ? fire(\n        {\n          interaction,\n          pointer,\n          event,\n          eventTarget,\n          type: 'doubletap',\n        },\n        scope,\n      )\n      : pointerEvent\n\n    interaction.prevTap = prevTap\n    interaction.tapTime = prevTap.timeStamp\n  }\n\n  return pointerEvent\n}\n\nfunction collectEventTargets<T extends string> (\n  {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type,\n  }: {\n    interaction: Interaction<any>\n    pointer: PointerType | PointerEvent<any>\n    event: PointerEventType | PointerEvent<any>\n    eventTarget: Node\n    type: T\n  },\n  scope: Scope,\n) {\n  const pointerIndex = interaction.getPointerIndex(pointer)\n  const pointerInfo = interaction.pointers[pointerIndex]\n\n  // do not fire a tap event if the pointer was moved before being lifted\n  if (\n    type === 'tap' &&\n    (interaction.pointerWasMoved ||\n      // or if the pointerup target is different to the pointerdown target\n      !(pointerInfo && pointerInfo.downTarget === eventTarget))\n  ) {\n    return []\n  }\n\n  const path = domUtils.getPath(eventTarget as Element | Document)\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type,\n    path,\n    targets: [] as EventTargetList,\n    node: null,\n  }\n\n  for (const node of path) {\n    signalArg.node = node\n\n    scope.fire('pointerEvents:collect-targets', signalArg)\n  }\n\n  if (type === 'hold') {\n    signalArg.targets = signalArg.targets.filter(\n      (target) => target.eventable.options.holdDuration === interaction.pointers[pointerIndex]?.hold.duration,\n    )\n  }\n\n  return signalArg.targets\n}\n\nfunction addInteractionProps ({ interaction }) {\n  interaction.prevTap = null // the most recent tap event on this interaction\n  interaction.tapTime = 0 // time of the most recent tap event\n}\n\nfunction addHoldInfo ({ down, pointerInfo }: SignalArgs['interactions:update-pointer']) {\n  if (!down && pointerInfo.hold) {\n    return\n  }\n\n  pointerInfo.hold = { duration: Infinity, timeout: null }\n}\n\nfunction clearHold ({ interaction, pointerIndex }) {\n  const hold = interaction.pointers[pointerIndex].hold\n\n  if (hold && hold.timeout) {\n    clearTimeout(hold.timeout)\n    hold.timeout = null\n  }\n}\n\nfunction moveAndClearHold (arg: SignalArgs['interactions:move'], scope: Scope) {\n  const { interaction, pointer, event, eventTarget, duplicate } = arg\n\n  if (!duplicate && (!interaction.pointerIsDown || interaction.pointerWasMoved)) {\n    if (interaction.pointerIsDown) {\n      clearHold(arg)\n    }\n\n    fire(\n      {\n        interaction,\n        pointer,\n        event,\n        eventTarget: eventTarget as Element,\n        type: 'move',\n      },\n      scope,\n    )\n  }\n}\n\nfunction downAndStartHold (\n  { interaction, pointer, event, eventTarget, pointerIndex }: SignalArgs['interactions:down'],\n  scope: Scope,\n) {\n  const timer = interaction.pointers[pointerIndex].hold\n  const path = domUtils.getPath(eventTarget as Element | Document)\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type: 'hold',\n    targets: [] as EventTargetList,\n    path,\n    node: null,\n  }\n\n  for (const node of path) {\n    signalArg.node = node\n\n    scope.fire('pointerEvents:collect-targets', signalArg)\n  }\n\n  if (!signalArg.targets.length) return\n\n  let minDuration = Infinity\n\n  for (const target of signalArg.targets) {\n    const holdDuration = target.eventable.options.holdDuration\n\n    if (holdDuration < minDuration) {\n      minDuration = holdDuration\n    }\n  }\n\n  timer.duration = minDuration\n  timer.timeout = setTimeout(() => {\n    fire(\n      {\n        interaction,\n        eventTarget,\n        pointer,\n        event,\n        type: 'hold',\n      },\n      scope,\n    )\n  }, minDuration)\n}\n\nfunction tapAfterUp (\n  { interaction, pointer, event, eventTarget }: SignalArgs['interactions:up'],\n  scope: Scope,\n) {\n  if (!interaction.pointerWasMoved) {\n    fire({ interaction, eventTarget, pointer, event, type: 'tap' }, scope)\n  }\n}\n\nfunction install (scope: Scope) {\n  scope.pointerEvents = pointerEvents\n  scope.defaults.actions.pointerEvents = pointerEvents.defaults\n  extend(scope.actions.phaselessTypes, pointerEvents.types)\n}\n\nexport default pointerEvents\n","import type Interaction from '@interactjs/core/Interaction'\nimport type { ListenerMap, Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\n\nimport type PointerEvent from './PointerEvent'\nimport basePlugin from './base'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    holdIntervalHandle?: any\n  }\n}\n\ndeclare module '@interactjs/pointer-events/PointerEvent' {\n  interface PointerEvent<T extends string = any> {\n    count?: number\n  }\n}\n\ndeclare module '@interactjs/pointer-events/base' {\n  interface PointerEventOptions {\n    holdRepeatInterval?: number\n  }\n}\n\nfunction install (scope: Scope) {\n  scope.usePlugin(basePlugin)\n\n  const { pointerEvents } = scope\n\n  // don't repeat by default\n  pointerEvents.defaults.holdRepeatInterval = 0\n  pointerEvents.types.holdrepeat = scope.actions.phaselessTypes.holdrepeat = true\n}\n\nfunction onNew ({ pointerEvent }: { pointerEvent: PointerEvent<any> }) {\n  if (pointerEvent.type !== 'hold') return\n\n  pointerEvent.count = (pointerEvent.count || 0) + 1\n}\n\nfunction onFired (\n  { interaction, pointerEvent, eventTarget, targets }: SignalArgs['pointerEvents:fired'],\n  scope: Scope,\n) {\n  if (pointerEvent.type !== 'hold' || !targets.length) return\n\n  // get the repeat interval from the first eventable\n  const interval = targets[0].eventable.options.holdRepeatInterval\n\n  // don't repeat if the interval is 0 or less\n  if (interval <= 0) return\n\n  // set a timeout to fire the holdrepeat event\n  interaction.holdIntervalHandle = setTimeout(() => {\n    scope.pointerEvents.fire(\n      {\n        interaction,\n        eventTarget,\n        type: 'hold',\n        pointer: pointerEvent,\n        event: pointerEvent,\n      },\n      scope,\n    )\n  }, interval)\n}\n\nfunction endHoldRepeat ({ interaction }: { interaction: Interaction }) {\n  // set the interaction's holdStopTime property\n  // to stop further holdRepeat events\n  if (interaction.holdIntervalHandle) {\n    clearInterval(interaction.holdIntervalHandle)\n    interaction.holdIntervalHandle = null\n  }\n}\n\nconst holdRepeat: Plugin = {\n  id: 'pointer-events/holdRepeat',\n  install,\n  listeners: ['move', 'up', 'cancel', 'endall'].reduce(\n    (acc, enderTypes) => {\n      ;(acc as any)[`pointerEvents:${enderTypes}`] = endHoldRepeat\n      return acc\n    },\n    {\n      'pointerEvents:new': onNew,\n      'pointerEvents:fired': onFired,\n    } as ListenerMap,\n  ),\n}\n\nexport default holdRepeat\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Element } from '@interactjs/types/index'\nimport extend from '@interactjs/utils/extend'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    pointerEvents: typeof pointerEventsMethod\n    __backCompatOption: (optionName: string, newValue: any) => any\n  }\n}\n\nfunction install (scope: Scope) {\n  const { Interactable } = scope\n\n  Interactable.prototype.pointerEvents = pointerEventsMethod\n\n  const __backCompatOption = Interactable.prototype._backCompatOption\n\n  Interactable.prototype._backCompatOption = function (optionName, newValue) {\n    const ret = __backCompatOption.call(this, optionName, newValue)\n\n    if (ret === this) {\n      this.events.options[optionName] = newValue\n    }\n\n    return ret\n  }\n}\n\nfunction pointerEventsMethod (this: Interactable, options: any) {\n  extend(this.events.options, options)\n\n  return this\n}\n\nconst plugin: Plugin = {\n  id: 'pointer-events/interactableTargets',\n  install,\n  listeners: {\n    'pointerEvents:collect-targets': ({ targets, node, type, eventTarget }, scope) => {\n      scope.interactables.forEachMatch(node, (interactable: Interactable) => {\n        const eventable = interactable.events\n        const options = eventable.options\n\n        if (\n          eventable.types[type] &&\n          eventable.types[type].length &&\n          interactable.testIgnoreAllow(options, node, eventTarget)\n        ) {\n          targets.push({\n            node,\n            eventable,\n            props: { interactable },\n          })\n        }\n      })\n    },\n\n    'interactable:new': ({ interactable }) => {\n      interactable.events.getRect = function (element: Element) {\n        return interactable.getRect(element)\n      }\n    },\n\n    'interactable:set': ({ interactable, options }, scope) => {\n      extend(interactable.events.options, scope.pointerEvents.defaults)\n      extend(interactable.events.options, options.pointerEvents || {})\n    },\n  },\n}\n\nexport default plugin\n","import type { Plugin } from '@interactjs/core/scope'\n\nimport * as pointerEvents from './base'\nimport holdRepeat from './holdRepeat'\nimport interactableTargets from './interactableTargets'\n\nconst plugin: Plugin = {\n  id: 'pointer-events',\n  install (scope) {\n    scope.usePlugin(pointerEvents)\n    scope.usePlugin(holdRepeat)\n    scope.usePlugin(interactableTargets)\n  },\n}\n\nexport default plugin\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { ActionProps, DoAnyPhaseArg, Interaction } from '@interactjs/core/Interaction'\nimport type { ActionName, Scope, Plugin } from '@interactjs/core/scope'\nimport type { Element } from '@interactjs/types/index'\nimport * as arr from '@interactjs/utils/arr'\nimport is from '@interactjs/utils/is'\nimport { copyAction } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\nimport { tlbrToXywh } from '@interactjs/utils/rect'\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:before-action-reflow': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-reflow': DoAnyPhaseArg\n    'interactions:after-action-reflow': DoAnyPhaseArg\n  }\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    reflow: <T extends ActionName>(action: ActionProps<T>) => ReturnType<typeof doReflow>\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    _reflowPromise: Promise<void>\n    _reflowResolve: (...args: unknown[]) => void\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface PhaseMap {\n    reflow?: true\n  }\n}\n\nexport function install (scope: Scope) {\n  const {\n    /** @lends Interactable */\n    Interactable,\n  } = scope\n\n  scope.actions.phases.reflow = true\n\n  /**\n   * ```js\n   * const interactable = interact(target)\n   * const drag = { name: drag, axis: 'x' }\n   * const resize = { name: resize, edges: { left: true, bottom: true }\n   *\n   * interactable.reflow(drag)\n   * interactable.reflow(resize)\n   * ```\n   *\n   * Start an action sequence to re-apply modifiers, check drops, etc.\n   *\n   * @param { Object } action The action to begin\n   * @param { string } action.name The name of the action\n   * @returns { Promise } A promise that resolves to the `Interactable` when actions on all targets have ended\n   */\n  Interactable.prototype.reflow = function (action: ActionProps) {\n    return doReflow(this, action, scope)\n  }\n}\n\nfunction doReflow<T extends ActionName> (\n  interactable: Interactable,\n  action: ActionProps<T>,\n  scope: Scope,\n): Promise<Interactable> {\n  const elements = (is.string(interactable.target)\n    ? arr.from(interactable._context.querySelectorAll(interactable.target))\n    : [interactable.target]) as Element[]\n\n  // tslint:disable-next-line variable-name\n  const Promise = (scope.window as any).Promise\n  const promises: Array<Promise<null>> | null = Promise ? [] : null\n\n  for (const element of elements) {\n    const rect = interactable.getRect(element as HTMLElement | SVGElement)\n\n    if (!rect) {\n      break\n    }\n\n    const runningInteraction = arr.find(scope.interactions.list, (interaction: Interaction) => {\n      return (\n        interaction.interacting() &&\n        interaction.interactable === interactable &&\n        interaction.element === element &&\n        interaction.prepared.name === action.name\n      )\n    })\n    let reflowPromise: Promise<null>\n\n    if (runningInteraction) {\n      runningInteraction.move()\n\n      if (promises) {\n        reflowPromise =\n          runningInteraction._reflowPromise ||\n          new Promise((resolve: any) => {\n            runningInteraction._reflowResolve = resolve\n          })\n      }\n    } else {\n      const xywh = tlbrToXywh(rect)\n      const coords = {\n        page: { x: xywh.x, y: xywh.y },\n        client: { x: xywh.x, y: xywh.y },\n        timeStamp: scope.now(),\n      }\n\n      const event = pointerUtils.coordsToEvent(coords)\n      reflowPromise = startReflow<T>(scope, interactable, element, action, event)\n    }\n\n    if (promises) {\n      promises.push(reflowPromise)\n    }\n  }\n\n  return promises && Promise.all(promises).then(() => interactable)\n}\n\nfunction startReflow<T extends ActionName> (\n  scope: Scope,\n  interactable: Interactable,\n  element: Element,\n  action: ActionProps<T>,\n  event: any,\n) {\n  const interaction = scope.interactions.new({ pointerType: 'reflow' })\n  const signalArg = {\n    interaction,\n    event,\n    pointer: event,\n    eventTarget: element,\n    phase: 'reflow',\n  } as const\n\n  interaction.interactable = interactable\n  interaction.element = element\n  interaction.prevEvent = event\n  interaction.updatePointer(event, event, element, true)\n  pointerUtils.setZeroCoords(interaction.coords.delta)\n\n  copyAction(interaction.prepared, action)\n  interaction._doPhase(signalArg)\n\n  const { Promise } = (scope.window as unknown) as { Promise: PromiseConstructor }\n  const reflowPromise = Promise\n    ? new Promise<undefined>((resolve) => {\n      interaction._reflowResolve = resolve\n    })\n    : undefined\n\n  interaction._reflowPromise = reflowPromise\n  interaction.start(action, interactable, element)\n\n  if (interaction._interacting) {\n    interaction.move(signalArg)\n    interaction.end(event)\n  } else {\n    interaction.stop()\n    interaction._reflowResolve()\n  }\n\n  interaction.removePointer(event, event)\n\n  return reflowPromise\n}\n\nconst reflow: Plugin = {\n  id: 'reflow',\n  install,\n  listeners: {\n    // remove completed reflow interactions\n    'interactions:stop': ({ interaction }, scope) => {\n      if (interaction.pointerType === 'reflow') {\n        if (interaction._reflowResolve) {\n          interaction._reflowResolve()\n        }\n\n        arr.remove(scope.interactions.list, interaction)\n      }\n    },\n  },\n}\n\nexport default reflow\n","import actions from '@interactjs/actions/plugin'\nimport autoScroll from '@interactjs/auto-scroll/plugin'\nimport autoStart from '@interactjs/auto-start/plugin'\nimport interactablePreventDefault from '@interactjs/core/interactablePreventDefault'\nimport devTools from '@interactjs/dev-tools/plugin'\nimport inertia from '@interactjs/inertia/plugin'\nimport interact from '@interactjs/interact'\nimport modifiers from '@interactjs/modifiers/plugin'\nimport offset from '@interactjs/offset/plugin'\nimport pointerEvents from '@interactjs/pointer-events/plugin'\nimport reflow from '@interactjs/reflow/plugin'\n\ninteract.use(interactablePreventDefault)\n\ninteract.use(offset)\n\n// pointerEvents\ninteract.use(pointerEvents)\n\n// inertia\ninteract.use(inertia)\n\n// snap, resize, etc.\ninteract.use(modifiers)\n\n// autoStart, hold\ninteract.use(autoStart)\n\n// drag and drop, resize, gesture\ninteract.use(actions)\n\n// autoScroll\ninteract.use(autoScroll)\n\n// reflow\ninteract.use(reflow)\n\n// eslint-disable-next-line no-undef\nif (process.env.NODE_ENV !== 'production') {\n  interact.use(devTools)\n}\n\nexport default interact\n\nif (typeof module === 'object' && !!module) {\n  try {\n    module.exports = interact\n  } catch {}\n}\n\n;(interact as any).default = interact\n","// eslint-disable-next-line import/no-extraneous-dependencies\nimport interact from '@interactjs/interactjs/index'\n\nexport default interact\n\nif (typeof module === 'object' && !!module) {\n  try {\n    module.exports = interact\n  } catch {}\n}\n\n;(interact as any).default = interact\n","\nreturn _$index_79;\n\n});\n","import cuid from \"cuid\"\nimport * as Y from \"yjs\"\nimport { IndexeddbPersistence } from \"y-indexeddb\"\nimport { WebrtcProvider } from \"y-webrtc\"\nimport interact from \"interactjs\"\n\nglobalThis.External = {\n\tcuid,\n\tY,\n\tIndexeddbPersistence,\n\tWebrtcProvider,\n\tinteract,\n}\n"]}